!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(C,e){"use strict";function m(e){return null!=e&&e===e.window}var t=[],i=Object.getPrototypeOf,o=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,s=t.indexOf,n={},a=n.toString,v=n.hasOwnProperty,r=v.toString,c=r.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},S=C.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function w(e,t,i){var n,s,a=(i=i||S).createElement("script");if(a.text=e,t)for(n in u)(s=t[n]||t.getAttribute&&t.getAttribute(n))&&a.setAttribute(n,s);i.head.appendChild(a).parentNode.removeChild(a)}function f(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[a.call(e)]||"object":typeof e}var d="3.5.1",E=function(e,t){return new E.fn.init(e,t)};function h(e){var t=!!e&&"length"in e&&e.length,i=f(e);return!b(e)&&!m(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}E.fn=E.prototype={jquery:d,constructor:E,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){e=E.merge(this.constructor(),e);return e.prevObject=this,e},each:function(e){return E.each(this,e)},map:function(i){return this.pushStack(E.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(E.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(E.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,e=+e+(e<0?t:0);return this.pushStack(0<=e&&e<t?[this[e]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},E.extend=E.fn.extend=function(){var e,t,i,n,s,a=arguments[0]||{},r=1,o=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[r]||{},r++),"object"==typeof a||b(a)||(a={}),r===o&&(a=this,r--);r<o;r++)if(null!=(e=arguments[r]))for(t in e)i=e[t],"__proto__"!==t&&a!==i&&(l&&i&&(E.isPlainObject(i)||(n=Array.isArray(i)))?(s=a[t],s=n&&!Array.isArray(s)?[]:n||E.isPlainObject(s)?s:{},n=!1,a[t]=E.extend(l,s,i)):void 0!==i&&(a[t]=i));return a},E.extend({expando:"jQuery"+(d+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){return!(!e||"[object Object]"!==a.call(e))&&(!(e=i(e))||"function"==typeof(e=v.call(e,"constructor")&&e.constructor)&&r.call(e)===c)},isEmptyObject:function(e){for(var t in e)return!1;return!0},globalEval:function(e,t,i){w(e,{nonce:t&&t.nonce},i)},each:function(e,t){var i,n=0;if(h(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},makeArray:function(e,t){t=t||[];return null!=e&&(h(Object(e))?E.merge(t,"string"==typeof e?[e]:e):l.call(t,e)),t},inArray:function(e,t,i){return null==t?-1:s.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,s=e.length;n<i;n++)e[s++]=t[n];return e.length=s,e},grep:function(e,t,i){for(var n=[],s=0,a=e.length,r=!i;s<a;s++)!t(e[s],s)!=r&&n.push(e[s]);return n},map:function(e,t,i){var n,s,a=0,r=[];if(h(e))for(n=e.length;a<n;a++)null!=(s=t(e[a],a,i))&&r.push(s);else for(a in e)null!=(s=t(e[a],a,i))&&r.push(s);return g(r)},guid:1,support:y}),"function"==typeof Symbol&&(E.fn[Symbol.iterator]=t[Symbol.iterator]),E.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var p=function(i){function d(e,t){return e="0x"+e.slice(1)-65536,t||(e<0?String.fromCharCode(65536+e):String.fromCharCode(e>>10|55296,1023&e|56320))}function n(){C()}var e,p,w,a,s,f,h,m,x,l,c,C,S,r,E,g,o,u,v,T="sizzle"+ +new Date,y=i.document,A=0,b=0,M=le(),D=le(),O=le(),P=le(),I=function(e,t){return e===t&&(c=!0),0},k={}.hasOwnProperty,t=[],N=t.pop,L=t.push,R=t.push,B=t.slice,z=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},F="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",H="[\\x20\\t\\r\\n\\f]",$="(?:\\\\[\\da-fA-F]{1,6}"+H+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",j="\\["+H+"*("+$+")(?:"+H+"*([*^$|!~]?=)"+H+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+$+"))|)"+H+"*\\]",q=":("+$+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+j+")*)|.*)\\)|)",G=new RegExp(H+"+","g"),_=new RegExp("^"+H+"+|((?:^|[^\\\\])(?:\\\\.)*)"+H+"+$","g"),W=new RegExp("^"+H+"*,"+H+"*"),X=new RegExp("^"+H+"*([>+~]|"+H+")"+H+"*"),U=new RegExp(H+"|>"),V=new RegExp(q),Y=new RegExp("^"+$+"$"),K={ID:new RegExp("^#("+$+")"),CLASS:new RegExp("^\\.("+$+")"),TAG:new RegExp("^("+$+"|[*])"),ATTR:new RegExp("^"+j),PSEUDO:new RegExp("^"+q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+H+"*(even|odd|(([+-]|)(\\d*)n|)"+H+"*(?:([+-]|)"+H+"*(\\d+)|))"+H+"*\\)|)","i"),bool:new RegExp("^(?:"+F+")$","i"),needsContext:new RegExp("^"+H+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+H+"*((?:-\\d)?\\d*)"+H+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,Z=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,ne=new RegExp("\\\\[\\da-fA-F]{1,6}"+H+"?|\\\\([^\\r\\n\\f])","g"),se=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ae=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},re=ye(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{R.apply(t=B.call(y.childNodes),y.childNodes),t[y.childNodes.length].nodeType}catch(e){R={apply:t.length?function(e,t){L.apply(e,B.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function oe(t,e,i,n){var s,a,r,o,l,c,u,d=e&&e.ownerDocument,h=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==h&&9!==h&&11!==h)return i;if(!n&&(C(e),e=e||S,E)){if(11!==h&&(l=te.exec(t)))if(s=l[1]){if(9===h){if(!(r=e.getElementById(s)))return i;if(r.id===s)return i.push(r),i}else if(d&&(r=d.getElementById(s))&&v(e,r)&&r.id===s)return i.push(r),i}else{if(l[2])return R.apply(i,e.getElementsByTagName(t)),i;if((s=l[3])&&p.getElementsByClassName&&e.getElementsByClassName)return R.apply(i,e.getElementsByClassName(s)),i}if(p.qsa&&!P[t+" "]&&(!g||!g.test(t))&&(1!==h||"object"!==e.nodeName.toLowerCase())){if(u=t,d=e,1===h&&(U.test(t)||X.test(t))){for((d=ie.test(t)&&me(e.parentNode)||e)===e&&p.scope||((o=e.getAttribute("id"))?o=o.replace(se,ae):e.setAttribute("id",o=T)),a=(c=f(t)).length;a--;)c[a]=(o?"#"+o:":scope")+" "+ve(c[a]);u=c.join(",")}try{return R.apply(i,d.querySelectorAll(u)),i}catch(e){P(t,!0)}finally{o===T&&e.removeAttribute("id")}}}return m(t.replace(_,"$1"),e,i,n)}function le(){var i=[];function n(e,t){return i.push(e+" ")>w.cacheLength&&delete n[i.shift()],n[e+" "]=t}return n}function ce(e){return e[T]=!0,e}function ue(e){var t=S.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function de(e,t){for(var i=e.split("|"),n=i.length;n--;)w.attrHandle[i[n]]=t}function he(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function pe(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&re(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function fe(r){return ce(function(a){return a=+a,ce(function(e,t){for(var i,n=r([],e.length,a),s=n.length;s--;)e[i=n[s]]&&(e[i]=!(t[i]=e[i]))})})}function me(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in p=oe.support={},s=oe.isXML=function(e){var t=e.namespaceURI,e=(e.ownerDocument||e).documentElement;return!Q.test(t||e&&e.nodeName||"HTML")},C=oe.setDocument=function(e){var t,e=e?e.ownerDocument||e:y;return e!=S&&9===e.nodeType&&e.documentElement&&(r=(S=e).documentElement,E=!s(S),y!=S&&(t=S.defaultView)&&t.top!==t&&(t.addEventListener?t.addEventListener("unload",n,!1):t.attachEvent&&t.attachEvent("onunload",n)),p.scope=ue(function(e){return r.appendChild(e).appendChild(S.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),p.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),p.getElementsByTagName=ue(function(e){return e.appendChild(S.createComment("")),!e.getElementsByTagName("*").length}),p.getElementsByClassName=ee.test(S.getElementsByClassName),p.getById=ue(function(e){return r.appendChild(e).id=T,!S.getElementsByName||!S.getElementsByName(T).length}),p.getById?(w.filter.ID=function(e){var t=e.replace(ne,d);return function(e){return e.getAttribute("id")===t}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&E){e=t.getElementById(e);return e?[e]:[]}}):(w.filter.ID=function(e){var t=e.replace(ne,d);return function(e){e=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return e&&e.value===t}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&E){var i,n,s,a=t.getElementById(e);if(a){if((i=a.getAttributeNode("id"))&&i.value===e)return[a];for(s=t.getElementsByName(e),n=0;a=s[n++];)if((i=a.getAttributeNode("id"))&&i.value===e)return[a]}return[]}}),w.find.TAG=p.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):p.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],s=0,a=t.getElementsByTagName(e);if("*"!==e)return a;for(;i=a[s++];)1===i.nodeType&&n.push(i);return n},w.find.CLASS=p.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&E)return t.getElementsByClassName(e)},o=[],g=[],(p.qsa=ee.test(S.querySelectorAll))&&(ue(function(e){var t;r.appendChild(e).innerHTML="<a id='"+T+"'></a><select id='"+T+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+H+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+H+"*(?:value|"+F+")"),e.querySelectorAll("[id~="+T+"-]").length||g.push("~="),(t=S.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||g.push("\\["+H+"*name"+H+"*="+H+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+T+"+*").length||g.push(".#.+[+~]"),e.querySelectorAll("\\\f"),g.push("[\\r\\n\\f]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=S.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+H+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),r.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")})),(p.matchesSelector=ee.test(u=r.matches||r.webkitMatchesSelector||r.mozMatchesSelector||r.oMatchesSelector||r.msMatchesSelector))&&ue(function(e){p.disconnectedMatch=u.call(e,"*"),u.call(e,"[s!='']:x"),o.push("!=",q)}),g=g.length&&new RegExp(g.join("|")),o=o.length&&new RegExp(o.join("|")),t=ee.test(r.compareDocumentPosition),v=t||ee.test(r.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,t=t&&t.parentNode;return e===t||!(!t||1!==t.nodeType||!(i.contains?i.contains(t):e.compareDocumentPosition&&16&e.compareDocumentPosition(t)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},I=t?function(e,t){if(e===t)return c=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!p.sortDetached&&t.compareDocumentPosition(e)===i?e==S||e.ownerDocument==y&&v(y,e)?-1:t==S||t.ownerDocument==y&&v(y,t)?1:l?z(l,e)-z(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return c=!0,0;var i,n=0,s=e.parentNode,a=t.parentNode,r=[e],o=[t];if(!s||!a)return e==S?-1:t==S?1:s?-1:a?1:l?z(l,e)-z(l,t):0;if(s===a)return he(e,t);for(i=e;i=i.parentNode;)r.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;r[n]===o[n];)n++;return n?he(r[n],o[n]):r[n]==y?-1:o[n]==y?1:0}),S},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if(C(e),p.matchesSelector&&E&&!P[t+" "]&&(!o||!o.test(t))&&(!g||!g.test(t)))try{var i=u.call(e,t);if(i||p.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){P(t,!0)}return 0<oe(t,S,null,[e]).length},oe.contains=function(e,t){return(e.ownerDocument||e)!=S&&C(e),v(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!=S&&C(e);var i=w.attrHandle[t.toLowerCase()],i=i&&k.call(w.attrHandle,t.toLowerCase())?i(e,t,!E):void 0;return void 0!==i?i:p.attributes||!E?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},oe.escape=function(e){return(e+"").replace(se,ae)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,i=[],n=0,s=0;if(c=!p.detectDuplicates,l=!p.sortStable&&e.slice(0),e.sort(I),c){for(;t=e[s++];)t===e[s]&&(n=i.push(s));for(;n--;)e.splice(i[n],1)}return l=null,e},a=oe.getText=function(e){var t,i="",n=0,s=e.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=a(e)}else if(3===s||4===s)return e.nodeValue}else for(;t=e[n++];)i+=a(t);return i},(w=oe.selectors={cacheLength:50,createPseudo:ce,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ne,d),e[3]=(e[3]||e[4]||e[5]||"").replace(ne,d),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&V.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ne,d).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=M[e+" "];return t||(t=new RegExp("(^|"+H+")"+e+"("+H+"|$)"))&&M(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(e){e=oe.attr(e,t);return null==e?"!="===i:!i||(e+="","="===i?e===n:"!="===i?e!==n:"^="===i?n&&0===e.indexOf(n):"*="===i?n&&-1<e.indexOf(n):"$="===i?n&&e.slice(-n.length)===n:"~="===i?-1<(" "+e.replace(G," ")+" ").indexOf(n):"|="===i&&(e===n||e.slice(0,n.length+1)===n+"-"))}},CHILD:function(f,e,t,m,g){var v="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===m&&0===g?function(e){return!!e.parentNode}:function(e,t,i){var n,s,a,r,o,l,c=v!=y?"nextSibling":"previousSibling",u=e.parentNode,d=b&&e.nodeName.toLowerCase(),h=!i&&!b,p=!1;if(u){if(v){for(;c;){for(r=e;r=r[c];)if(b?r.nodeName.toLowerCase()===d:1===r.nodeType)return!1;l=c="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&h){for(p=(o=(n=(s=(a=(r=u)[T]||(r[T]={}))[r.uniqueID]||(a[r.uniqueID]={}))[f]||[])[0]===A&&n[1])&&n[2],r=o&&u.childNodes[o];r=++o&&r&&r[c]||(p=o=0)||l.pop();)if(1===r.nodeType&&++p&&r===e){s[f]=[A,o,p];break}}else if(h&&(p=o=(n=(s=(a=(r=e)[T]||(r[T]={}))[r.uniqueID]||(a[r.uniqueID]={}))[f]||[])[0]===A&&n[1]),!1===p)for(;(r=++o&&r&&r[c]||(p=o=0)||l.pop())&&((b?r.nodeName.toLowerCase()!==d:1!==r.nodeType)||!++p||(h&&((s=(a=r[T]||(r[T]={}))[r.uniqueID]||(a[r.uniqueID]={}))[f]=[A,p]),r!==e)););return(p-=g)===m||p%m==0&&0<=p/m}}},PSEUDO:function(e,a){var t,r=w.pseudos[e]||w.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return r[T]?r(a):1<r.length?(t=[e,e,"",a],w.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var i,n=r(e,a),s=n.length;s--;)e[i=z(e,n[s])]=!(t[i]=n[s])}):function(e){return r(e,0,t)}):r}},pseudos:{not:ce(function(e){var n=[],s=[],o=h(e.replace(_,"$1"));return o[T]?ce(function(e,t,i,n){for(var s,a=o(e,null,n,[]),r=e.length;r--;)(s=a[r])&&(e[r]=!(t[r]=s))}):function(e,t,i){return n[0]=e,o(n,null,i,s),n[0]=null,!s.pop()}}),has:ce(function(t){return function(e){return 0<oe(t,e).length}}),contains:ce(function(t){return t=t.replace(ne,d),function(e){return-1<(e.textContent||a(e)).indexOf(t)}}),lang:ce(function(i){return Y.test(i||"")||oe.error("unsupported lang: "+i),i=i.replace(ne,d).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===r},focus:function(e){return e===S.activeElement&&(!S.hasFocus||S.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:pe(!1),disabled:pe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Z.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(e=e.getAttribute("type"))||"text"===e.toLowerCase())},first:fe(function(){return[0]}),last:fe(function(e,t){return[t-1]}),eq:fe(function(e,t,i){return[i<0?i+t:i]}),even:fe(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:fe(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:fe(function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e}),gt:fe(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}}).pseudos.nth=w.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[e]=function(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}(e);for(e in{submit:!0,reset:!0})w.pseudos[e]=function(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}(e);function ge(){}function ve(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function ye(r,e,t){var o=e.dir,l=e.next,c=l||o,u=t&&"parentNode"===c,d=b++;return e.first?function(e,t,i){for(;e=e[o];)if(1===e.nodeType||u)return r(e,t,i);return!1}:function(e,t,i){var n,s,a=[A,d];if(i){for(;e=e[o];)if((1===e.nodeType||u)&&r(e,t,i))return!0}else for(;e=e[o];)if(1===e.nodeType||u)if(n=(s=e[T]||(e[T]={}))[e.uniqueID]||(s[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[o]||e;else{if((s=n[c])&&s[0]===A&&s[1]===d)return a[2]=s[2];if((n[c]=a)[2]=r(e,t,i))return!0}return!1}}function be(s){return 1<s.length?function(e,t,i){for(var n=s.length;n--;)if(!s[n](e,t,i))return!1;return!0}:s[0]}function we(e,t,i,n,s){for(var a,r=[],o=0,l=e.length,c=null!=t;o<l;o++)(a=e[o])&&(i&&!i(a,n,s)||(r.push(a),c&&t.push(o)));return r}function xe(p,f,m,g,v,e){return g&&!g[T]&&(g=xe(g)),v&&!v[T]&&(v=xe(v,e)),ce(function(e,t,i,n){var s,a,r,o=[],l=[],c=t.length,u=e||function(e,t,i){for(var n=0,s=t.length;n<s;n++)oe(e,t[n],i);return i}(f||"*",i.nodeType?[i]:i,[]),d=!p||!e&&f?u:we(u,o,p,i,n),h=m?v||(e?p:c||g)?[]:t:d;if(m&&m(d,h,i,n),g)for(s=we(h,l),g(s,[],i,n),a=s.length;a--;)(r=s[a])&&(h[l[a]]=!(d[l[a]]=r));if(e){if(v||p){if(v){for(s=[],a=h.length;a--;)(r=h[a])&&s.push(d[a]=r);v(null,h=[],s,n)}for(a=h.length;a--;)(r=h[a])&&-1<(s=v?z(e,r):o[a])&&(e[s]=!(t[s]=r))}}else h=we(h===t?h.splice(c,h.length):h),v?v(null,t,h,n):R.apply(t,h)})}function Ce(g,v){function e(e,t,i,n,s){var a,r,o,l=0,c="0",u=e&&[],d=[],h=x,p=e||b&&w.find.TAG("*",s),f=A+=null==h?1:Math.random()||.1,m=p.length;for(s&&(x=t==S||t||s);c!==m&&null!=(a=p[c]);c++){if(b&&a){for(r=0,t||a.ownerDocument==S||(C(a),i=!E);o=g[r++];)if(o(a,t||S,i)){n.push(a);break}s&&(A=f)}y&&((a=!o&&a)&&l--,e&&u.push(a))}if(l+=c,y&&c!==l){for(r=0;o=v[r++];)o(u,d,t,i);if(e){if(0<l)for(;c--;)u[c]||d[c]||(d[c]=N.call(n));d=we(d)}R.apply(n,d),s&&!e&&0<d.length&&1<l+v.length&&oe.uniqueSort(n)}return s&&(A=f,x=h),u}var y=0<v.length,b=0<g.length;return y?ce(e):e}return ge.prototype=w.filters=w.pseudos,w.setFilters=new ge,f=oe.tokenize=function(e,t){var i,n,s,a,r,o,l,c=D[e+" "];if(c)return t?0:c.slice(0);for(r=e,o=[],l=w.preFilter;r;){for(a in i&&!(n=W.exec(r))||(n&&(r=r.slice(n[0].length)||r),o.push(s=[])),i=!1,(n=X.exec(r))&&(i=n.shift(),s.push({value:i,type:n[0].replace(_," ")}),r=r.slice(i.length)),w.filter)!(n=K[a].exec(r))||l[a]&&!(n=l[a](n))||(i=n.shift(),s.push({value:i,type:a,matches:n}),r=r.slice(i.length));if(!i)break}return t?r.length:r?oe.error(e):D(e,o).slice(0)},h=oe.compile=function(e,t){var i,n=[],s=[],a=O[e+" "];if(!a){for(i=(t=t||f(e)).length;i--;)((a=function e(t){for(var n,i,s,a=t.length,r=w.relative[t[0].type],o=r||w.relative[" "],l=r?1:0,c=ye(function(e){return e===n},o,!0),u=ye(function(e){return-1<z(n,e)},o,!0),d=[function(e,t,i){return i=!r&&(i||t!==x)||((n=t).nodeType?c:u)(e,t,i),n=null,i}];l<a;l++)if(i=w.relative[t[l].type])d=[ye(be(d),i)];else{if((i=w.filter[t[l].type].apply(null,t[l].matches))[T]){for(s=++l;s<a&&!w.relative[t[s].type];s++);return xe(1<l&&be(d),1<l&&ve(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(_,"$1"),i,l<s&&e(t.slice(l,s)),s<a&&e(t=t.slice(s)),s<a&&ve(t))}d.push(i)}return be(d)}(t[i]))[T]?n:s).push(a);(a=O(e,Ce(s,n))).selector=e}return a},m=oe.select=function(e,t,i,n){var s,a,r,o,l,c="function"==typeof e&&e,u=!n&&f(e=c.selector||e);if(i=i||[],1===u.length){if(2<(a=u[0]=u[0].slice(0)).length&&"ID"===(r=a[0]).type&&9===t.nodeType&&E&&w.relative[a[1].type]){if(!(t=(w.find.ID(r.matches[0].replace(ne,d),t)||[])[0]))return i;c&&(t=t.parentNode),e=e.slice(a.shift().value.length)}for(s=K.needsContext.test(e)?0:a.length;s--&&(r=a[s],!w.relative[o=r.type]);)if((l=w.find[o])&&(n=l(r.matches[0].replace(ne,d),ie.test(a[0].type)&&me(t.parentNode)||t))){if(a.splice(s,1),!(e=n.length&&ve(a)))return R.apply(i,n),i;break}}return(c||h(e,u))(n,t,!E,i,!t||ie.test(e)&&me(t.parentNode)||t),i},p.sortStable=T.split("").sort(I).join("")===T,p.detectDuplicates=!!c,C(),p.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(S.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||de("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),p.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||de("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||de(F,function(e,t,i){if(!i)return!0===e[t]?t.toLowerCase():(t=e.getAttributeNode(t))&&t.specified?t.value:null}),oe}(C);E.find=p,E.expr=p.selectors,E.expr[":"]=E.expr.pseudos,E.uniqueSort=E.unique=p.uniqueSort,E.text=p.getText,E.isXMLDoc=p.isXML,E.contains=p.contains,E.escapeSelector=p.escape;function x(e,t,i){for(var n=[],s=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(s&&E(e).is(i))break;n.push(e)}return n}function T(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var A=E.expr.match.needsContext;function M(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var D=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function O(e,i,n){return b(i)?E.grep(e,function(e,t){return!!i.call(e,t,e)!==n}):i.nodeType?E.grep(e,function(e){return e===i!==n}):"string"!=typeof i?E.grep(e,function(e){return-1<s.call(i,e)!==n}):E.filter(i,e,n)}E.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?E.find.matchesSelector(n,e)?[n]:[]:E.find.matches(e,E.grep(t,function(e){return 1===e.nodeType}))},E.fn.extend({find:function(e){var t,i,n=this.length,s=this;if("string"!=typeof e)return this.pushStack(E(e).filter(function(){for(t=0;t<n;t++)if(E.contains(s[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)E.find(e,s[t],i);return 1<n?E.uniqueSort(i):i},filter:function(e){return this.pushStack(O(this,e||[],!1))},not:function(e){return this.pushStack(O(this,e||[],!0))},is:function(e){return!!O(this,"string"==typeof e&&A.test(e)?E(e):e||[],!1).length}});var P,I=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(E.fn.init=function(e,t,i){if(!e)return this;if(i=i||P,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==i.ready?i.ready(e):e(E):E.makeArray(e,this);if(!(n="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:I.exec(e))||!n[1]&&t)return(!t||t.jquery?t||i:this.constructor(t)).find(e);if(n[1]){if(t=t instanceof E?t[0]:t,E.merge(this,E.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:S,!0)),D.test(n[1])&&E.isPlainObject(t))for(var n in t)b(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(e=S.getElementById(n[2]))&&(this[0]=e,this.length=1),this}).prototype=E.fn,P=E(S);var k=/^(?:parents|prev(?:Until|All))/,N={children:!0,contents:!0,next:!0,prev:!0};function L(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}E.fn.extend({has:function(e){var t=E(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(E.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,s=this.length,a=[],r="string"!=typeof e&&E(e);if(!A.test(e))for(;n<s;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(r?-1<r.index(i):1===i.nodeType&&E.find.matchesSelector(i,e))){a.push(i);break}return this.pushStack(1<a.length?E.uniqueSort(a):a)},index:function(e){return e?"string"==typeof e?s.call(E(e),this[0]):s.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(E.uniqueSort(E.merge(this.get(),E(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),E.each({parent:function(e){e=e.parentNode;return e&&11!==e.nodeType?e:null},parents:function(e){return x(e,"parentNode")},parentsUntil:function(e,t,i){return x(e,"parentNode",i)},next:function(e){return L(e,"nextSibling")},prev:function(e){return L(e,"previousSibling")},nextAll:function(e){return x(e,"nextSibling")},prevAll:function(e){return x(e,"previousSibling")},nextUntil:function(e,t,i){return x(e,"nextSibling",i)},prevUntil:function(e,t,i){return x(e,"previousSibling",i)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&i(e.contentDocument)?e.contentDocument:(M(e,"template")&&(e=e.content||e),E.merge([],e.childNodes))}},function(n,s){E.fn[n]=function(e,t){var i=E.map(this,s,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=E.filter(t,i)),1<this.length&&(N[n]||E.uniqueSort(i),k.test(n)&&i.reverse()),this.pushStack(i)}});var R=/[^\x20\t\r\n\f]+/g;function B(e){return e}function z(e){throw e}function F(e,t,i,n){var s;try{e&&b(s=e.promise)?s.call(e).done(t).fail(i):e&&b(s=e.then)?s.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}E.Callbacks=function(n){var e,i;n="string"==typeof n?(e=n,i={},E.each(e.match(R)||[],function(e,t){i[t]=!0}),i):E.extend({},n);function s(){for(o=o||n.once,r=a=!0;c.length;u=-1)for(t=c.shift();++u<l.length;)!1===l[u].apply(t[0],t[1])&&n.stopOnFalse&&(u=l.length,t=!1);n.memory||(t=!1),a=!1,o&&(l=t?[]:"")}var a,t,r,o,l=[],c=[],u=-1,d={add:function(){return l&&(t&&!a&&(u=l.length-1,c.push(t)),function i(e){E.each(e,function(e,t){b(t)?n.unique&&d.has(t)||l.push(t):t&&t.length&&"string"!==f(t)&&i(t)})}(arguments),t&&!a&&s()),this},remove:function(){return E.each(arguments,function(e,t){for(var i;-1<(i=E.inArray(t,l,i));)l.splice(i,1),i<=u&&u--}),this},has:function(e){return e?-1<E.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return o=c=[],l=t="",this},disabled:function(){return!l},lock:function(){return o=c=[],t||a||(l=t=""),this},locked:function(){return!!o},fireWith:function(e,t){return o||(t=[e,(t=t||[]).slice?t.slice():t],c.push(t),a||s()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!r}};return d},E.extend({Deferred:function(e){var a=[["notify","progress",E.Callbacks("memory"),E.Callbacks("memory"),2],["resolve","done",E.Callbacks("once memory"),E.Callbacks("once memory"),0,"resolved"],["reject","fail",E.Callbacks("once memory"),E.Callbacks("once memory"),1,"rejected"]],s="pending",r={state:function(){return s},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var s=arguments;return E.Deferred(function(n){E.each(a,function(e,t){var i=b(s[t[4]])&&s[t[4]];o[t[1]](function(){var e=i&&i.apply(this,arguments);e&&b(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),s=null}).promise()},then:function(t,i,n){var l=0;function c(s,a,r,o){return function(){function e(){var e,t;if(!(s<l)){if((e=r.apply(i,n))===a.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,b(t)?o?t.call(e,c(l,a,B,o),c(l,a,z,o)):(l++,t.call(e,c(l,a,B,o),c(l,a,z,o),c(l,a,B,a.notifyWith))):(r!==B&&(i=void 0,n=[e]),(o||a.resolveWith)(i,n))}}var i=this,n=arguments,t=o?e:function(){try{e()}catch(e){E.Deferred.exceptionHook&&E.Deferred.exceptionHook(e,t.stackTrace),l<=s+1&&(r!==z&&(i=void 0,n=[e]),a.rejectWith(i,n))}};s?t():(E.Deferred.getStackHook&&(t.stackTrace=E.Deferred.getStackHook()),C.setTimeout(t))}}return E.Deferred(function(e){a[0][3].add(c(0,e,b(n)?n:B,e.notifyWith)),a[1][3].add(c(0,e,b(t)?t:B)),a[2][3].add(c(0,e,b(i)?i:z))}).promise()},promise:function(e){return null!=e?E.extend(e,r):r}},o={};return E.each(a,function(e,t){var i=t[2],n=t[5];r[t[1]]=i.add,n&&i.add(function(){s=n},a[3-e][2].disable,a[3-e][3].disable,a[0][2].lock,a[0][3].lock),i.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=i.fireWith}),r.promise(o),e&&e.call(o,o),o},when:function(e){function t(t){return function(e){s[t]=this,a[t]=1<arguments.length?o.call(arguments):e,--i||r.resolveWith(s,a)}}var i=arguments.length,n=i,s=Array(n),a=o.call(arguments),r=E.Deferred();if(i<=1&&(F(e,r.done(t(n)).resolve,r.reject,!i),"pending"===r.state()||b(a[n]&&a[n].then)))return r.then();for(;n--;)F(a[n],t(n),r.reject);return r.promise()}});var H=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;E.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&H.test(e.name)&&C.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},E.readyException=function(e){C.setTimeout(function(){throw e})};var $=E.Deferred();function j(){S.removeEventListener("DOMContentLoaded",j),C.removeEventListener("load",j),E.ready()}E.fn.ready=function(e){return $.then(e).catch(function(e){E.readyException(e)}),this},E.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--E.readyWait:E.isReady)||(E.isReady=!0)!==e&&0<--E.readyWait||$.resolveWith(S,[E])}}),E.ready.then=$.then,"complete"===S.readyState||"loading"!==S.readyState&&!S.documentElement.doScroll?C.setTimeout(E.ready):(S.addEventListener("DOMContentLoaded",j),C.addEventListener("load",j));var q=function(e,t,i,n,s,a,r){var o=0,l=e.length,c=null==i;if("object"===f(i))for(o in s=!0,i)q(e,t,o,i[o],!0,a,r);else if(void 0!==n&&(s=!0,b(n)||(r=!0),c&&(t=r?(t.call(e,n),null):(c=t,function(e,t,i){return c.call(E(e),i)})),t))for(;o<l;o++)t(e[o],i,r?n:n.call(e[o],o,t(e[o],i)));return s?e:c?t.call(e):l?t(e[0],i):a},G=/^-ms-/,_=/-([a-z])/g;function W(e,t){return t.toUpperCase()}function X(e){return e.replace(G,"ms-").replace(_,W)}function U(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function V(){this.expando=E.expando+V.uid++}V.uid=1,V.prototype={cache:function(e){var t=e[this.expando];return t||(t={},U(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,s=this.cache(e);if("string"==typeof t)s[X(t)]=i;else for(n in t)s[X(n)]=t[n];return s},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(X):(t=X(t))in n?[t]:t.match(R)||[]).length;for(;i--;)delete n[t[i]]}void 0!==t&&!E.isEmptyObject(n)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){e=e[this.expando];return void 0!==e&&!E.isEmptyObject(e)}};var Y=new V,K=new V,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function J(e,t,i){var n,s;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i="true"===(s=i)||"false"!==s&&("null"===s?null:s===+s+""?+s:Q.test(s)?JSON.parse(s):s)}catch(e){}K.set(e,t,i)}else i=void 0;return i}E.extend({hasData:function(e){return K.hasData(e)||Y.hasData(e)},data:function(e,t,i){return K.access(e,t,i)},removeData:function(e,t){K.remove(e,t)},_data:function(e,t,i){return Y.access(e,t,i)},_removeData:function(e,t){Y.remove(e,t)}}),E.fn.extend({data:function(i,e){var t,n,s,a=this[0],r=a&&a.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){K.set(this,i)}):q(this,function(e){var t;return a&&void 0===e?void 0!==(t=K.get(a,i))||void 0!==(t=J(a,i))?t:void 0:void this.each(function(){K.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(s=K.get(a),1===a.nodeType&&!Y.get(a,"hasDataAttrs"))){for(t=r.length;t--;)r[t]&&0===(n=r[t].name).indexOf("data-")&&(n=X(n.slice(5)),J(a,n,s[n]));Y.set(a,"hasDataAttrs",!0)}return s},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),E.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=Y.get(e,t),i&&(!n||Array.isArray(i)?n=Y.access(e,t,E.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=E.queue(e,t),n=i.length,s=i.shift(),a=E._queueHooks(e,t);"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===t&&i.unshift("inprogress"),delete a.stop,s.call(e,function(){E.dequeue(e,t)},a)),!n&&a&&a.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return Y.get(e,i)||Y.access(e,i,{empty:E.Callbacks("once memory").add(function(){Y.remove(e,[t+"queue",i])})})}}),E.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?E.queue(this[0],t):void 0===i?this:this.each(function(){var e=E.queue(this,t,i);E._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&E.dequeue(this,t)})},dequeue:function(e){return this.each(function(){E.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--s||a.resolveWith(r,[r])}var n,s=1,a=E.Deferred(),r=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(n=Y.get(r[o],e+"queueHooks"))&&n.empty&&(s++,n.empty.add(i));return i(),a.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ie=["Top","Right","Bottom","Left"],ne=S.documentElement,se=function(e){return E.contains(e.ownerDocument,e)},ae={composed:!0};ne.getRootNode&&(se=function(e){return E.contains(e.ownerDocument,e)||e.getRootNode(ae)===e.ownerDocument});var re=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&se(e)&&"none"===E.css(e,"display")};function oe(e,t,i,n){var s,a,r=20,o=n?function(){return n.cur()}:function(){return E.css(e,t,"")},l=o(),c=i&&i[3]||(E.cssNumber[t]?"":"px"),u=e.nodeType&&(E.cssNumber[t]||"px"!==c&&+l)&&te.exec(E.css(e,t));if(u&&u[3]!==c){for(l/=2,c=c||u[3],u=+l||1;r--;)E.style(e,t,u+c),(1-a)*(1-(a=o()/l||.5))<=0&&(r=0),u/=a;u*=2,E.style(e,t,u+c),i=i||[]}return i&&(u=+u||+l||0,s=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=u,n.end=s)),s}var le={};function ce(e,t){for(var i,n,s,a,r,o=[],l=0,c=e.length;l<c;l++)(n=e[l]).style&&(i=n.style.display,t?("none"===i&&(o[l]=Y.get(n,"display")||null,o[l]||(n.style.display="")),""===n.style.display&&re(n)&&(o[l]=(r=a=void 0,a=(s=n).ownerDocument,r=s.nodeName,(s=le[r])||(a=a.body.appendChild(a.createElement(r)),s=E.css(a,"display"),a.parentNode.removeChild(a),"none"===s&&(s="block"),le[r]=s)))):"none"!==i&&(o[l]="none",Y.set(n,"display",i)));for(l=0;l<c;l++)null!=o[l]&&(e[l].style.display=o[l]);return e}E.fn.extend({show:function(){return ce(this,!0)},hide:function(){return ce(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){re(this)?E(this).show():E(this).hide()})}});var ue=/^(?:checkbox|radio)$/i,de=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i;d=S.createDocumentFragment().appendChild(S.createElement("div")),(p=S.createElement("input")).setAttribute("type","radio"),p.setAttribute("checked","checked"),p.setAttribute("name","t"),d.appendChild(p),y.checkClone=d.cloneNode(!0).cloneNode(!0).lastChild.checked,d.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!d.cloneNode(!0).lastChild.defaultValue,d.innerHTML="<option></option>",y.option=!!d.lastChild;var pe={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function fe(e,t){var i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&M(e,t)?E.merge([e],i):i}function me(e,t){for(var i=0,n=e.length;i<n;i++)Y.set(e[i],"globalEval",!t||Y.get(t[i],"globalEval"))}pe.tbody=pe.tfoot=pe.colgroup=pe.caption=pe.thead,pe.th=pe.td,y.option||(pe.optgroup=pe.option=[1,"<select multiple='multiple'>","</select>"]);var ge=/<|&#?\w+;/;function ve(e,t,i,n,s){for(var a,r,o,l,c,u=t.createDocumentFragment(),d=[],h=0,p=e.length;h<p;h++)if((a=e[h])||0===a)if("object"===f(a))E.merge(d,a.nodeType?[a]:a);else if(ge.test(a)){for(r=r||u.appendChild(t.createElement("div")),o=(de.exec(a)||["",""])[1].toLowerCase(),o=pe[o]||pe._default,r.innerHTML=o[1]+E.htmlPrefilter(a)+o[2],c=o[0];c--;)r=r.lastChild;E.merge(d,r.childNodes),(r=u.firstChild).textContent=""}else d.push(t.createTextNode(a));for(u.textContent="",h=0;a=d[h++];)if(n&&-1<E.inArray(a,n))s&&s.push(a);else if(l=se(a),r=fe(u.appendChild(a),"script"),l&&me(r),i)for(c=0;a=r[c++];)he.test(a.type||"")&&i.push(a);return u}var ye=/^key/,be=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,we=/^([^.]*)(?:\.(.+)|)/;function xe(){return!0}function Ce(){return!1}function Se(e,t){return e===function(){try{return S.activeElement}catch(e){}}()==("focus"===t)}function Ee(e,t,i,n,s,a){var r,o;if("object"==typeof t){for(o in"string"!=typeof i&&(n=n||i,i=void 0),t)Ee(e,o,i,n,t[o],a);return e}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),!1===s)s=Ce;else if(!s)return e;return 1===a&&(r=s,(s=function(e){return E().off(e),r.apply(this,arguments)}).guid=r.guid||(r.guid=E.guid++)),e.each(function(){E.event.add(this,t,s,n,i)})}function Te(e,s,a){a?(Y.set(e,s,!1),E.event.add(e,s,{namespace:!1,handler:function(e){var t,i,n=Y.get(this,s);if(1&e.isTrigger&&this[s]){if(n.length)(E.event.special[s]||{}).delegateType&&e.stopPropagation();else if(n=o.call(arguments),Y.set(this,s,n),t=a(this,s),this[s](),n!==(i=Y.get(this,s))||t?Y.set(this,s,!1):i={},n!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else n.length&&(Y.set(this,s,{value:E.event.trigger(E.extend(n[0],E.Event.prototype),n.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,s)&&E.event.add(e,s,xe)}E.event={global:{},add:function(t,e,i,n,s){var a,r,o,l,c,u,d,h,p,f=Y.get(t);if(U(t))for(i.handler&&(i=(a=i).handler,s=a.selector),s&&E.find.matchesSelector(ne,s),i.guid||(i.guid=E.guid++),(o=f.events)||(o=f.events=Object.create(null)),(r=f.handle)||(r=f.handle=function(e){return void 0!==E&&E.event.triggered!==e.type?E.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(R)||[""]).length;l--;)d=p=(c=we.exec(e[l])||[])[1],h=(c[2]||"").split(".").sort(),d&&(u=E.event.special[d]||{},d=(s?u.delegateType:u.bindType)||d,u=E.event.special[d]||{},c=E.extend({type:d,origType:p,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&E.expr.match.needsContext.test(s),namespace:h.join(".")},a),(p=o[d])||((p=o[d]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,n,h,r)||t.addEventListener&&t.addEventListener(d,r)),u.add&&(u.add.call(t,c),c.handler.guid||(c.handler.guid=i.guid)),s?p.splice(p.delegateCount++,0,c):p.push(c),E.event.global[d]=!0)},remove:function(e,t,i,n,s){var a,r,o,l,c,u,d,h,p,f,m,g=Y.hasData(e)&&Y.get(e);if(g&&(l=g.events)){for(c=(t=(t||"").match(R)||[""]).length;c--;)if(p=m=(o=we.exec(t[c])||[])[1],f=(o[2]||"").split(".").sort(),p){for(d=E.event.special[p]||{},h=l[p=(n?d.delegateType:d.bindType)||p]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=a=h.length;a--;)u=h[a],!s&&m!==u.origType||i&&i.guid!==u.guid||o&&!o.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(h.splice(a,1),u.selector&&h.delegateCount--,d.remove&&d.remove.call(e,u));r&&!h.length&&(d.teardown&&!1!==d.teardown.call(e,f,g.handle)||E.removeEvent(e,p,g.handle),delete l[p])}else for(p in l)E.event.remove(e,p+t[c],i,n,!0);E.isEmptyObject(l)&&Y.remove(e,"handle events")}},dispatch:function(e){var t,i,n,s,a,r=new Array(arguments.length),o=E.event.fix(e),l=(Y.get(this,"events")||Object.create(null))[o.type]||[],e=E.event.special[o.type]||{};for(r[0]=o,t=1;t<arguments.length;t++)r[t]=arguments[t];if(o.delegateTarget=this,!e.preDispatch||!1!==e.preDispatch.call(this,o)){for(a=E.event.handlers.call(this,o,l),t=0;(n=a[t++])&&!o.isPropagationStopped();)for(o.currentTarget=n.elem,i=0;(s=n.handlers[i++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!1!==s.namespace&&!o.rnamespace.test(s.namespace)||(o.handleObj=s,o.data=s.data,void 0!==(s=((E.event.special[s.origType]||{}).handle||s.handler).apply(n.elem,r))&&!1===(o.result=s)&&(o.preventDefault(),o.stopPropagation()));return e.postDispatch&&e.postDispatch.call(this,o),o.result}},handlers:function(e,t){var i,n,s,a,r,o=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(a=[],r={},i=0;i<l;i++)void 0===r[s=(n=t[i]).selector+" "]&&(r[s]=n.needsContext?-1<E(s,this).index(c):E.find(s,this,null,[c]).length),r[s]&&a.push(n);a.length&&o.push({elem:c,handlers:a})}return c=this,l<t.length&&o.push({elem:c,handlers:t.slice(l)}),o},addProp:function(t,e){Object.defineProperty(E.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[E.expando]?e:new E.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){e=this||e;return ue.test(e.type)&&e.click&&M(e,"input")&&Te(e,"click",xe),!1},trigger:function(e){e=this||e;return ue.test(e.type)&&e.click&&M(e,"input")&&Te(e,"click"),!0},_default:function(e){e=e.target;return ue.test(e.type)&&e.click&&M(e,"input")&&Y.get(e,"click")||M(e,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},E.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},E.Event=function(e,t){if(!(this instanceof E.Event))return new E.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?xe:Ce,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&E.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[E.expando]=!0},E.Event.prototype={constructor:E.Event,isDefaultPrevented:Ce,isPropagationStopped:Ce,isImmediatePropagationStopped:Ce,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=xe,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=xe,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=xe,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},E.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&ye.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&be.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},E.event.addProp),E.each({focus:"focusin",blur:"focusout"},function(e,t){E.event.special[e]={setup:function(){return Te(this,e,Se),!1},trigger:function(){return Te(this,e),!0},delegateType:t}}),E.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,s){E.event.special[e]={delegateType:s,bindType:s,handle:function(e){var t,i=e.relatedTarget,n=e.handleObj;return i&&(i===this||E.contains(this,i))||(e.type=n.origType,t=n.handler.apply(this,arguments),e.type=s),t}}}),E.fn.extend({on:function(e,t,i,n){return Ee(this,e,t,i,n)},one:function(e,t,i,n){return Ee(this,e,t,i,n,1)},off:function(e,t,i){var n,s;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,E(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Ce),this.each(function(){E.event.remove(this,e,i,t)});for(s in e)this.off(s,t,e[s]);return this}});var Ae=/<script|<style|<link/i,Me=/checked\s*(?:[^=]|=\s*.checked.)/i,De=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Oe(e,t){return M(e,"table")&&M(11!==t.nodeType?t:t.firstChild,"tr")&&E(e).children("tbody")[0]||e}function Pe(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ie(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function ke(e,t){var i,n,s,a;if(1===t.nodeType){if(Y.hasData(e)&&(a=Y.get(e).events))for(s in Y.remove(t,"handle events"),a)for(i=0,n=a[s].length;i<n;i++)E.event.add(t,s,a[s][i]);K.hasData(e)&&(e=K.access(e),e=E.extend({},e),K.set(t,e))}}function Ne(i,n,s,a){n=g(n);var e,t,r,o,l,c,u=0,d=i.length,h=d-1,p=n[0],f=b(p);if(f||1<d&&"string"==typeof p&&!y.checkClone&&Me.test(p))return i.each(function(e){var t=i.eq(e);f&&(n[0]=p.call(this,e,t.html())),Ne(t,n,s,a)});if(d&&(t=(e=ve(n,i[0].ownerDocument,!1,i,a)).firstChild,1===e.childNodes.length&&(e=t),t||a)){for(o=(r=E.map(fe(e,"script"),Pe)).length;u<d;u++)l=e,u!==h&&(l=E.clone(l,!0,!0),o&&E.merge(r,fe(l,"script"))),s.call(i[u],l,u);if(o)for(c=r[r.length-1].ownerDocument,E.map(r,Ie),u=0;u<o;u++)l=r[u],he.test(l.type||"")&&!Y.access(l,"globalEval")&&E.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?E._evalUrl&&!l.noModule&&E._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):w(l.textContent.replace(De,""),l,c))}return i}function Le(e,t,i){for(var n,s=t?E.filter(t,e):e,a=0;null!=(n=s[a]);a++)i||1!==n.nodeType||E.cleanData(fe(n)),n.parentNode&&(i&&se(n)&&me(fe(n,"script")),n.parentNode.removeChild(n));return e}E.extend({htmlPrefilter:function(e){return e},clone:function(e,t,i){var n,s,a,r,o,l,c,u=e.cloneNode(!0),d=se(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||E.isXMLDoc(e)))for(r=fe(u),n=0,s=(a=fe(e)).length;n<s;n++)o=a[n],l=r[n],c=void 0,"input"===(c=l.nodeName.toLowerCase())&&ue.test(o.type)?l.checked=o.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=o.defaultValue);if(t)if(i)for(a=a||fe(e),r=r||fe(u),n=0,s=a.length;n<s;n++)ke(a[n],r[n]);else ke(e,u);return 0<(r=fe(u,"script")).length&&me(r,!d&&fe(e,"script")),u},cleanData:function(e){for(var t,i,n,s=E.event.special,a=0;void 0!==(i=e[a]);a++)if(U(i)){if(t=i[Y.expando]){if(t.events)for(n in t.events)s[n]?E.event.remove(i,n):E.removeEvent(i,n,t.handle);i[Y.expando]=void 0}i[K.expando]&&(i[K.expando]=void 0)}}}),E.fn.extend({detach:function(e){return Le(this,e,!0)},remove:function(e){return Le(this,e)},text:function(e){return q(this,function(e){return void 0===e?E.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Ne(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Oe(this,e).appendChild(e)})},prepend:function(){return Ne(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=Oe(this,e)).insertBefore(e,t.firstChild)})},before:function(){return Ne(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Ne(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(E.cleanData(fe(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return E.clone(this,e,t)})},html:function(e){return q(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ae.test(e)&&!pe[(de.exec(e)||["",""])[1].toLowerCase()]){e=E.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(E.cleanData(fe(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return Ne(this,arguments,function(e){var t=this.parentNode;E.inArray(this,i)<0&&(E.cleanData(fe(this)),t&&t.replaceChild(e,this))},i)}}),E.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,r){E.fn[e]=function(e){for(var t,i=[],n=E(e),s=n.length-1,a=0;a<=s;a++)t=a===s?this:this.clone(!0),E(n[a])[r](t),l.apply(i,t.get());return this.pushStack(i)}});function Re(e,t,i){var n,s={};for(n in t)s[n]=e.style[n],e.style[n]=t[n];for(n in i=i.call(e),t)e.style[n]=s[n];return i}var Be,ze,Fe,He,$e,je,qe,Ge,_e=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),We=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Xe=new RegExp(ie.join("|"),"i");function Ue(){var e;Ge&&(qe.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Ge.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(qe).appendChild(Ge),e=C.getComputedStyle(Ge),Be="1%"!==e.top,je=12===Ve(e.marginLeft),Ge.style.right="60%",He=36===Ve(e.right),ze=36===Ve(e.width),Ge.style.position="absolute",Fe=12===Ve(Ge.offsetWidth/3),ne.removeChild(qe),Ge=null)}function Ve(e){return Math.round(parseFloat(e))}function Ye(e,t,i){var n,s,a=e.style;return(i=i||We(e))&&(""!==(s=i.getPropertyValue(t)||i[t])||se(e)||(s=E.style(e,t)),!y.pixelBoxStyles()&&_e.test(s)&&Xe.test(t)&&(n=a.width,e=a.minWidth,t=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=i.width,a.width=n,a.minWidth=e,a.maxWidth=t)),void 0!==s?s+"":s}function Ke(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}qe=S.createElement("div"),(Ge=S.createElement("div")).style&&(Ge.style.backgroundClip="content-box",Ge.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===Ge.style.backgroundClip,E.extend(y,{boxSizingReliable:function(){return Ue(),ze},pixelBoxStyles:function(){return Ue(),He},pixelPosition:function(){return Ue(),Be},reliableMarginLeft:function(){return Ue(),je},scrollboxSize:function(){return Ue(),Fe},reliableTrDimensions:function(){var e,t,i;return null==$e&&(e=S.createElement("table"),i=S.createElement("tr"),t=S.createElement("div"),e.style.cssText="position:absolute;left:-11111px",i.style.height="1px",t.style.height="9px",ne.appendChild(e).appendChild(i).appendChild(t),i=C.getComputedStyle(i),$e=3<parseInt(i.height),ne.removeChild(e)),$e}}));var Qe=["Webkit","Moz","ms"],Ze=S.createElement("div").style,Je={};function et(e){var t=E.cssProps[e]||Je[e];return t||(e in Ze?e:Je[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=Qe.length;i--;)if((e=Qe[i]+t)in Ze)return e}(e)||e)}var tt=/^(none|table(?!-c[ea]).+)/,it=/^--/,nt={position:"absolute",visibility:"hidden",display:"block"},st={letterSpacing:"0",fontWeight:"400"};function at(e,t,i){var n=te.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function rt(e,t,i,n,s,a){var r="width"===t?1:0,o=0,l=0;if(i===(n?"border":"content"))return 0;for(;r<4;r+=2)"margin"===i&&(l+=E.css(e,i+ie[r],!0,s)),n?("content"===i&&(l-=E.css(e,"padding"+ie[r],!0,s)),"margin"!==i&&(l-=E.css(e,"border"+ie[r]+"Width",!0,s))):(l+=E.css(e,"padding"+ie[r],!0,s),"padding"!==i?l+=E.css(e,"border"+ie[r]+"Width",!0,s):o+=E.css(e,"border"+ie[r]+"Width",!0,s));return!n&&0<=a&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-a-l-o-.5))||0),l}function ot(e,t,i){var n=We(e),s=(!y.boxSizingReliable()||i)&&"border-box"===E.css(e,"boxSizing",!1,n),a=s,r=Ye(e,t,n),o="offset"+t[0].toUpperCase()+t.slice(1);if(_e.test(r)){if(!i)return r;r="auto"}return(!y.boxSizingReliable()&&s||!y.reliableTrDimensions()&&M(e,"tr")||"auto"===r||!parseFloat(r)&&"inline"===E.css(e,"display",!1,n))&&e.getClientRects().length&&(s="border-box"===E.css(e,"boxSizing",!1,n),(a=o in e)&&(r=e[o])),(r=parseFloat(r)||0)+rt(e,t,i||(s?"border":"content"),a,n,r)+"px"}function lt(e,t,i,n,s){return new lt.prototype.init(e,t,i,n,s)}E.extend({cssHooks:{opacity:{get:function(e,t){if(t){e=Ye(e,"opacity");return""===e?"1":e}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var s,a,r,o=X(t),l=it.test(t),c=e.style;if(l||(t=et(o)),r=E.cssHooks[t]||E.cssHooks[o],void 0===i)return r&&"get"in r&&void 0!==(s=r.get(e,!1,n))?s:c[t];"string"===(a=typeof i)&&(s=te.exec(i))&&s[1]&&(i=oe(e,t,s),a="number"),null!=i&&i==i&&("number"!==a||l||(i+=s&&s[3]||(E.cssNumber[o]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(c[t]="inherit"),r&&"set"in r&&void 0===(i=r.set(e,i,n))||(l?c.setProperty(t,i):c[t]=i))}},css:function(e,t,i,n){var s,a=X(t);return it.test(t)||(t=et(a)),(a=E.cssHooks[t]||E.cssHooks[a])&&"get"in a&&(s=a.get(e,!0,i)),void 0===s&&(s=Ye(e,t,n)),"normal"===s&&t in st&&(s=st[t]),""===i||i?(t=parseFloat(s),!0===i||isFinite(t)?t||0:s):s}}),E.each(["height","width"],function(e,o){E.cssHooks[o]={get:function(e,t,i){if(t)return!tt.test(E.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ot(e,o,i):Re(e,nt,function(){return ot(e,o,i)})},set:function(e,t,i){var n,s=We(e),a=!y.scrollboxSize()&&"absolute"===s.position,r=(a||i)&&"border-box"===E.css(e,"boxSizing",!1,s),i=i?rt(e,o,i,r,s):0;return r&&a&&(i-=Math.ceil(e["offset"+o[0].toUpperCase()+o.slice(1)]-parseFloat(s[o])-rt(e,o,"border",!1,s)-.5)),i&&(n=te.exec(t))&&"px"!==(n[3]||"px")&&(e.style[o]=t,t=E.css(e,o)),at(0,t,i)}}}),E.cssHooks.marginLeft=Ke(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ye(e,"marginLeft"))||e.getBoundingClientRect().left-Re(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),E.each({margin:"",padding:"",border:"Width"},function(s,a){E.cssHooks[s+a]={expand:function(e){for(var t=0,i={},n="string"==typeof e?e.split(" "):[e];t<4;t++)i[s+ie[t]+a]=n[t]||n[t-2]||n[0];return i}},"margin"!==s&&(E.cssHooks[s+a].set=at)}),E.fn.extend({css:function(e,t){return q(this,function(e,t,i){var n,s,a={},r=0;if(Array.isArray(t)){for(n=We(e),s=t.length;r<s;r++)a[t[r]]=E.css(e,t[r],!1,n);return a}return void 0!==i?E.style(e,t,i):E.css(e,t)},e,t,1<arguments.length)}}),(E.Tween=lt).prototype={constructor:lt,init:function(e,t,i,n,s,a){this.elem=e,this.prop=i,this.easing=s||E.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=a||(E.cssNumber[i]?"":"px")},cur:function(){var e=lt.propHooks[this.prop];return(e&&e.get?e:lt.propHooks._default).get(this)},run:function(e){var t,i=lt.propHooks[this.prop];return this.options.duration?this.pos=t=E.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),(i&&i.set?i:lt.propHooks._default).set(this),this}},lt.prototype.init.prototype=lt.prototype,lt.propHooks={_default:{get:function(e){return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(e=E.css(e.elem,e.prop,""))&&"auto"!==e?e:0},set:function(e){E.fx.step[e.prop]?E.fx.step[e.prop](e):1!==e.elem.nodeType||!E.cssHooks[e.prop]&&null==e.elem.style[et(e.prop)]?e.elem[e.prop]=e.now:E.style(e.elem,e.prop,e.now+e.unit)}}},lt.propHooks.scrollTop=lt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},E.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},E.fx=lt.prototype.init,E.fx.step={};var ct,ut,dt=/^(?:toggle|show|hide)$/,ht=/queueHooks$/;function pt(){ut&&(!1===S.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(pt):C.setTimeout(pt,E.fx.interval),E.fx.tick())}function ft(){return C.setTimeout(function(){ct=void 0}),ct=Date.now()}function mt(e,t){var i,n=0,s={height:e};for(t=t?1:0;n<4;n+=2-t)s["margin"+(i=ie[n])]=s["padding"+i]=e;return t&&(s.opacity=s.width=e),s}function gt(e,t,i){for(var n,s=(vt.tweeners[t]||[]).concat(vt.tweeners["*"]),a=0,r=s.length;a<r;a++)if(n=s[a].call(i,t,e))return n}function vt(s,e,t){var i,a,n=0,r=vt.prefilters.length,o=E.Deferred().always(function(){delete l.elem}),l=function(){if(a)return!1;for(var e=ct||ft(),e=Math.max(0,c.startTime+c.duration-e),t=1-(e/c.duration||0),i=0,n=c.tweens.length;i<n;i++)c.tweens[i].run(t);return o.notifyWith(s,[c,t,e]),t<1&&n?e:(n||o.notifyWith(s,[c,1,0]),o.resolveWith(s,[c]),!1)},c=o.promise({elem:s,props:E.extend({},e),opts:E.extend(!0,{specialEasing:{},easing:E.easing._default},t),originalProperties:e,originalOptions:t,startTime:ct||ft(),duration:t.duration,tweens:[],createTween:function(e,t){e=E.Tween(s,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(e),e},stop:function(e){var t=0,i=e?c.tweens.length:0;if(a)return this;for(a=!0;t<i;t++)c.tweens[t].run(1);return e?(o.notifyWith(s,[c,1,0]),o.resolveWith(s,[c,e])):o.rejectWith(s,[c,e]),this}}),u=c.props;for(!function(e,t){var i,n,s,a,r;for(i in e)if(s=t[n=X(i)],a=e[i],Array.isArray(a)&&(s=a[1],a=e[i]=a[0]),i!==n&&(e[n]=a,delete e[i]),(r=E.cssHooks[n])&&"expand"in r)for(i in a=r.expand(a),delete e[n],a)i in e||(e[i]=a[i],t[i]=s);else t[n]=s}(u,c.opts.specialEasing);n<r;n++)if(i=vt.prefilters[n].call(c,s,u,c.opts))return b(i.stop)&&(E._queueHooks(c.elem,c.opts.queue).stop=i.stop.bind(i)),i;return E.map(u,gt,c),b(c.opts.start)&&c.opts.start.call(s,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),E.fx.timer(E.extend(l,{elem:s,anim:c,queue:c.opts.queue})),c}E.Animation=E.extend(vt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return oe(i.elem,e,te.exec(t),i),i}]},tweener:function(e,t){for(var i,n=0,s=(e=b(e)?(t=e,["*"]):e.match(R)).length;n<s;n++)i=e[n],vt.tweeners[i]=vt.tweeners[i]||[],vt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,s,a,r,o,l,c,u="width"in t||"height"in t,d=this,h={},p=e.style,f=e.nodeType&&re(e),m=Y.get(e,"fxshow");for(n in i.queue||(null==(r=E._queueHooks(e,"fx")).unqueued&&(r.unqueued=0,o=r.empty.fire,r.empty.fire=function(){r.unqueued||o()}),r.unqueued++,d.always(function(){d.always(function(){r.unqueued--,E.queue(e,"fx").length||r.empty.fire()})})),t)if(s=t[n],dt.test(s)){if(delete t[n],a=a||"toggle"===s,s===(f?"hide":"show")){if("show"!==s||!m||void 0===m[n])continue;f=!0}h[n]=m&&m[n]||E.style(e,n)}if((l=!E.isEmptyObject(t))||!E.isEmptyObject(h))for(n in u&&1===e.nodeType&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],null==(c=m&&m.display)&&(c=Y.get(e,"display")),"none"===(u=E.css(e,"display"))&&(c?u=c:(ce([e],!0),c=e.style.display||c,u=E.css(e,"display"),ce([e]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===E.css(e,"float")&&(l||(d.done(function(){p.display=c}),null==c&&(u=p.display,c="none"===u?"":u)),p.display="inline-block")),i.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]})),l=!1,h)l||(m?"hidden"in m&&(f=m.hidden):m=Y.access(e,"fxshow",{display:c}),a&&(m.hidden=!f),f&&ce([e],!0),d.done(function(){for(n in f||ce([e]),Y.remove(e,"fxshow"),h)E.style(e,n,h[n])})),l=gt(f?m[n]:0,n,d),n in m||(m[n]=l.start,f&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?vt.prefilters.unshift(e):vt.prefilters.push(e)}}),E.speed=function(e,t,i){var n=e&&"object"==typeof e?E.extend({},e):{complete:i||!i&&t||b(e)&&e,duration:e,easing:i&&t||t&&!b(t)&&t};return E.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in E.fx.speeds?n.duration=E.fx.speeds[n.duration]:n.duration=E.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){b(n.old)&&n.old.call(this),n.queue&&E.dequeue(this,n.queue)},n},E.fn.extend({fadeTo:function(e,t,i,n){return this.filter(re).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(t,e,i,n){var s=E.isEmptyObject(t),a=E.speed(e,i,n),n=function(){var e=vt(this,E.extend({},t),a);(s||Y.get(this,"finish"))&&e.stop(!0)};return n.finish=n,s||!1===a.queue?this.each(n):this.queue(a.queue,n)},stop:function(s,e,a){function r(e){var t=e.stop;delete e.stop,t(a)}return"string"!=typeof s&&(a=e,e=s,s=void 0),e&&this.queue(s||"fx",[]),this.each(function(){var e=!0,t=null!=s&&s+"queueHooks",i=E.timers,n=Y.get(this);if(t)n[t]&&n[t].stop&&r(n[t]);else for(t in n)n[t]&&n[t].stop&&ht.test(t)&&r(n[t]);for(t=i.length;t--;)i[t].elem!==this||null!=s&&i[t].queue!==s||(i[t].anim.stop(a),e=!1,i.splice(t,1));!e&&a||E.dequeue(this,s)})},finish:function(r){return!1!==r&&(r=r||"fx"),this.each(function(){var e,t=Y.get(this),i=t[r+"queue"],n=t[r+"queueHooks"],s=E.timers,a=i?i.length:0;for(t.finish=!0,E.queue(this,r,[]),n&&n.stop&&n.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===r&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<a;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),E.each(["toggle","show","hide"],function(e,n){var s=E.fn[n];E.fn[n]=function(e,t,i){return null==e||"boolean"==typeof e?s.apply(this,arguments):this.animate(mt(n,!0),e,t,i)}}),E.each({slideDown:mt("show"),slideUp:mt("hide"),slideToggle:mt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,n){E.fn[e]=function(e,t,i){return this.animate(n,e,t,i)}}),E.timers=[],E.fx.tick=function(){var e,t=0,i=E.timers;for(ct=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||E.fx.stop(),ct=void 0},E.fx.timer=function(e){E.timers.push(e),E.fx.start()},E.fx.interval=13,E.fx.start=function(){ut||(ut=!0,pt())},E.fx.stop=function(){ut=null},E.fx.speeds={slow:600,fast:200,_default:400},E.fn.delay=function(n,e){return n=E.fx&&E.fx.speeds[n]||n,e=e||"fx",this.queue(e,function(e,t){var i=C.setTimeout(e,n);t.stop=function(){C.clearTimeout(i)}})},d=S.createElement("input"),ee=S.createElement("select").appendChild(S.createElement("option")),d.type="checkbox",y.checkOn=""!==d.value,y.optSelected=ee.selected,(d=S.createElement("input")).value="t",d.type="radio",y.radioValue="t"===d.value;var yt,bt=E.expr.attrHandle;E.fn.extend({attr:function(e,t){return q(this,E.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){E.removeAttr(this,e)})}}),E.extend({attr:function(e,t,i){var n,s,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return void 0===e.getAttribute?E.prop(e,t,i):(1===a&&E.isXMLDoc(e)||(s=E.attrHooks[t.toLowerCase()]||(E.expr.match.bool.test(t)?yt:void 0)),void 0!==i?null===i?void E.removeAttr(e,t):s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:(e.setAttribute(t,i+""),i):!(s&&"get"in s&&null!==(n=s.get(e,t)))&&null==(n=E.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&M(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,s=t&&t.match(R);if(s&&1===e.nodeType)for(;i=s[n++];)e.removeAttribute(i)}}),yt={set:function(e,t,i){return!1===t?E.removeAttr(e,i):e.setAttribute(i,i),i}},E.each(E.expr.match.bool.source.match(/\w+/g),function(e,t){var r=bt[t]||E.find.attr;bt[t]=function(e,t,i){var n,s,a=t.toLowerCase();return i||(s=bt[a],bt[a]=n,n=null!=r(e,t,i)?a:null,bt[a]=s),n}});var wt=/^(?:input|select|textarea|button)$/i,xt=/^(?:a|area)$/i;function Ct(e){return(e.match(R)||[]).join(" ")}function St(e){return e.getAttribute&&e.getAttribute("class")||""}function Et(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(R)||[]}E.fn.extend({prop:function(e,t){return q(this,E.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[E.propFix[e]||e]})}}),E.extend({prop:function(e,t,i){var n,s,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return 1===a&&E.isXMLDoc(e)||(t=E.propFix[t]||t,s=E.propHooks[t]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:e[t]=i:s&&"get"in s&&null!==(n=s.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=E.find.attr(e,"tabindex");return t?parseInt(t,10):wt.test(e.nodeName)||xt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(E.propHooks.selected={get:function(e){e=e.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(e){e=e.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),E.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){E.propFix[this.toLowerCase()]=this}),E.fn.extend({addClass:function(t){var e,i,n,s,a,r,o=0;if(b(t))return this.each(function(e){E(this).addClass(t.call(this,e,St(this)))});if((e=Et(t)).length)for(;i=this[o++];)if(r=St(i),n=1===i.nodeType&&" "+Ct(r)+" "){for(a=0;s=e[a++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");r!==(r=Ct(n))&&i.setAttribute("class",r)}return this},removeClass:function(t){var e,i,n,s,a,r,o=0;if(b(t))return this.each(function(e){E(this).removeClass(t.call(this,e,St(this)))});if(!arguments.length)return this.attr("class","");if((e=Et(t)).length)for(;i=this[o++];)if(r=St(i),n=1===i.nodeType&&" "+Ct(r)+" "){for(a=0;s=e[a++];)for(;-1<n.indexOf(" "+s+" ");)n=n.replace(" "+s+" "," ");r!==(r=Ct(n))&&i.setAttribute("class",r)}return this},toggleClass:function(s,t){var a=typeof s,r="string"==a||Array.isArray(s);return"boolean"==typeof t&&r?t?this.addClass(s):this.removeClass(s):b(s)?this.each(function(e){E(this).toggleClass(s.call(this,e,St(this),t),t)}):this.each(function(){var e,t,i,n;if(r)for(t=0,i=E(this),n=Et(s);e=n[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==s&&"boolean"!=a||((e=St(this))&&Y.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==s&&Y.get(this,"__className__")||""))})},hasClass:function(e){for(var t,i=0,n=" "+e+" ";t=this[i++];)if(1===t.nodeType&&-1<(" "+Ct(St(t))+" ").indexOf(n))return!0;return!1}});var Tt=/\r/g;E.fn.extend({val:function(t){var i,e,n,s=this[0];return arguments.length?(n=b(t),this.each(function(e){1===this.nodeType&&(null==(e=n?t.call(this,e,E(this).val()):t)?e="":"number"==typeof e?e+="":Array.isArray(e)&&(e=E.map(e,function(e){return null==e?"":e+""})),(i=E.valHooks[this.type]||E.valHooks[this.nodeName.toLowerCase()])&&"set"in i&&void 0!==i.set(this,e,"value")||(this.value=e))})):s?(i=E.valHooks[s.type]||E.valHooks[s.nodeName.toLowerCase()])&&"get"in i&&void 0!==(e=i.get(s,"value"))?e:"string"==typeof(e=s.value)?e.replace(Tt,""):null==e?"":e:void 0}}),E.extend({valHooks:{option:{get:function(e){var t=E.find.attr(e,"value");return null!=t?t:Ct(E.text(e))}},select:{get:function(e){for(var t,i=e.options,n=e.selectedIndex,s="select-one"===e.type,a=s?null:[],r=s?n+1:i.length,o=n<0?r:s?n:0;o<r;o++)if(((t=i[o]).selected||o===n)&&!t.disabled&&(!t.parentNode.disabled||!M(t.parentNode,"optgroup"))){if(t=E(t).val(),s)return t;a.push(t)}return a},set:function(e,t){for(var i,n,s=e.options,a=E.makeArray(t),r=s.length;r--;)((n=s[r]).selected=-1<E.inArray(E.valHooks.option.get(n),a))&&(i=!0);return i||(e.selectedIndex=-1),a}}}}),E.each(["radio","checkbox"],function(){E.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<E.inArray(E(e).val(),t)}},y.checkOn||(E.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in C;function At(e){e.stopPropagation()}var Mt=/^(?:focusinfocus|focusoutblur)$/;E.extend(E.event,{trigger:function(e,t,i,n){var s,a,r,o,l,c,u,d=[i||S],h=v.call(e,"type")?e.type:e,p=v.call(e,"namespace")?e.namespace.split("."):[],f=u=a=i=i||S;if(3!==i.nodeType&&8!==i.nodeType&&!Mt.test(h+E.event.triggered)&&(-1<h.indexOf(".")&&(h=(p=h.split(".")).shift(),p.sort()),o=h.indexOf(":")<0&&"on"+h,(e=e[E.expando]?e:new E.Event(h,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:E.makeArray(t,[e]),c=E.event.special[h]||{},n||!c.trigger||!1!==c.trigger.apply(i,t))){if(!n&&!c.noBubble&&!m(i)){for(r=c.delegateType||h,Mt.test(r+h)||(f=f.parentNode);f;f=f.parentNode)d.push(f),a=f;a===(i.ownerDocument||S)&&d.push(a.defaultView||a.parentWindow||C)}for(s=0;(f=d[s++])&&!e.isPropagationStopped();)u=f,e.type=1<s?r:c.bindType||h,(l=(Y.get(f,"events")||Object.create(null))[e.type]&&Y.get(f,"handle"))&&l.apply(f,t),(l=o&&f[o])&&l.apply&&U(f)&&(e.result=l.apply(f,t),!1===e.result&&e.preventDefault());return e.type=h,n||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(d.pop(),t)||!U(i)||o&&b(i[h])&&!m(i)&&((a=i[o])&&(i[o]=null),E.event.triggered=h,e.isPropagationStopped()&&u.addEventListener(h,At),i[h](),e.isPropagationStopped()&&u.removeEventListener(h,At),E.event.triggered=void 0,a&&(i[o]=a)),e.result}},simulate:function(e,t,i){e=E.extend(new E.Event,i,{type:e,isSimulated:!0});E.event.trigger(e,null,t)}}),E.fn.extend({trigger:function(e,t){return this.each(function(){E.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return E.event.trigger(e,t,i,!0)}}),y.focusin||E.each({focus:"focusin",blur:"focusout"},function(i,n){function s(e){E.event.simulate(n,e.target,E.event.fix(e))}E.event.special[n]={setup:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,n);t||e.addEventListener(i,s,!0),Y.access(e,n,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,n)-1;t?Y.access(e,n,t):(e.removeEventListener(i,s,!0),Y.remove(e,n))}}});var Dt=C.location,Ot={guid:Date.now()},Pt=/\?/;E.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||E.error("Invalid XML: "+e),t};var It=/\[\]$/,kt=/\r?\n/g,Nt=/^(?:submit|button|image|reset|file)$/i,Lt=/^(?:input|select|textarea|keygen)/i;E.param=function(e,t){function i(e,t){t=b(t)?t():t,s[s.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==t?"":t)}var n,s=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!E.isPlainObject(e))E.each(e,function(){i(this.name,this.value)});else for(n in e)!function i(n,e,s,a){if(Array.isArray(e))E.each(e,function(e,t){s||It.test(n)?a(n,t):i(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,s,a)});else if(s||"object"!==f(e))a(n,e);else for(var t in e)i(n+"["+t+"]",e[t],s,a)}(n,e[n],t,i);return s.join("&")},E.fn.extend({serialize:function(){return E.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=E.prop(this,"elements");return e?E.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!E(this).is(":disabled")&&Lt.test(this.nodeName)&&!Nt.test(e)&&(this.checked||!ue.test(e))}).map(function(e,t){var i=E(this).val();return null==i?null:Array.isArray(i)?E.map(i,function(e){return{name:t.name,value:e.replace(kt,"\r\n")}}):{name:t.name,value:i.replace(kt,"\r\n")}}).get()}});var Rt=/%20/g,Bt=/#.*$/,zt=/([?&])_=[^&]*/,Ft=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ht=/^(?:GET|HEAD)$/,$t=/^\/\//,jt={},qt={},Gt="*/".concat("*"),_t=S.createElement("a");function Wt(a){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,n=0,s=e.toLowerCase().match(R)||[];if(b(t))for(;i=s[n++];)"+"===i[0]?(i=i.slice(1)||"*",(a[i]=a[i]||[]).unshift(t)):(a[i]=a[i]||[]).push(t)}}function Xt(t,n,s,a){var r={},o=t===qt;function l(e){var i;return r[e]=!0,E.each(t[e]||[],function(e,t){t=t(n,s,a);return"string"!=typeof t||o||r[t]?o?!(i=t):void 0:(n.dataTypes.unshift(t),l(t),!1)}),i}return l(n.dataTypes[0])||!r["*"]&&l("*")}function Ut(e,t){var i,n,s=E.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((s[i]?e:n=n||{})[i]=t[i]);return n&&E.extend(!0,e,n),e}_t.href=Dt.href,E.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Dt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Dt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Gt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":E.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Ut(Ut(e,E.ajaxSettings),t):Ut(E.ajaxSettings,e)},ajaxPrefilter:Wt(jt),ajaxTransport:Wt(qt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var l,c,u,i,d,n,h,p,s,f=E.ajaxSetup({},t),m=f.context||f,g=f.context&&(m.nodeType||m.jquery)?E(m):E.event,v=E.Deferred(),y=E.Callbacks("once memory"),b=f.statusCode||{},a={},r={},o="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(h){if(!i)for(i={};t=Ft.exec(u);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?u:null},setRequestHeader:function(e,t){return null==h&&(e=r[e.toLowerCase()]=r[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(f.mimeType=e),this},statusCode:function(e){if(e)if(h)w.always(e[w.status]);else for(var t in e)b[t]=[b[t],e[t]];return this},abort:function(e){e=e||o;return l&&l.abort(e),x(0,e),this}};if(v.promise(w),f.url=((e||f.url||Dt.href)+"").replace($t,Dt.protocol+"//"),f.type=t.method||t.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(R)||[""],null==f.crossDomain){n=S.createElement("a");try{n.href=f.url,n.href=n.href,f.crossDomain=_t.protocol+"//"+_t.host!=n.protocol+"//"+n.host}catch(e){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=E.param(f.data,f.traditional)),Xt(jt,f,t,w),h)return w;for(s in(p=E.event&&f.global)&&0==E.active++&&E.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Ht.test(f.type),c=f.url.replace(Bt,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(Rt,"+")):(e=f.url.slice(c.length),f.data&&(f.processData||"string"==typeof f.data)&&(c+=(Pt.test(c)?"&":"?")+f.data,delete f.data),!1===f.cache&&(c=c.replace(zt,"$1"),e=(Pt.test(c)?"&":"?")+"_="+Ot.guid+++e),f.url=c+e),f.ifModified&&(E.lastModified[c]&&w.setRequestHeader("If-Modified-Since",E.lastModified[c]),E.etag[c]&&w.setRequestHeader("If-None-Match",E.etag[c])),(f.data&&f.hasContent&&!1!==f.contentType||t.contentType)&&w.setRequestHeader("Content-Type",f.contentType),w.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Gt+"; q=0.01":""):f.accepts["*"]),f.headers)w.setRequestHeader(s,f.headers[s]);if(f.beforeSend&&(!1===f.beforeSend.call(m,w,f)||h))return w.abort();if(o="abort",y.add(f.complete),w.done(f.success),w.fail(f.error),l=Xt(qt,f,t,w)){if(w.readyState=1,p&&g.trigger("ajaxSend",[w,f]),h)return w;f.async&&0<f.timeout&&(d=C.setTimeout(function(){w.abort("timeout")},f.timeout));try{h=!1,l.send(a,x)}catch(e){if(h)throw e;x(-1,e)}}else x(-1,"No Transport");function x(e,t,i,n){var s,a,r,o=t;h||(h=!0,d&&C.clearTimeout(d),l=void 0,u=n||"",w.readyState=0<e?4:0,n=200<=e&&e<300||304===e,i&&(r=function(e,t,i){for(var n,s,a,r,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(s in o)if(o[s]&&o[s].test(n)){l.unshift(s);break}if(l[0]in i)a=l[0];else{for(s in i){if(!l[0]||e.converters[s+" "+l[0]]){a=s;break}r=r||s}a=a||r}if(a)return a!==l[0]&&l.unshift(a),i[a]}(f,w,i)),!n&&-1<E.inArray("script",f.dataTypes)&&(f.converters["text script"]=function(){}),r=function(e,t,i,n){var s,a,r,o,l,c={},u=e.dataTypes.slice();if(u[1])for(r in e.converters)c[r.toLowerCase()]=e.converters[r];for(a=u.shift();a;)if(e.responseFields[a]&&(i[e.responseFields[a]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=a,a=u.shift())if("*"===a)a=l;else if("*"!==l&&l!==a){if(!(r=c[l+" "+a]||c["* "+a]))for(s in c)if((o=s.split(" "))[1]===a&&(r=c[l+" "+o[0]]||c["* "+o[0]])){!0===r?r=c[s]:!0!==c[s]&&(a=o[0],u.unshift(o[1]));break}if(!0!==r)if(r&&e.throws)t=r(t);else try{t=r(t)}catch(e){return{state:"parsererror",error:r?e:"No conversion from "+l+" to "+a}}}return{state:"success",data:t}}(f,r,w,n),n?(f.ifModified&&((i=w.getResponseHeader("Last-Modified"))&&(E.lastModified[c]=i),(i=w.getResponseHeader("etag"))&&(E.etag[c]=i)),204===e||"HEAD"===f.type?o="nocontent":304===e?o="notmodified":(o=r.state,s=r.data,n=!(a=r.error))):(a=o,!e&&o||(o="error",e<0&&(e=0))),w.status=e,w.statusText=(t||o)+"",n?v.resolveWith(m,[s,o,w]):v.rejectWith(m,[w,o,a]),w.statusCode(b),b=void 0,p&&g.trigger(n?"ajaxSuccess":"ajaxError",[w,f,n?s:a]),y.fireWith(m,[w,o]),p&&(g.trigger("ajaxComplete",[w,f]),--E.active||E.event.trigger("ajaxStop")))}return w},getJSON:function(e,t,i){return E.get(e,t,i,"json")},getScript:function(e,t){return E.get(e,void 0,t,"script")}}),E.each(["get","post"],function(e,s){E[s]=function(e,t,i,n){return b(t)&&(n=n||i,i=t,t=void 0),E.ajax(E.extend({url:e,type:s,dataType:n,data:t,success:i},E.isPlainObject(e)&&e))}}),E.ajaxPrefilter(function(e){for(var t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),E._evalUrl=function(e,t,i){return E.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){E.globalEval(e,t,i)}})},E.fn.extend({wrapAll:function(e){return this[0]&&(b(e)&&(e=e.call(this[0])),e=E(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return b(i)?this.each(function(e){E(this).wrapInner(i.call(this,e))}):this.each(function(){var e=E(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=b(t);return this.each(function(e){E(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){E(this).replaceWith(this.childNodes)}),this}}),E.expr.pseudos.hidden=function(e){return!E.expr.pseudos.visible(e)},E.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},E.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var Vt={0:200,1223:204},Yt=E.ajaxSettings.xhr();y.cors=!!Yt&&"withCredentials"in Yt,y.ajax=Yt=!!Yt,E.ajaxTransport(function(s){var a,r;if(y.cors||Yt&&!s.crossDomain)return{send:function(e,t){var i,n=s.xhr();if(n.open(s.type,s.url,s.async,s.username,s.password),s.xhrFields)for(i in s.xhrFields)n[i]=s.xhrFields[i];for(i in s.mimeType&&n.overrideMimeType&&n.overrideMimeType(s.mimeType),s.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)n.setRequestHeader(i,e[i]);a=function(e){return function(){a&&(a=r=n.onload=n.onerror=n.onabort=n.ontimeout=n.onreadystatechange=null,"abort"===e?n.abort():"error"===e?"number"!=typeof n.status?t(0,"error"):t(n.status,n.statusText):t(Vt[n.status]||n.status,n.statusText,"text"!==(n.responseType||"text")||"string"!=typeof n.responseText?{binary:n.response}:{text:n.responseText},n.getAllResponseHeaders()))}},n.onload=a(),r=n.onerror=n.ontimeout=a("error"),void 0!==n.onabort?n.onabort=r:n.onreadystatechange=function(){4===n.readyState&&C.setTimeout(function(){a&&r()})},a=a("abort");try{n.send(s.hasContent&&s.data||null)}catch(e){if(a)throw e}},abort:function(){a&&a()}}}),E.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),E.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return E.globalEval(e),e}}}),E.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),E.ajaxTransport("script",function(i){var n,s;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){n=E("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",s=function(e){n.remove(),s=null,e&&t("error"===e.type?404:200,e.type)}),S.head.appendChild(n[0])},abort:function(){s&&s()}}});var Kt=[],Qt=/(=)\?(?=&|$)|\?\?/;E.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Kt.pop()||E.expando+"_"+Ot.guid++;return this[e]=!0,e}}),E.ajaxPrefilter("json jsonp",function(e,t,i){var n,s,a,r=!1!==e.jsonp&&(Qt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Qt.test(e.data)&&"data");if(r||"jsonp"===e.dataTypes[0])return n=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,r?e[r]=e[r].replace(Qt,"$1"+n):!1!==e.jsonp&&(e.url+=(Pt.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return a||E.error(n+" was not called"),a[0]},e.dataTypes[0]="json",s=C[n],C[n]=function(){a=arguments},i.always(function(){void 0===s?E(C).removeProp(n):C[n]=s,e[n]&&(e.jsonpCallback=t.jsonpCallback,Kt.push(n)),a&&b(s)&&s(a[0]),a=s=void 0}),"script"}),y.createHTMLDocument=((d=S.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===d.childNodes.length),E.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((n=(t=S.implementation.createHTMLDocument("")).createElement("base")).href=S.location.href,t.head.appendChild(n)):t=S),n=!i&&[],(i=D.exec(e))?[t.createElement(i[1])]:(i=ve([e],t,n),n&&n.length&&E(n).remove(),E.merge([],i.childNodes)));var n},E.fn.load=function(e,t,i){var n,s,a,r=this,o=e.indexOf(" ");return-1<o&&(n=Ct(e.slice(o)),e=e.slice(0,o)),b(t)?(i=t,t=void 0):t&&"object"==typeof t&&(s="POST"),0<r.length&&E.ajax({url:e,type:s||"GET",dataType:"html",data:t}).done(function(e){a=arguments,r.html(n?E("<div>").append(E.parseHTML(e)).find(n):e)}).always(i&&function(e,t){r.each(function(){i.apply(this,a||[e.responseText,t,e])})}),this},E.expr.pseudos.animated=function(t){return E.grep(E.timers,function(e){return t===e.elem}).length},E.offset={setOffset:function(e,t,i){var n,s,a,r,o=E.css(e,"position"),l=E(e),c={};"static"===o&&(e.style.position="relative"),a=l.offset(),n=E.css(e,"top"),r=E.css(e,"left"),r=("absolute"===o||"fixed"===o)&&-1<(n+r).indexOf("auto")?(s=(o=l.position()).top,o.left):(s=parseFloat(n)||0,parseFloat(r)||0),b(t)&&(t=t.call(e,i,E.extend({},a))),null!=t.top&&(c.top=t.top-a.top+s),null!=t.left&&(c.left=t.left-a.left+r),"using"in t?t.using.call(e,c):("number"==typeof c.top&&(c.top+="px"),"number"==typeof c.left&&(c.left+="px"),l.css(c))}},E.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){E.offset.setOffset(this,t,e)});var e,i=this[0];return i?i.getClientRects().length?(e=i.getBoundingClientRect(),i=i.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],s={top:0,left:0};if("fixed"===E.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===E.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((s=E(e).offset()).top+=E.css(e,"borderTopWidth",!0),s.left+=E.css(e,"borderLeftWidth",!0))}return{top:t.top-s.top-E.css(n,"marginTop",!0),left:t.left-s.left-E.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===E.css(e,"position");)e=e.offsetParent;return e||ne})}}),E.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,s){var a="pageYOffset"===s;E.fn[t]=function(e){return q(this,function(e,t,i){var n;return m(e)?n=e:9===e.nodeType&&(n=e.defaultView),void 0===i?n?n[s]:e[t]:void(n?n.scrollTo(a?n.pageXOffset:i,a?i:n.pageYOffset):e[t]=i)},t,e,arguments.length)}}),E.each(["top","left"],function(e,i){E.cssHooks[i]=Ke(y.pixelPosition,function(e,t){if(t)return t=Ye(e,i),_e.test(t)?E(e).position()[i]+"px":t})}),E.each({Height:"height",Width:"width"},function(r,o){E.each({padding:"inner"+r,content:o,"":"outer"+r},function(n,a){E.fn[a]=function(e,t){var i=arguments.length&&(n||"boolean"!=typeof e),s=n||(!0===e||!0===t?"margin":"border");return q(this,function(e,t,i){var n;return m(e)?0===a.indexOf("outer")?e["inner"+r]:e.document.documentElement["client"+r]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+r],n["scroll"+r],e.body["offset"+r],n["offset"+r],n["client"+r])):void 0===i?E.css(e,t,s):E.style(e,t,i,s)},o,i?e:void 0,i)}})}),E.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){E.fn[t]=function(e){return this.on(t,e)}}),E.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),E.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){E.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}});var Zt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;E.proxy=function(e,t){var i,n;if("string"==typeof t&&(n=e[t],t=e,e=n),b(e))return i=o.call(arguments,2),(n=function(){return e.apply(t||this,i.concat(o.call(arguments)))}).guid=e.guid=e.guid||E.guid++,n},E.holdReady=function(e){e?E.readyWait++:E.ready(!0)},E.isArray=Array.isArray,E.parseJSON=JSON.parse,E.nodeName=M,E.isFunction=b,E.isWindow=m,E.camelCase=X,E.type=f,E.now=Date.now,E.isNumeric=function(e){var t=E.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},E.trim=function(e){return null==e?"":(e+"").replace(Zt,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return E});var Jt=C.jQuery,ei=C.$;return E.noConflict=function(e){return C.$===E&&(C.$=ei),e&&C.jQuery===E&&(C.jQuery=Jt),E},void 0===e&&(C.jQuery=C.$=E),E}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,function(){"use strict";function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function t(){return(t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i,n=arguments[t];for(i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function n(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function s(t,i){void 0===t&&(t={}),void 0===i&&(i={}),Object.keys(i).forEach(function(e){void 0===t[e]?t[e]=i[e]:n(i[e])&&n(t[e])&&0<Object.keys(i[e]).length&&s(t[e],i[e])})}var i={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function v(){var e="undefined"!=typeof document?document:{};return s(e,i),e}var a={document:i,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}},requestAnimationFrame:function(e){return"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0)},cancelAnimationFrame:function(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function Y(){var e="undefined"!=typeof window?window:{};return s(e,a),e}function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t,i){return(l=function(){if("undefined"!=typeof Reflect&&Reflect.construct&&!Reflect.construct.sham){if("function"==typeof Proxy)return 1;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),1}catch(e){return}}}()?Reflect.construct:function(e,t,i){var n=[null];n.push.apply(n,t);n=new(Function.bind.apply(e,n));return i&&o(n,i.prototype),n}).apply(null,arguments)}function c(e){var i="function"==typeof Map?new Map:void 0;return(c=function(e){if(null===e||-1===Function.toString.call(e).indexOf("[native code]"))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==i){if(i.has(e))return i.get(e);i.set(e,t)}function t(){return l(e,arguments,r(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),o(t,e)})(e)}var u,d=(u=c(Array),L=u,(N=h).prototype=Object.create(L.prototype),(N.prototype.constructor=N).__proto__=L,h);function h(e){var t=u.call.apply(u,[this].concat(e))||this,e=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(t),i=e.__proto__;return Object.defineProperty(e,"__proto__",{get:function(){return i},set:function(e){i.__proto__=e}}),t}function p(e){void 0===e&&(e=[]);var t=[];return e.forEach(function(e){Array.isArray(e)?t.push.apply(t,p(e)):t.push(e)}),t}function f(e,t){return Array.prototype.filter.call(e,t)}function S(e,s){var t=Y(),a=v(),i=[];if(!s&&e instanceof d)return e;if(!e)return new d(i);if("string"==typeof e){var n=e.trim();if(0<=n.indexOf("<")&&0<=n.indexOf(">")){var r="div";0===n.indexOf("<li")&&(r="ul"),0===n.indexOf("<tr")&&(r="tbody"),0!==n.indexOf("<td")&&0!==n.indexOf("<th")||(r="tr"),0===n.indexOf("<tbody")&&(r="table"),0===n.indexOf("<option")&&(r="select");var o=a.createElement(r);o.innerHTML=n;for(var l=0;l<o.childNodes.length;l+=1)i.push(o.childNodes[l])}else i=function(e){if("string"!=typeof e)return[e];for(var t=[],i=(s||a).querySelectorAll(e),n=0;n<i.length;n+=1)t.push(i[n]);return t}(e.trim())}else if(e.nodeType||e===t||e===a)i.push(e);else if(Array.isArray(e)){if(e instanceof d)return e;i=e}return new d(function(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}(i))}S.fn=d.prototype;var m,x,C,g={addClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=p(t.map(function(e){return e.split(" ")}));return this.forEach(function(e){(e=e.classList).add.apply(e,n)}),this},removeClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=p(t.map(function(e){return e.split(" ")}));return this.forEach(function(e){(e=e.classList).remove.apply(e,n)}),this},hasClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=p(t.map(function(e){return e.split(" ")}));return 0<f(this,function(t){return 0<n.filter(function(e){return t.classList.contains(e)}).length}).length},toggleClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=p(t.map(function(e){return e.split(" ")}));this.forEach(function(t){n.forEach(function(e){t.classList.toggle(e)})})},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var i=0;i<this.length;i+=1)if(2===arguments.length)this[i].setAttribute(e,t);else for(var n in e)this[i][n]=e[n],this[i].setAttribute(n,e[n]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},transform:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transform=e;return this},transition:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transition="string"!=typeof e?e+"ms":e;return this},on:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=t[0],a=t[1],r=t[2],s=t[3];function o(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),S(t).is(a))r.apply(t,i);else for(var n=S(t).parents(),s=0;s<n.length;s+=1)S(n[s]).is(a)&&r.apply(n[s],i)}}function l(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}"function"==typeof t[1]&&(n=t[0],r=t[1],s=t[2],a=void 0),s=s||!1;for(var c,u=n.split(" "),d=0;d<this.length;d+=1){var h=this[d];if(a)for(c=0;c<u.length;c+=1){var p=u[c];h.dom7LiveListeners||(h.dom7LiveListeners={}),h.dom7LiveListeners[p]||(h.dom7LiveListeners[p]=[]),h.dom7LiveListeners[p].push({listener:r,proxyListener:o}),h.addEventListener(p,o,s)}else for(c=0;c<u.length;c+=1){var f=u[c];h.dom7Listeners||(h.dom7Listeners={}),h.dom7Listeners[f]||(h.dom7Listeners[f]=[]),h.dom7Listeners[f].push({listener:r,proxyListener:l}),h.addEventListener(f,l,s)}}return this},off:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=t[0],s=t[1],a=t[2],r=t[3];"function"==typeof t[1]&&(n=t[0],a=t[1],r=t[2],s=void 0),r=r||!1;for(var o=n.split(" "),l=0;l<o.length;l+=1)for(var c=o[l],u=0;u<this.length;u+=1){var d=this[u],h=void 0;if(!s&&d.dom7Listeners?h=d.dom7Listeners[c]:s&&d.dom7LiveListeners&&(h=d.dom7LiveListeners[c]),h&&h.length)for(var p=h.length-1;0<=p;--p){var f=h[p];!(a&&f.listener===a||a&&f.listener&&f.listener.dom7proxy&&f.listener.dom7proxy===a)&&a||(d.removeEventListener(c,f.proxyListener,r),h.splice(p,1))}}return this},trigger:function(){for(var e=Y(),t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];for(var s=i[0].split(" "),a=i[1],r=0;r<s.length;r+=1)for(var o=s[r],l=0;l<this.length;l+=1){var c,u=this[l];e.CustomEvent&&(c=new e.CustomEvent(o,{detail:a,bubbles:!0,cancelable:!0}),u.dom7EventData=i.filter(function(e,t){return 0<t}),u.dispatchEvent(c),u.dom7EventData=[],delete u.dom7EventData)}return this},transitionEnd:function(i){var n=this;return i&&n.on("transitionend",function e(t){t.target===this&&(i.call(this,t),n.off("transitionend",e))}),this},outerWidth:function(e){if(0<this.length){if(e){e=this.styles();return this[0].offsetWidth+parseFloat(e.getPropertyValue("margin-right"))+parseFloat(e.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){e=this.styles();return this[0].offsetHeight+parseFloat(e.getPropertyValue("margin-top"))+parseFloat(e.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},styles:function(){var e=Y();return this[0]?e.getComputedStyle(this[0],null):{}},offset:function(){if(0<this.length){var e=Y(),t=v(),i=this[0],n=i.getBoundingClientRect(),s=t.body,a=i.clientTop||s.clientTop||0,t=i.clientLeft||s.clientLeft||0,s=i===e?e.scrollY:i.scrollTop,i=i===e?e.scrollX:i.scrollLeft;return{top:n.top+s-a,left:n.left+i-t}}return null},css:function(e,t){var i,n=Y();if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var s in e)this[i].style[s]=e[s];return this}if(this[0])return n.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(i){return i&&this.forEach(function(e,t){i.apply(e,[e,t])}),this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:null;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,n=Y(),s=v(),a=this[0];if(!a||void 0===e)return!1;if("string"==typeof e){if(a.matches)return a.matches(e);if(a.webkitMatchesSelector)return a.webkitMatchesSelector(e);if(a.msMatchesSelector)return a.msMatchesSelector(e);for(t=S(e),i=0;i<t.length;i+=1)if(t[i]===a)return!0;return!1}if(e===s)return a===s;if(e===n)return a===n;if(e.nodeType||e instanceof d){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===a)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t=this.length;if(t-1<e)return S([]);if(e<0){t=t+e;return S(t<0?[]:[this[t]])}return S([this[e]])},append:function(){for(var e,t=v(),i=0;i<arguments.length;i+=1){e=i<0||arguments.length<=i?void 0:arguments[i];for(var n=0;n<this.length;n+=1)if("string"==typeof e){var s=t.createElement("div");for(s.innerHTML=e;s.firstChild;)this[n].appendChild(s.firstChild)}else if(e instanceof d)for(var a=0;a<e.length;a+=1)this[n].appendChild(e[a]);else this[n].appendChild(e)}return this},prepend:function(e){for(var t,i=v(),n=0;n<this.length;n+=1)if("string"==typeof e){var s=i.createElement("div");for(s.innerHTML=e,t=s.childNodes.length-1;0<=t;--t)this[n].insertBefore(s.childNodes[t],this[n].childNodes[0])}else if(e instanceof d)for(t=0;t<e.length;t+=1)this[n].insertBefore(e[t],this[n].childNodes[0]);else this[n].insertBefore(e,this[n].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&S(this[0].nextElementSibling).is(e)?S([this[0].nextElementSibling]):S([]):this[0].nextElementSibling?S([this[0].nextElementSibling]):S([]):S([])},nextAll:function(e){var t=[],i=this[0];if(!i)return S([]);for(;i.nextElementSibling;){var n=i.nextElementSibling;e&&!S(n).is(e)||t.push(n),i=n}return S(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&S(t.previousElementSibling).is(e)?S([t.previousElementSibling]):S([]):t.previousElementSibling?S([t.previousElementSibling]):S([])}return S([])},prevAll:function(e){var t=[],i=this[0];if(!i)return S([]);for(;i.previousElementSibling;){var n=i.previousElementSibling;e&&!S(n).is(e)||t.push(n),i=n}return S(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null===this[i].parentNode||e&&!S(this[i].parentNode).is(e)||t.push(this[i].parentNode);return S(t)},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].parentNode;n;)e&&!S(n).is(e)||t.push(n),n=n.parentNode;return S(t)},closest:function(e){var t=this;return void 0===e?S([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].querySelectorAll(e),s=0;s<n.length;s+=1)t.push(n[s]);return S(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].children,s=0;s<n.length;s+=1)e&&!S(n[s]).is(e)||t.push(n[s]);return S(t)},filter:function(e){return S(f(this,e))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this}};function E(e,t){return void 0===t&&(t=0),setTimeout(e,t)}function T(){return Date.now()}function y(e,t){void 0===t&&(t="x");var i,n,s,a=Y(),e=a.getComputedStyle(e,null);return a.WebKitCSSMatrix?(6<(n=e.transform||e.webkitTransform).split(",").length&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),s=new a.WebKitCSSMatrix("none"===n?"":n)):i=(s=e.MozTransform||e.OTransform||e.MsTransform||e.msTransform||e.transform||e.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(n=a.WebKitCSSMatrix?s.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=a.WebKitCSSMatrix?s.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),n||0}function b(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object}function K(e){for(var t=Object(arguments.length<=0?void 0:e),i=1;i<arguments.length;i+=1){var n=i<0||arguments.length<=i?void 0:arguments[i];if(null!=n)for(var s=Object.keys(Object(n)),a=0,r=s.length;a<r;a+=1){var o=s[a],l=Object.getOwnPropertyDescriptor(n,o);void 0!==l&&l.enumerable&&(b(t[o])&&b(n[o])?K(t[o],n[o]):!b(t[o])&&b(n[o])?(t[o]={},K(t[o],n[o])):t[o]=n[o])}}return t}function w(i,n){Object.keys(n).forEach(function(t){b(n[t])&&Object.keys(n[t]).forEach(function(e){"function"==typeof n[t][e]&&(n[t][e]=n[t][e].bind(i))}),i[t]=n[t]})}function A(){return m||(i=Y(),e=v(),m={touch:!!("ontouchstart"in i||i.DocumentTouch&&e instanceof i.DocumentTouch),pointerEvents:!!i.PointerEvent&&"maxTouchPoints"in i.navigator&&0<=i.navigator.maxTouchPoints,observer:"MutationObserver"in i||"WebkitMutationObserver"in i,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});i.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in i}),m;var i,e}Object.keys(g).forEach(function(e){S.fn[e]=g[e]});var M={name:"resize",create:function(){var e=this;K(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(e){var t=Y();t.addEventListener("resize",e.resize.resizeHandler),t.addEventListener("orientationchange",e.resize.orientationChangeHandler)},destroy:function(e){var t=Y();t.removeEventListener("resize",e.resize.resizeHandler),t.removeEventListener("orientationchange",e.resize.orientationChangeHandler)}}},D={attach:function(e,t){void 0===t&&(t={});var i=Y(),n=this,s=new(i.MutationObserver||i.WebkitMutationObserver)(function(e){var t;1!==e.length?(t=function(){n.emit("observerUpdate",e[0])},i.requestAnimationFrame?i.requestAnimationFrame(t):i.setTimeout(t,0)):n.emit("observerUpdate",e[0])});s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),n.observer.observers.push(s)},init:function(){if(this.support.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},O={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){w(this,{observer:t(t({},D),{},{observers:[]})})},on:{init:function(e){e.observer.init()},destroy:function(e){e.observer.destroy()}}};function P(){var e,t,i=this.params,n=this.el;n&&0===n.offsetWidth||(i.breakpoints&&this.setBreakpoint(),e=this.allowSlideNext,t=this.allowSlidePrev,n=this.snapGrid,this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),this.updateSlidesClasses(),("auto"===i.slidesPerView||1<i.slidesPerView)&&this.isEnd&&!this.isBeginning&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0),this.autoplay&&this.autoplay.running&&this.autoplay.paused&&this.autoplay.run(),this.allowSlidePrev=t,this.allowSlideNext=e,this.params.watchOverflow&&n!==this.snapGrid&&this.checkOverflow())}var I=!1;function k(){}var N,L,R,B={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,nested:!1,width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,loopPreventsSlide:!0,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0,_emitClasses:!1},z={modular:{useParams:function(t){var i=this;i.modules&&Object.keys(i.modules).forEach(function(e){e=i.modules[e];e.params&&K(t,e.params)})},useModules:function(i){void 0===i&&(i={});var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var t=n.modules[e],e=i[e]||{};t.on&&n.on&&Object.keys(t.on).forEach(function(e){n.on(e,t.on[e])}),t.create&&t.create.bind(n)(e)})}},eventsEmitter:{on:function(e,t,i){var n=this;if("function"!=typeof t)return n;var s=i?"unshift":"push";return e.split(" ").forEach(function(e){n.eventsListeners[e]||(n.eventsListeners[e]=[]),n.eventsListeners[e][s](t)}),n},once:function(n,s,e){var a=this;return"function"!=typeof s?a:(r.__emitterProxy=s,a.on(n,r,e));function r(){a.off(n,r),r.__emitterProxy&&delete r.__emitterProxy;for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];s.apply(a,t)}},onAny:function(e,t){if("function"!=typeof e)return this;t=t?"unshift":"push";return this.eventsAnyListeners.indexOf(e)<0&&this.eventsAnyListeners[t](e),this},offAny:function(e){if(!this.eventsAnyListeners)return this;e=this.eventsAnyListeners.indexOf(e);return 0<=e&&this.eventsAnyListeners.splice(e,1),this},off:function(e,n){var s=this;return s.eventsListeners&&e.split(" ").forEach(function(i){void 0===n?s.eventsListeners[i]=[]:s.eventsListeners[i]&&s.eventsListeners[i].forEach(function(e,t){(e===n||e.__emitterProxy&&e.__emitterProxy===n)&&s.eventsListeners[i].splice(t,1)})}),s},emit:function(){var e,n,s,a=this;if(!a.eventsListeners)return a;for(var t=arguments.length,i=new Array(t),r=0;r<t;r++)i[r]=arguments[r];return s="string"==typeof i[0]||Array.isArray(i[0])?(e=i[0],n=i.slice(1,i.length),a):(e=i[0].events,n=i[0].data,i[0].context||a),n.unshift(s),(Array.isArray(e)?e:e.split(" ")).forEach(function(t){var i;a.eventsAnyListeners&&a.eventsAnyListeners.length&&a.eventsAnyListeners.forEach(function(e){e.apply(s,[t].concat(n))}),a.eventsListeners&&a.eventsListeners[t]&&(i=[],a.eventsListeners[t].forEach(function(e){i.push(e)}),i.forEach(function(e){e.apply(s,n)}))}),a}},update:{updateSize:function(){var e=this.$el,t=void 0!==this.params.width&&null!==this.params.width?this.params.width:e[0].clientWidth,i=void 0!==this.params.height&&null!==this.params.width?this.params.height:e[0].clientHeight;0===t&&this.isHorizontal()||0===i&&this.isVertical()||(t=t-parseInt(e.css("padding-left")||0,10)-parseInt(e.css("padding-right")||0,10),i=i-parseInt(e.css("padding-top")||0,10)-parseInt(e.css("padding-bottom")||0,10),Number.isNaN(t)&&(t=0),Number.isNaN(i)&&(i=0),K(this,{width:t,height:i,size:this.isHorizontal()?t:i}))},updateSlides:function(){var e=Y(),i=this.params,t=this.$wrapperEl,n=this.size,s=this.rtlTranslate,a=this.wrongRTL,r=this.virtual&&i.virtual.enabled,o=(r?this.virtual:this).slides.length,l=t.children("."+this.params.slideClass),c=(r?this.virtual.slides:l).length,u=[],d=[],h=[];function p(e,t){return!i.cssMode||t!==l.length-1}var f=i.slidesOffsetBefore;"function"==typeof f&&(f=i.slidesOffsetBefore.call(this));var m=i.slidesOffsetAfter;"function"==typeof m&&(m=i.slidesOffsetAfter.call(this));var g,v=this.snapGrid.length,r=this.snapGrid.length,y=i.spaceBetween,b=-f,w=0,x=0;if(void 0!==n){"string"==typeof y&&0<=y.indexOf("%")&&(y=parseFloat(y.replace("%",""))/100*n),this.virtualSize=-y,s?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),1<i.slidesPerColumn&&(g=Math.floor(c/i.slidesPerColumn)===c/this.params.slidesPerColumn?c:Math.ceil(c/i.slidesPerColumn)*i.slidesPerColumn,"auto"!==i.slidesPerView&&"row"===i.slidesPerColumnFill&&(g=Math.max(g,i.slidesPerView*i.slidesPerColumn)));for(var C,S,E,T,A,M=i.slidesPerColumn,D=g/M,O=Math.floor(c/i.slidesPerColumn),P=0;P<c;P+=1){B=0;var I,k,N,L,R,B,z,F,H,$,j,q,G,_=l.eq(P);1<i.slidesPerColumn&&(R=L=N=void 0,"row"===i.slidesPerColumnFill&&1<i.slidesPerGroup?(k=Math.floor(P/(i.slidesPerGroup*i.slidesPerColumn)),I=P-i.slidesPerColumn*i.slidesPerGroup*k,q=0===k?i.slidesPerGroup:Math.min(Math.ceil((c-k*M*i.slidesPerGroup)/M),i.slidesPerGroup),N=(L=I-(R=Math.floor(I/q))*q+k*i.slidesPerGroup)+R*g/M,_.css({"-webkit-box-ordinal-group":N,"-moz-box-ordinal-group":N,"-ms-flex-order":N,"-webkit-order":N,order:N})):"column"===i.slidesPerColumnFill?(R=P-(L=Math.floor(P/M))*M,(O<L||L===O&&R===M-1)&&(R+=1)>=M&&(R=0,L+=1)):L=P-(R=Math.floor(P/D))*D,_.css("margin-"+(this.isHorizontal()?"top":"left"),0!==R&&i.spaceBetween&&i.spaceBetween+"px")),"none"!==_.css("display")&&("auto"===i.slidesPerView?(q=e.getComputedStyle(_[0],null),k=_[0].style.transform,N=_[0].style.webkitTransform,k&&(_[0].style.transform="none"),N&&(_[0].style.webkitTransform="none"),B=i.roundLengths?this.isHorizontal()?_.outerWidth(!0):_.outerHeight(!0):this.isHorizontal()?(L=parseFloat(q.getPropertyValue("width")||0),z=parseFloat(q.getPropertyValue("padding-left")||0),F=parseFloat(q.getPropertyValue("padding-right")||0),H=parseFloat(q.getPropertyValue("margin-left")||0),$=parseFloat(q.getPropertyValue("margin-right")||0),(R=q.getPropertyValue("box-sizing"))&&"border-box"===R?L+H+$:(G=(j=_[0]).clientWidth,L+z+F+H+$+(j.offsetWidth-G))):(z=parseFloat(q.getPropertyValue("height")||0),F=parseFloat(q.getPropertyValue("padding-top")||0),H=parseFloat(q.getPropertyValue("padding-bottom")||0),$=parseFloat(q.getPropertyValue("margin-top")||0),j=parseFloat(q.getPropertyValue("margin-bottom")||0),(G=q.getPropertyValue("box-sizing"))&&"border-box"===G?z+$+j:(G=(q=_[0]).clientHeight,z+F+H+$+j+(q.offsetHeight-G))),k&&(_[0].style.transform=k),N&&(_[0].style.webkitTransform=N),i.roundLengths&&(B=Math.floor(B))):(B=(n-(i.slidesPerView-1)*y)/i.slidesPerView,i.roundLengths&&(B=Math.floor(B)),l[P]&&(this.isHorizontal()?l[P].style.width=B+"px":l[P].style.height=B+"px")),l[P]&&(l[P].swiperSlideSize=B),h.push(B),i.centeredSlides?(b=b+B/2+w/2+y,0===w&&0!==P&&(b=b-n/2-y),0===P&&(b=b-n/2-y),Math.abs(b)<.001&&(b=0),i.roundLengths&&(b=Math.floor(b)),x%i.slidesPerGroup==0&&u.push(b),d.push(b)):(i.roundLengths&&(b=Math.floor(b)),(x-Math.min(this.params.slidesPerGroupSkip,x))%this.params.slidesPerGroup==0&&u.push(b),d.push(b),b=b+B+y),this.virtualSize+=B+y,w=B,x+=1)}if(this.virtualSize=Math.max(this.virtualSize,n)+m,s&&a&&("slide"===i.effect||"coverflow"===i.effect)&&t.css({width:this.virtualSize+i.spaceBetween+"px"}),i.setWrapperSize&&(this.isHorizontal()?t.css({width:this.virtualSize+i.spaceBetween+"px"}):t.css({height:this.virtualSize+i.spaceBetween+"px"})),1<i.slidesPerColumn&&(this.virtualSize=(B+i.spaceBetween)*g,this.virtualSize=Math.ceil(this.virtualSize/i.slidesPerColumn)-i.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+i.spaceBetween+"px"}):t.css({height:this.virtualSize+i.spaceBetween+"px"}),i.centeredSlides)){C=[];for(var W=0;W<u.length;W+=1){var X=u[W];i.roundLengths&&(X=Math.floor(X)),u[W]<this.virtualSize+u[0]&&C.push(X)}u=C}if(!i.centeredSlides){C=[];for(var U=0;U<u.length;U+=1){var V=u[U];i.roundLengths&&(V=Math.floor(V)),u[U]<=this.virtualSize-n&&C.push(V)}u=C,1<Math.floor(this.virtualSize-n)-Math.floor(u[u.length-1])&&u.push(this.virtualSize-n)}0===u.length&&(u=[0]),0!==i.spaceBetween&&(this.isHorizontal()?s?l.filter(p).css({marginLeft:y+"px"}):l.filter(p).css({marginRight:y+"px"}):l.filter(p).css({marginBottom:y+"px"})),i.centeredSlides&&i.centeredSlidesBounds&&(S=0,h.forEach(function(e){S+=e+(i.spaceBetween||0)}),E=(S-=i.spaceBetween)-n,u=u.map(function(e){return e<0?-f:E<e?E+m:e})),i.centerInsufficientSlides&&(T=0,h.forEach(function(e){T+=e+(i.spaceBetween||0)}),(T-=i.spaceBetween)<n&&(A=(n-T)/2,u.forEach(function(e,t){u[t]=e-A}),d.forEach(function(e,t){d[t]=e+A}))),K(this,{slides:l,snapGrid:u,slidesGrid:d,slidesSizesGrid:h}),c!==o&&this.emit("slidesLengthChange"),u.length!==v&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),d.length!==r&&this.emit("slidesGridLengthChange"),(i.watchSlidesProgress||i.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i,n=[],s=0;if("number"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),"auto"!==this.params.slidesPerView&&1<this.params.slidesPerView)if(this.params.centeredSlides)this.visibleSlides.each(function(e){n.push(e)});else for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var a=this.activeIndex+t;if(a>this.slides.length)break;n.push(this.slides.eq(a)[0])}else n.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<n.length;t+=1){void 0!==n[t]&&(s=s<(i=n[t].offsetHeight)?i:s)}s&&this.$wrapperEl.css("height",s+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.slides,n=this.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var s=n?e:-e;i.removeClass(t.slideVisibleClass),this.visibleSlidesIndexes=[],this.visibleSlides=[];for(var a=0;a<i.length;a+=1){var r,o,l=i[a],c=(s+(t.centeredSlides?this.minTranslate():0)-l.swiperSlideOffset)/(l.swiperSlideSize+t.spaceBetween);(t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight)&&(o=(r=-(s-l.swiperSlideOffset))+this.slidesSizesGrid[a],(0<=r&&r<this.size-1||1<o&&o<=this.size||r<=0&&o>=this.size)&&(this.visibleSlides.push(l),this.visibleSlidesIndexes.push(a),i.eq(a).addClass(t.slideVisibleClass))),l.progress=n?-c:c}this.visibleSlides=S(this.visibleSlides)}},updateProgress:function(e){void 0===e&&(r=this.rtlTranslate?-1:1,e=this&&this.translate&&this.translate*r||0);var t=this.params,i=this.maxTranslate()-this.minTranslate(),n=this.progress,s=this.isBeginning,a=s,r=o=this.isEnd,o=0==i?s=!(n=0):(s=(n=(e-this.minTranslate())/i)<=0,1<=n);K(this,{progress:n,isBeginning:s,isEnd:o}),(t.watchSlidesProgress||t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight)&&this.updateSlidesProgress(e),s&&!a&&this.emit("reachBeginning toEdge"),o&&!r&&this.emit("reachEnd toEdge"),(a&&!s||r&&!o)&&this.emit("fromEdge"),this.emit("progress",n)},updateSlidesClasses:function(){var e=this.slides,t=this.params,i=this.$wrapperEl,n=this.activeIndex,s=this.realIndex,a=this.virtual&&t.virtual.enabled;e.removeClass(t.slideActiveClass+" "+t.slideNextClass+" "+t.slidePrevClass+" "+t.slideDuplicateActiveClass+" "+t.slideDuplicateNextClass+" "+t.slideDuplicatePrevClass),(n=a?this.$wrapperEl.find("."+t.slideClass+'[data-swiper-slide-index="'+n+'"]'):e.eq(n)).addClass(t.slideActiveClass),t.loop&&(n.hasClass(t.slideDuplicateClass)?i.children("."+t.slideClass+":not(."+t.slideDuplicateClass+')[data-swiper-slide-index="'+s+'"]'):i.children("."+t.slideClass+"."+t.slideDuplicateClass+'[data-swiper-slide-index="'+s+'"]')).addClass(t.slideDuplicateActiveClass);s=n.nextAll("."+t.slideClass).eq(0).addClass(t.slideNextClass);t.loop&&0===s.length&&(s=e.eq(0)).addClass(t.slideNextClass);n=n.prevAll("."+t.slideClass).eq(0).addClass(t.slidePrevClass);t.loop&&0===n.length&&(n=e.eq(-1)).addClass(t.slidePrevClass),t.loop&&((s.hasClass(t.slideDuplicateClass)?i.children("."+t.slideClass+":not(."+t.slideDuplicateClass+')[data-swiper-slide-index="'+s.attr("data-swiper-slide-index")+'"]'):i.children("."+t.slideClass+"."+t.slideDuplicateClass+'[data-swiper-slide-index="'+s.attr("data-swiper-slide-index")+'"]')).addClass(t.slideDuplicateNextClass),(n.hasClass(t.slideDuplicateClass)?i.children("."+t.slideClass+":not(."+t.slideDuplicateClass+')[data-swiper-slide-index="'+n.attr("data-swiper-slide-index")+'"]'):i.children("."+t.slideClass+"."+t.slideDuplicateClass+'[data-swiper-slide-index="'+n.attr("data-swiper-slide-index")+'"]')).addClass(t.slideDuplicatePrevClass)),this.emitSlidesClasses()},updateActiveIndex:function(e){var t=this.rtlTranslate?this.translate:-this.translate,i=this.slidesGrid,n=this.snapGrid,s=this.params,a=this.activeIndex,r=this.realIndex,o=this.snapIndex,l=e;if(void 0===l){for(var c=0;c<i.length;c+=1)void 0!==i[c+1]?t>=i[c]&&t<i[c+1]-(i[c+1]-i[c])/2?l=c:t>=i[c]&&t<i[c+1]&&(l=c+1):t>=i[c]&&(l=c);s.normalizeSlideIndex&&(l<0||void 0===l)&&(l=0)}(s=0<=n.indexOf(t)?n.indexOf(t):(e=Math.min(s.slidesPerGroupSkip,l))+Math.floor((l-e)/s.slidesPerGroup))>=n.length&&(s=n.length-1),l!==a?(n=parseInt(this.slides.eq(l).attr("data-swiper-slide-index")||l,10),K(this,{snapIndex:s,realIndex:n,previousIndex:a,activeIndex:l}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),r!==n&&this.emit("realIndexChange"),(this.initialized||this.params.runCallbacksOnInit)&&this.emit("slideChange")):s!==o&&(this.snapIndex=s,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=S(e.target).closest("."+t.slideClass)[0],n=!1;if(i)for(var s=0;s<this.slides.length;s+=1)this.slides[s]===i&&(n=!0);if(!i||!n)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(S(i).attr("data-swiper-slide-index"),10):this.clickedIndex=S(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},translate:{getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,n=this.translate,s=this.$wrapperEl;if(t.virtualTranslate)return i?-n:n;if(t.cssMode)return n;e=y(s[0],e);return i&&(e=-e),e||0},setTranslate:function(e,t){var i=this.rtlTranslate,n=this.params,s=this.$wrapperEl,a=this.wrapperEl,r=this.progress,o=0,l=0;this.isHorizontal()?o=i?-e:e:l=e,n.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),n.cssMode?a[this.isHorizontal()?"scrollLeft":"scrollTop"]=this.isHorizontal()?-o:-l:n.virtualTranslate||s.transform("translate3d("+o+"px, "+l+"px, 0px)"),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?o:l;l=this.maxTranslate()-this.minTranslate();(0==l?0:(e-this.minTranslate())/l)!==r&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,i,n,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0),void 0===n&&(n=!0);var a=this,r=a.params,o=a.wrapperEl;if(a.animating&&r.preventInteractionOnTransition)return!1;var l=a.minTranslate(),c=a.maxTranslate(),c=n&&l<e?l:n&&e<c?c:e;if(a.updateProgress(c),r.cssMode){e=a.isHorizontal();return 0!==t&&o.scrollTo?o.scrollTo(((r={})[e?"left":"top"]=-c,r.behavior="smooth",r)):o[e?"scrollLeft":"scrollTop"]=-c,!0}return 0===t?(a.setTransition(0),a.setTranslate(c),i&&(a.emit("beforeTransitionStart",t,s),a.emit("transitionEnd"))):(a.setTransition(t),a.setTranslate(c),i&&(a.emit("beforeTransitionStart",t,s),a.emit("transitionStart")),a.animating||(a.animating=!0,a.onTranslateToWrapperTransitionEnd||(a.onTranslateToWrapperTransitionEnd=function(e){a&&!a.destroyed&&e.target===this&&(a.$wrapperEl[0].removeEventListener("transitionend",a.onTranslateToWrapperTransitionEnd),a.$wrapperEl[0].removeEventListener("webkitTransitionEnd",a.onTranslateToWrapperTransitionEnd),a.onTranslateToWrapperTransitionEnd=null,delete a.onTranslateToWrapperTransitionEnd,i&&a.emit("transitionEnd"))}),a.$wrapperEl[0].addEventListener("transitionend",a.onTranslateToWrapperTransitionEnd),a.$wrapperEl[0].addEventListener("webkitTransitionEnd",a.onTranslateToWrapperTransitionEnd))),!0}},transition:{setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.params,s=this.previousIndex;n.cssMode||(n.autoHeight&&this.updateAutoHeight(),t=(t=t)||(s<i?"next":i<s?"prev":"reset"),this.emit("transitionStart"),e&&i!==s&&("reset"!==t?(this.emit("slideChangeTransitionStart"),"next"===t?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")):this.emit("slideResetTransitionStart")))},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.previousIndex,s=this.params;this.animating=!1,s.cssMode||(this.setTransition(0),t=(t=t)||(n<i?"next":i<n?"prev":"reset"),this.emit("transitionEnd"),e&&i!==n&&("reset"!==t?(this.emit("slideChangeTransitionEnd"),"next"===t?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")):this.emit("slideResetTransitionEnd")))}},slide:{slideTo:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var s=this,a=e;a<0&&(a=0);var r=s.params,o=s.snapGrid,l=s.slidesGrid,c=s.previousIndex,u=s.activeIndex,d=s.rtlTranslate,h=s.wrapperEl;if(s.animating&&r.preventInteractionOnTransition)return!1;e=Math.min(s.params.slidesPerGroupSkip,a),e+=Math.floor((a-e)/s.params.slidesPerGroup);e>=o.length&&(e=o.length-1),(u||r.initialSlide||0)===(c||0)&&i&&s.emit("beforeSlideChangeStart");var p,f=-o[e];if(s.updateProgress(f),r.normalizeSlideIndex)for(var m=0;m<l.length;m+=1)-Math.floor(100*f)>=Math.floor(100*l[m])&&(a=m);if(s.initialized&&a!==u){if(!s.allowSlideNext&&f<s.translate&&f<s.minTranslate())return!1;if(!s.allowSlidePrev&&f>s.translate&&f>s.maxTranslate()&&(u||0)!==a)return!1}if(p=u<a?"next":a<u?"prev":"reset",d&&-f===s.translate||!d&&f===s.translate)return s.updateActiveIndex(a),r.autoHeight&&s.updateAutoHeight(),s.updateSlidesClasses(),"slide"!==r.effect&&s.setTranslate(f),"reset"!=p&&(s.transitionStart(i,p),s.transitionEnd(i,p)),!1;if(r.cssMode){u=s.isHorizontal(),r=-f;return d&&(r=h.scrollWidth-h.offsetWidth-r),0!==t&&h.scrollTo?h.scrollTo(((d={})[u?"left":"top"]=r,d.behavior="smooth",d)):h[u?"scrollLeft":"scrollTop"]=r,!0}return 0===t?(s.setTransition(0),s.setTranslate(f),s.updateActiveIndex(a),s.updateSlidesClasses(),s.emit("beforeTransitionStart",t,n),s.transitionStart(i,p),s.transitionEnd(i,p)):(s.setTransition(t),s.setTranslate(f),s.updateActiveIndex(a),s.updateSlidesClasses(),s.emit("beforeTransitionStart",t,n),s.transitionStart(i,p),s.animating||(s.animating=!0,s.onSlideToWrapperTransitionEnd||(s.onSlideToWrapperTransitionEnd=function(e){s&&!s.destroyed&&e.target===this&&(s.$wrapperEl[0].removeEventListener("transitionend",s.onSlideToWrapperTransitionEnd),s.$wrapperEl[0].removeEventListener("webkitTransitionEnd",s.onSlideToWrapperTransitionEnd),s.onSlideToWrapperTransitionEnd=null,delete s.onSlideToWrapperTransitionEnd,s.transitionEnd(i,p))}),s.$wrapperEl[0].addEventListener("transitionend",s.onSlideToWrapperTransitionEnd),s.$wrapperEl[0].addEventListener("webkitTransitionEnd",s.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);return this.params.loop&&(e+=this.loopedSlides),this.slideTo(e,t,i,n)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,s=this.animating,a=this.activeIndex<n.slidesPerGroupSkip?1:n.slidesPerGroup;if(n.loop){if(s&&n.loopPreventsSlide)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}return this.slideTo(this.activeIndex+a,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,s=this.animating,a=this.snapGrid,r=this.slidesGrid,o=this.rtlTranslate;if(n.loop){if(s&&n.loopPreventsSlide)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function l(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var c,u=l(o?this.translate:-this.translate),o=a.map(l),d=(a[o.indexOf(u)],a[o.indexOf(u)-1]);return void 0===d&&n.cssMode&&a.forEach(function(e){!d&&e<=u&&(d=e)}),void 0!==d&&(c=r.indexOf(d))<0&&(c=this.activeIndex-1),this.slideTo(c,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i,n){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===n&&(n=.5);var s=this.activeIndex,a=Math.min(this.params.slidesPerGroupSkip,s),r=a+Math.floor((s-a)/this.params.slidesPerGroup),o=this.rtlTranslate?this.translate:-this.translate;return o>=this.snapGrid[r]?o-(a=this.snapGrid[r])>(this.snapGrid[r+1]-a)*n&&(s+=this.params.slidesPerGroup):o-(o=this.snapGrid[r-1])<=(this.snapGrid[r]-o)*n&&(s-=this.params.slidesPerGroup),s=Math.max(s,0),s=Math.min(s,this.slidesGrid.length-1),this.slideTo(s,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,n=t.$wrapperEl,s="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,a=t.clickedIndex;i.loop?t.animating||(e=parseInt(S(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?a<t.loopedSlides-s/2||a>t.slides.length-t.loopedSlides+s/2?(t.loopFix(),a=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),E(function(){t.slideTo(a)})):t.slideTo(a):a>t.slides.length-s?(t.loopFix(),a=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),E(function(){t.slideTo(a)})):t.slideTo(a)):t.slideTo(a)}},loop:{loopCreate:function(){var n=this,e=v(),t=n.params,i=n.$wrapperEl;i.children("."+t.slideClass+"."+t.slideDuplicateClass).remove();var s=i.children("."+t.slideClass);if(t.loopFillGroupWithBlank){var a=t.slidesPerGroup-s.length%t.slidesPerGroup;if(a!==t.slidesPerGroup){for(var r=0;r<a;r+=1){var o=S(e.createElement("div")).addClass(t.slideClass+" "+t.slideBlankClass);i.append(o)}s=i.children("."+t.slideClass)}}"auto"!==t.slidesPerView||t.loopedSlides||(t.loopedSlides=s.length),n.loopedSlides=Math.ceil(parseFloat(t.loopedSlides||t.slidesPerView,10)),n.loopedSlides+=t.loopAdditionalSlides,n.loopedSlides>s.length&&(n.loopedSlides=s.length);var l=[],c=[];s.each(function(e,t){var i=S(e);t<n.loopedSlides&&c.push(e),t<s.length&&t>=s.length-n.loopedSlides&&l.push(e),i.attr("data-swiper-slide-index",t)});for(var u=0;u<c.length;u+=1)i.append(S(c[u].cloneNode(!0)).addClass(t.slideDuplicateClass));for(var d=l.length-1;0<=d;--d)i.prepend(S(l[d].cloneNode(!0)).addClass(t.slideDuplicateClass))},loopFix:function(){this.emit("beforeLoopFix");var e,t=this.activeIndex,i=this.slides,n=this.loopedSlides,s=this.allowSlidePrev,a=this.allowSlideNext,r=this.snapGrid,o=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;r=-r[t]-this.getTranslate();t<n?(e=i.length-3*n+t,e+=n,this.slideTo(e,0,!1,!0)&&0!=r&&this.setTranslate((o?-this.translate:this.translate)-r)):t>=i.length-n&&(e=-i.length+t+n,e+=n,this.slideTo(e,0,!1,!0)&&0!=r&&this.setTranslate((o?-this.translate:this.translate)-r)),this.allowSlidePrev=s,this.allowSlideNext=a,this.emit("loopFix")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}},grabCursor:{setGrabCursor:function(e){var t;this.support.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||((t=this.el).style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab")},unsetGrabCursor:function(){this.support.touch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||(this.el.style.cursor="")}},manipulation:{appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var n=0;n<e.length;n+=1)e[n]&&t.append(e[n]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&this.support.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&this.loopDestroy();var s=n+1;if("object"==typeof e&&"length"in e){for(var a=0;a<e.length;a+=1)e[a]&&i.prepend(e[a]);s=n+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&this.support.observer||this.update(),this.slideTo(s,0,!1)},addSlide:function(e,t){var i=this.$wrapperEl,n=this.params,s=this.activeIndex;n.loop&&(s-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+n.slideClass));var a=this.slides.length;if(e<=0)this.prependSlide(t);else if(a<=e)this.appendSlide(t);else{for(var r=e<s?s+1:s,o=[],l=a-1;e<=l;--l){var c=this.slides.eq(l);c.remove(),o.unshift(c)}if("object"==typeof t&&"length"in t){for(var u=0;u<t.length;u+=1)t[u]&&i.append(t[u]);r=e<s?s+t.length:s}else i.append(t);for(var d=0;d<o.length;d+=1)i.append(o[d]);n.loop&&this.loopCreate(),n.observer&&this.support.observer||this.update(),n.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)}},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&(n-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+t.slideClass));var s,a=n;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)s=e[r],this.slides[s]&&this.slides.eq(s).remove(),s<a&&--a;a=Math.max(a,0)}else s=e,this.slides[s]&&this.slides.eq(s).remove(),s<a&&--a,a=Math.max(a,0);t.loop&&this.loopCreate(),t.observer&&this.support.observer||this.update(),t.loop?this.slideTo(a+this.loopedSlides,0,!1):this.slideTo(a,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},events:{attachEvents:function(){var e=v(),t=this.params,i=this.touchEvents,n=this.el,s=this.wrapperEl,a=this.device,r=this.support;this.onTouchStart=function(e){var t,i,n,s,a,r=v(),o=Y(),l=this.touchEventsData,c=this.params,u=this.touches;this.animating&&c.preventInteractionOnTransition||((t=e).originalEvent&&(t=t.originalEvent),i=S(t.target),"wrapper"===c.touchEventsTarget&&!i.closest(this.wrapperEl).length||(l.isTouchEvent="touchstart"===t.type,!l.isTouchEvent&&"which"in t&&3===t.which||!l.isTouchEvent&&"button"in t&&0<t.button||l.isTouched&&l.isMoved)||(c.noSwiping&&i.closest(c.noSwipingSelector||"."+c.noSwipingClass)[0]?this.allowClick=!0:c.swipeHandler&&!i.closest(c.swipeHandler)[0]||(u.currentX=("touchstart"===t.type?t.targetTouches[0]:t).pageX,u.currentY=("touchstart"===t.type?t.targetTouches[0]:t).pageY,n=u.currentX,a=u.currentY,s=c.edgeSwipeDetection||c.iOSEdgeSwipeDetection,e=c.edgeSwipeThreshold||c.iOSEdgeSwipeThreshold,s&&(n<=e||n>=o.screen.width-e)||(K(l,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),u.startX=n,u.startY=a,l.touchStartTime=T(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,0<c.threshold&&(l.allowThresholdMove=!1),"touchstart"!==t.type&&(a=!0,i.is(l.formElements)&&(a=!1),r.activeElement&&S(r.activeElement).is(l.formElements)&&r.activeElement!==i[0]&&r.activeElement.blur(),a=a&&this.allowTouchMove&&c.touchStartPreventDefault,(c.touchStartForcePreventDefault||a)&&t.preventDefault()),this.emit("touchStart",t)))))}.bind(this),this.onTouchMove=function(e){var t=v(),i=this.touchEventsData,n=this.params,s=this.touches,a=this.rtlTranslate,r=e;if(r.originalEvent&&(r=r.originalEvent),i.isTouched){if(!i.isTouchEvent||"touchmove"===r.type){var o="touchmove"===r.type&&r.targetTouches&&(r.targetTouches[0]||r.changedTouches[0]),e=("touchmove"===r.type?o:r).pageX,o=("touchmove"===r.type?o:r).pageY;if(r.preventedByNestedSwiper)return s.startX=e,void(s.startY=o);if(!this.allowTouchMove)return this.allowClick=!1,void(i.isTouched&&(K(s,{startX:e,startY:o,currentX:e,currentY:o}),i.touchStartTime=T()));if(i.isTouchEvent&&n.touchReleaseOnEdges&&!n.loop)if(this.isVertical()){if(o<s.startY&&this.translate<=this.maxTranslate()||o>s.startY&&this.translate>=this.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(e<s.startX&&this.translate<=this.maxTranslate()||e>s.startX&&this.translate>=this.minTranslate())return;if(i.isTouchEvent&&t.activeElement&&r.target===t.activeElement&&S(r.target).is(i.formElements))return i.isMoved=!0,void(this.allowClick=!1);if(i.allowTouchCallbacks&&this.emit("touchMove",r),!(r.targetTouches&&1<r.targetTouches.length)){s.currentX=e,s.currentY=o;t=s.currentX-s.startX,e=s.currentY-s.startY;if(!(this.params.threshold&&Math.sqrt(Math.pow(t,2)+Math.pow(e,2))<this.params.threshold))if(void 0===i.isScrolling&&(this.isHorizontal()&&s.currentY===s.startY||this.isVertical()&&s.currentX===s.startX?i.isScrolling=!1:25<=t*t+e*e&&(o=180*Math.atan2(Math.abs(e),Math.abs(t))/Math.PI,i.isScrolling=this.isHorizontal()?o>n.touchAngle:90-o>n.touchAngle)),i.isScrolling&&this.emit("touchMoveOpposite",r),void 0===i.startMoving&&(s.currentX===s.startX&&s.currentY===s.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){this.allowClick=!1,!n.cssMode&&r.cancelable&&r.preventDefault(),n.touchMoveStopPropagation&&!n.nested&&r.stopPropagation(),i.isMoved||(n.loop&&this.loopFix(),i.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!n.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",r)),this.emit("sliderMove",r),i.isMoved=!0;t=this.isHorizontal()?t:e;s.diff=t,t*=n.touchRatio,a&&(t=-t),this.swipeDirection=0<t?"prev":"next",i.currentTranslate=t+i.startTranslate;e=!0,a=n.resistanceRatio;if(n.touchReleaseOnEdges&&(a=0),0<t&&i.currentTranslate>this.minTranslate()?(e=!1,n.resistance&&(i.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+i.startTranslate+t,a))):t<0&&i.currentTranslate<this.maxTranslate()&&(e=!1,n.resistance&&(i.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-i.startTranslate-t,a))),e&&(r.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),0<n.threshold){if(!(Math.abs(t)>n.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,s.startX=s.currentX,s.startY=s.currentY,i.currentTranslate=i.startTranslate,void(s.diff=this.isHorizontal()?s.currentX-s.startX:s.currentY-s.startY)}n.followFinger&&!n.cssMode&&((n.freeMode||n.watchSlidesProgress||n.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),n.freeMode&&(0===i.velocities.length&&i.velocities.push({position:s[this.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:s[this.isHorizontal()?"currentX":"currentY"],time:T()})),this.updateProgress(i.currentTranslate),this.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&this.emit("touchMoveOpposite",r)}.bind(this),this.onTouchEnd=function(e){var t=this,i=t.touchEventsData,n=t.params,s=t.touches,a=t.rtlTranslate,r=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,c=e;if(c.originalEvent&&(c=c.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",c),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&n.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);n.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var u,d=T(),e=d-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(c),t.emit("tap click",c),e<300&&d-i.lastClickTime<300&&t.emit("doubleTap doubleClick",c)),i.lastClickTime=T(),E(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===s.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,u=n.followFinger?a?t.translate:-t.translate:-i.currentTranslate,!n.cssMode)if(n.freeMode)if(u<-t.minTranslate())t.slideTo(t.activeIndex);else if(u>-t.maxTranslate())t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1);else{if(n.freeModeMomentum){1<i.velocities.length?(v=i.velocities.pop(),p=i.velocities.pop(),h=v.position-p.position,p=v.time-p.time,t.velocity=h/p,t.velocity/=2,Math.abs(t.velocity)<n.freeModeMinimumVelocity&&(t.velocity=0),(150<p||300<T()-v.time)&&(t.velocity=0)):t.velocity=0,t.velocity*=n.freeModeMomentumVelocityRatio,i.velocities.length=0;var h=1e3*n.freeModeMomentumRatio,p=t.velocity*h,f=t.translate+p;a&&(f=-f);var m,g,v=!1,p=20*Math.abs(t.velocity)*n.freeModeMomentumBounceRatio;if(f<t.maxTranslate())n.freeModeMomentumBounce?(f+t.maxTranslate()<-p&&(f=t.maxTranslate()-p),m=t.maxTranslate(),v=!0,i.allowMomentumBounce=!0):f=t.maxTranslate(),n.loop&&n.centeredSlides&&(g=!0);else if(f>t.minTranslate())n.freeModeMomentumBounce?(f-t.minTranslate()>p&&(f=t.minTranslate()+p),m=t.minTranslate(),v=!0,i.allowMomentumBounce=!0):f=t.minTranslate(),n.loop&&n.centeredSlides&&(g=!0);else if(n.freeModeSticky){for(var y,b=0;b<l.length;b+=1)if(l[b]>-f){y=b;break}f=-(Math.abs(l[y]-f)<Math.abs(l[y-1]-f)||"next"===t.swipeDirection?l[y]:l[y-1])}if(g&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)h=a?Math.abs((-f-t.translate)/t.velocity):Math.abs((f-t.translate)/t.velocity),n.freeModeSticky&&(h=(g=Math.abs((a?-f:f)-t.translate))<(a=t.slidesSizesGrid[t.activeIndex])?n.speed:g<2*a?1.5*n.speed:2.5*n.speed);else if(n.freeModeSticky)return void t.slideToClosest();n.freeModeMomentumBounce&&v?(t.updateProgress(m),t.setTransition(h),t.setTranslate(f),t.transitionStart(!0,t.swipeDirection),t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(n.speed),setTimeout(function(){t.setTranslate(m),r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()})},0))})):t.velocity?(t.updateProgress(f),t.setTransition(h),t.setTranslate(f),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,r.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(f),t.updateActiveIndex(),t.updateSlidesClasses()}else if(n.freeModeSticky)return void t.slideToClosest();(!n.freeModeMomentum||e>=n.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var w=0,x=t.slidesSizesGrid[0],C=0;C<o.length;C+=C<n.slidesPerGroupSkip?1:n.slidesPerGroup){var S=C<n.slidesPerGroupSkip-1?1:n.slidesPerGroup;void 0!==o[C+S]?u>=o[C]&&u<o[C+S]&&(x=o[(w=C)+S]-o[C]):u>=o[C]&&(w=C,x=o[o.length-1]-o[o.length-2])}v=(u-o[w])/x,h=w<n.slidesPerGroupSkip-1?1:n.slidesPerGroup;e>n.longSwipesMs?n.longSwipes?("next"===t.swipeDirection&&(v>=n.longSwipesRatio?t.slideTo(w+h):t.slideTo(w)),"prev"===t.swipeDirection&&(v>1-n.longSwipesRatio?t.slideTo(w+h):t.slideTo(w))):t.slideTo(t.activeIndex):n.shortSwipes?!t.navigation||c.target!==t.navigation.nextEl&&c.target!==t.navigation.prevEl?("next"===t.swipeDirection&&t.slideTo(w+h),"prev"===t.swipeDirection&&t.slideTo(w)):c.target===t.navigation.nextEl?t.slideTo(w+h):t.slideTo(w):t.slideTo(t.activeIndex)}}.bind(this),t.cssMode&&(this.onScroll=function(){var e=this.wrapperEl,t=this.rtlTranslate;this.previousTranslate=this.translate,this.isHorizontal()?this.translate=t?e.scrollWidth-e.offsetWidth-e.scrollLeft:-e.scrollLeft:this.translate=-e.scrollTop,-0===this.translate&&(this.translate=0),this.updateActiveIndex(),this.updateSlidesClasses(),(0==(e=this.maxTranslate()-this.minTranslate())?0:(this.translate-this.minTranslate())/e)!==this.progress&&this.updateProgress(t?-this.translate:this.translate),this.emit("setTranslate",this.translate,!1)}.bind(this)),this.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(this);var o,l=!!t.nested;!r.touch&&r.pointerEvents?(n.addEventListener(i.start,this.onTouchStart,!1),e.addEventListener(i.move,this.onTouchMove,l),e.addEventListener(i.end,this.onTouchEnd,!1)):(r.touch&&(o=!("touchstart"!==i.start||!r.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1},n.addEventListener(i.start,this.onTouchStart,o),n.addEventListener(i.move,this.onTouchMove,r.passiveListener?{passive:!1,capture:l}:l),n.addEventListener(i.end,this.onTouchEnd,o),i.cancel&&n.addEventListener(i.cancel,this.onTouchEnd,o),I||(e.addEventListener("touchstart",k),I=!0)),(t.simulateTouch&&!a.ios&&!a.android||t.simulateTouch&&!r.touch&&a.ios)&&(n.addEventListener("mousedown",this.onTouchStart,!1),e.addEventListener("mousemove",this.onTouchMove,l),e.addEventListener("mouseup",this.onTouchEnd,!1))),(t.preventClicks||t.preventClicksPropagation)&&n.addEventListener("click",this.onClick,!0),t.cssMode&&s.addEventListener("scroll",this.onScroll),t.updateOnWindowResize?this.on(a.ios||a.android?"resize orientationchange observerUpdate":"resize observerUpdate",P,!0):this.on("observerUpdate",P,!0)},detachEvents:function(){var e,t=v(),i=this.params,n=this.touchEvents,s=this.el,a=this.wrapperEl,r=this.device,o=this.support,l=!!i.nested;!o.touch&&o.pointerEvents?(s.removeEventListener(n.start,this.onTouchStart,!1),t.removeEventListener(n.move,this.onTouchMove,l),t.removeEventListener(n.end,this.onTouchEnd,!1)):(o.touch&&(e=!("onTouchStart"!==n.start||!o.passiveListener||!i.passiveListeners)&&{passive:!0,capture:!1},s.removeEventListener(n.start,this.onTouchStart,e),s.removeEventListener(n.move,this.onTouchMove,l),s.removeEventListener(n.end,this.onTouchEnd,e),n.cancel&&s.removeEventListener(n.cancel,this.onTouchEnd,e)),(i.simulateTouch&&!r.ios&&!r.android||i.simulateTouch&&!o.touch&&r.ios)&&(s.removeEventListener("mousedown",this.onTouchStart,!1),t.removeEventListener("mousemove",this.onTouchMove,l),t.removeEventListener("mouseup",this.onTouchEnd,!1))),(i.preventClicks||i.preventClicksPropagation)&&s.removeEventListener("click",this.onClick,!0),i.cssMode&&a.removeEventListener("scroll",this.onScroll),this.off(r.ios||r.android?"resize orientationchange observerUpdate":"resize observerUpdate",P)}},breakpoints:{setBreakpoint:function(){var e,i,t,n=this.activeIndex,s=this.initialized,a=this.loopedSlides,r=void 0===a?0:a,o=this.params,l=this.$el,c=o.breakpoints;!c||c&&0===Object.keys(c).length||(e=this.getBreakpoint(c))&&this.currentBreakpoint!==e&&((i=e in c?c[e]:void 0)&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach(function(e){var t=i[e];void 0!==t&&(i[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")}),t=i||this.originalParams,a=1<o.slidesPerColumn,c=1<t.slidesPerColumn,a&&!c?(l.removeClass(o.containerModifierClass+"multirow "+o.containerModifierClass+"multirow-column"),this.emitContainerClasses()):!a&&c&&(l.addClass(o.containerModifierClass+"multirow"),"column"===t.slidesPerColumnFill&&l.addClass(o.containerModifierClass+"multirow-column"),this.emitContainerClasses()),l=t.direction&&t.direction!==o.direction,o=o.loop&&(t.slidesPerView!==o.slidesPerView||l),l&&s&&this.changeDirection(),K(this.params,t),K(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=e,this.emit("_beforeBreakpoint",t),o&&s&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(n-r+this.loopedSlides,0,!1)),this.emit("breakpoint",t))},getBreakpoint:function(e){var i=Y();if(e){var t=!1,n=Object.keys(e).map(function(e){if("string"!=typeof e||0!==e.indexOf("@"))return{value:e,point:e};var t=parseFloat(e.substr(1));return{value:i.innerHeight*t,point:e}});n.sort(function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)});for(var s=0;s<n.length;s+=1){var a=n[s],r=a.point;a.value<=i.innerWidth&&(t=r)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this.params,t=this.isLocked,i=0<this.slides.length&&e.slidesOffsetBefore+e.spaceBetween*(this.slides.length-1)+this.slides[0].offsetWidth*this.slides.length;e.slidesOffsetBefore&&e.slidesOffsetAfter&&i?this.isLocked=i<=this.size:this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,t!==this.isLocked&&this.emit(this.isLocked?"lock":"unlock"),t&&t!==this.isLocked&&(this.isEnd=!1,this.navigation&&this.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,n=this.$el,s=this.device,a=[];a.push("initialized"),a.push(i.direction),i.freeMode&&a.push("free-mode"),i.autoHeight&&a.push("autoheight"),e&&a.push("rtl"),1<i.slidesPerColumn&&(a.push("multirow"),"column"===i.slidesPerColumnFill&&a.push("multirow-column")),s.android&&a.push("android"),s.ios&&a.push("ios"),i.cssMode&&a.push("css-mode"),a.forEach(function(e){t.push(i.containerModifierClass+e)}),n.addClass(t.join(" ")),this.emitContainerClasses()},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" ")),this.emitContainerClasses()}},images:{loadImage:function(e,t,i,n,s,a){var r=Y();function o(){a&&a()}!(S(e).parent("picture")[0]||e.complete&&s)&&t?((r=new r.Image).onload=o,r.onerror=o,n&&(r.sizes=n),i&&(r.srcset=i),t&&(r.src=t)):o()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var n=e.imagesToLoad[i];e.loadImage(n,n.currentSrc||n.getAttribute("src"),n.srcset||n.getAttribute("srcset"),n.sizes||n.getAttribute("sizes"),!0,t)}}}},F={},H=((R=$.prototype).emitContainerClasses=function(){var e,t=this;t.params._emitClasses&&t.el&&(e=t.el.className.split(" ").filter(function(e){return 0===e.indexOf("swiper-container")||0===e.indexOf(t.params.containerModifierClass)}),t.emit("_containerClasses",e.join(" ")))},R.getSlideClasses=function(e){var t=this;return e.className.split(" ").filter(function(e){return 0===e.indexOf("swiper-slide")||0===e.indexOf(t.params.slideClass)}).join(" ")},R.emitSlidesClasses=function(){var i=this;i.params._emitClasses&&i.el&&i.slides.each(function(e){var t=i.getSlideClasses(e);i.emit("_slideClass",e,t)})},R.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,n=this.size,s=this.activeIndex,a=1;if(e.centeredSlides){for(var r,o=t[s].swiperSlideSize,l=s+1;l<t.length;l+=1)t[l]&&!r&&(a+=1,(o+=t[l].swiperSlideSize)>n&&(r=!0));for(var c=s-1;0<=c;--c)t[c]&&!r&&(a+=1,(o+=t[c].swiperSlideSize)>n&&(r=!0))}else for(var u=s+1;u<t.length;u+=1)i[u]-i[s]<n&&(a+=1);return a},R.update=function(){var e,t,i=this;function n(){var e=i.rtlTranslate?-1*i.translate:i.translate,e=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(e),i.updateActiveIndex(),i.updateSlidesClasses()}i&&!i.destroyed&&(e=i.snapGrid,(t=i.params).breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(n(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||n(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update"))},R.changeDirection=function(t,e){void 0===e&&(e=!0);var i=this.params.direction;return(t=t||("horizontal"===i?"vertical":"horizontal"))===i||"horizontal"!==t&&"vertical"!==t||(this.$el.removeClass(""+this.params.containerModifierClass+i).addClass(""+this.params.containerModifierClass+t),this.emitContainerClasses(),this.params.direction=t,this.slides.each(function(e){"vertical"===t?e.style.width="":e.style.height=""}),this.emit("changeDirection"),e&&this.update()),this},R.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"),this.emit("afterInit"))},R.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i,n=this,s=n.params,a=n.$el,r=n.$wrapperEl,o=n.slides;return void 0===n.params||n.destroyed||(n.emit("beforeDestroy"),n.initialized=!1,n.detachEvents(),s.loop&&n.loopDestroy(),t&&(n.removeClasses(),a.removeAttr("style"),r.removeAttr("style"),o&&o.length&&o.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),n.emit("destroy"),Object.keys(n.eventsListeners).forEach(function(e){n.off(e)}),!1!==e&&(n.$el[0].swiper=null,i=n,Object.keys(i).forEach(function(e){try{i[e]=null}catch(e){}try{delete i[e]}catch(e){}})),n.destroyed=!0),null},$.extendDefaults=function(e){K(F,e)},$.installModule=function(e){$.prototype.modules||($.prototype.modules={});var t=e.name||Object.keys($.prototype.modules).length+"_"+T();$.prototype.modules[t]=e},$.use=function(e){return Array.isArray(e)?e.forEach(function(e){return $.installModule(e)}):$.installModule(e),$},N=$,L=[{key:"extendedDefaults",get:function(){return F}},{key:"defaults",get:function(){return B}}],(R=null)&&e(N.prototype,R),e(N,L),$);function $(){for(var i,e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];i=K({},i=(i=1===t.length&&t[0].constructor&&t[0].constructor===Object?t[0]:(v=t[0],t[1]))||{}),v&&!i.el&&(i.el=v);var s,a,r,o,l,c,u,d,h,p,f,m=this;m.support=A(),m.device=(void 0===(s={userAgent:i.userAgent})&&(s={}),x||(a=(void 0===s?{}:s).userAgent,r=A(),o=Y(),l=o.navigator.platform,c=a||o.navigator.userAgent,u={ios:!1,android:!1},d=o.screen.width,h=o.screen.height,p=c.match(/(Android);?[\s\/]+([\d.]+)?/),f=c.match(/(iPad).*OS\s([\d_]+)/),s=c.match(/(iPod)(.*OS\s([\d_]+))?/),a=!f&&c.match(/(iPhone\sOS|iOS)\s([\d_]+)/),o="Win32"===l,l="MacIntel"===l,!f&&l&&r.touch&&0<=["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768","820x1180","1180x820","810x1080","1080x810"].indexOf(d+"x"+h)&&((f=c.match(/(Version)\/([\d.]+)/))||(f=[0,1,"13_0_0"]),l=!1),p&&!o&&(u.os="android",u.android=!0),(f||a||s)&&(u.os="ios",u.ios=!0),x=u),x),m.browser=(C||(g=Y(),C={isEdge:!!g.navigator.userAgent.match(/Edge/g),isSafari:0<=(u=g.navigator.userAgent.toLowerCase()).indexOf("safari")&&u.indexOf("chrome")<0&&u.indexOf("android")<0,isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(g.navigator.userAgent)}),C),m.eventsListeners={},m.eventsAnyListeners=[],void 0===m.modules&&(m.modules={}),Object.keys(m.modules).forEach(function(e){var t=m.modules[e];t.params&&(e=Object.keys(t.params)[0],"object"==typeof(t=t.params[e])&&null!==t&&e in i&&"enabled"in t&&(!0===i[e]&&(i[e]={enabled:!0}),"object"!=typeof i[e]||"enabled"in i[e]||(i[e].enabled=!0),i[e]||(i[e]={enabled:!1})))});var g=K({},B);m.useParams(g),m.params=K({},g,F,i),m.originalParams=K({},m.params),m.passedParams=K({},i),m.params&&m.params.on&&Object.keys(m.params.on).forEach(function(e){m.on(e,m.params.on[e])}),m.params&&m.params.onAny&&m.onAny(m.params.onAny);var v,y,b=(m.$=S)(m.params.el);if(v=b[0]){if(1<b.length){var w=[];return b.each(function(e){e=K({},i,{el:e});w.push(new $(e))}),w}return v.swiper=m,v&&v.shadowRoot&&v.shadowRoot.querySelector?(y=S(v.shadowRoot.querySelector("."+m.params.wrapperClass))).children=function(e){return b.children(e)}:y=b.children("."+m.params.wrapperClass),K(m,{$el:b,el:v,$wrapperEl:y,wrapperEl:y[0],classNames:[],slides:S(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===m.params.direction},isVertical:function(){return"vertical"===m.params.direction},rtl:"rtl"===v.dir.toLowerCase()||"rtl"===b.css("direction"),rtlTranslate:"horizontal"===m.params.direction&&("rtl"===v.dir.toLowerCase()||"rtl"===b.css("direction")),wrongRTL:"-webkit-box"===y.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:m.params.allowSlideNext,allowSlidePrev:m.params.allowSlidePrev,touchEvents:(v=["touchstart","touchmove","touchend","touchcancel"],y=["mousedown","mousemove","mouseup"],m.support.pointerEvents&&(y=["pointerdown","pointermove","pointerup"]),m.touchEventsTouch={start:v[0],move:v[1],end:v[2],cancel:v[3]},m.touchEventsDesktop={start:y[0],move:y[1],end:y[2]},m.support.touch||!m.params.simulateTouch?m.touchEventsTouch:m.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:T(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:m.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),m.useModules(),m.emit("_swiper"),m.params.init&&m.init(),m}}Object.keys(z).forEach(function(t){Object.keys(z[t]).forEach(function(e){H.prototype[e]=z[t][e]})}),H.use([M,O]);var j={update:function(e){var t=this,i=t.params,n=i.slidesPerView,s=i.slidesPerGroup,a=i.centeredSlides,r=t.params.virtual,o=r.addSlidesBefore,l=r.addSlidesAfter,c=t.virtual,u=c.from,d=c.to,h=c.slides,p=c.slidesGrid,f=c.renderSlide,i=c.offset;t.updateActiveIndex();var r=t.activeIndex||0,c=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",o=a?(v=Math.floor(n/2)+s+l,Math.floor(n/2)+s+o):(v=n+(s-1)+l,s+o),m=Math.max((r||0)-o,0),g=Math.min((r||0)+v,h.length-1),v=(t.slidesGrid[m]||0)-(t.slidesGrid[0]||0);function y(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(K(t.virtual,{from:m,to:g,offset:v,slidesGrid:t.slidesGrid}),u===m&&d===g&&!e)return t.slidesGrid!==p&&v!==i&&t.slides.css(c,v+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:v,from:m,to:g,slides:function(){for(var e=[],t=m;t<=g;t+=1)e.push(h[t]);return e}()}),void(t.params.virtual.renderExternalUpdate&&y());var b=[],w=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var x=u;x<=d;x+=1)(x<m||g<x)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+x+'"]').remove();for(var C=0;C<h.length;C+=1)m<=C&&C<=g&&(void 0===d||e?w.push(C):(d<C&&w.push(C),C<u&&b.push(C)));w.forEach(function(e){t.$wrapperEl.append(f(h[e],e))}),b.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(f(h[e],e))}),t.$wrapperEl.children(".swiper-slide").css(c,v+"px"),y()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];e=i.renderSlide?S(i.renderSlide.call(this,e,t)):S('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return e.attr("data-swiper-slide-index")||e.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=e),e},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var n,s,t=this.activeIndex,i=t+1,a=1;if(Array.isArray(e)){for(var r=0;r<e.length;r+=1)e[r]&&this.virtual.slides.unshift(e[r]);i=t+e.length,a=e.length}else this.virtual.slides.unshift(e);this.params.virtual.cache&&(n=this.virtual.cache,s={},Object.keys(n).forEach(function(e){var t=n[e],i=t.attr("data-swiper-slide-index");i&&t.attr("data-swiper-slide-index",parseInt(i,10)+1),s[parseInt(e,10)+a]=t}),this.virtual.cache=s),this.virtual.update(!0),this.slideTo(i,0)},removeSlide:function(e){if(null!=e){var t=this.activeIndex;if(Array.isArray(e))for(var i=e.length-1;0<=i;--i)this.virtual.slides.splice(e[i],1),this.params.virtual.cache&&delete this.virtual.cache[e[i]],e[i]<t&&--t,t=Math.max(t,0);else this.virtual.slides.splice(e,1),this.params.virtual.cache&&delete this.virtual.cache[e],e<t&&--t,t=Math.max(t,0);this.virtual.update(!0),this.slideTo(t,0)}},removeAllSlides:function(){this.virtual.slides=[],this.params.virtual.cache&&(this.virtual.cache={}),this.virtual.update(!0),this.slideTo(0,0)}},M={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,renderExternalUpdate:!0,addSlidesBefore:0,addSlidesAfter:0}},create:function(){w(this,{virtual:t(t({},j),{},{slides:this.params.virtual.slides,cache:{}})})},on:{beforeInit:function(e){var t;e.params.virtual.enabled&&(e.classNames.push(e.params.containerModifierClass+"virtual"),t={watchSlidesProgress:!0},K(e.params,t),K(e.originalParams,t),e.params.initialSlide||e.virtual.update())},setTranslate:function(e){e.params.virtual.enabled&&e.virtual.update()}}},q={handle:function(e){var t=Y(),i=v(),n=this.rtlTranslate,s=e;s.originalEvent&&(s=s.originalEvent);var a=s.keyCode||s.charCode,r=this.params.keyboard.pageUpDown,o=r&&33===a,l=r&&34===a,c=37===a,u=39===a,e=38===a,r=40===a;if(!this.allowSlideNext&&(this.isHorizontal()&&u||this.isVertical()&&r||l))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&c||this.isVertical()&&e||o))return!1;if(!(s.shiftKey||s.altKey||s.ctrlKey||s.metaKey||i.activeElement&&i.activeElement.nodeName&&("input"===i.activeElement.nodeName.toLowerCase()||"textarea"===i.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(o||l||c||u||e||r)){var d=!1;if(0<this.$el.parents("."+this.params.slideClass).length&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var h=t.innerWidth,p=t.innerHeight,t=this.$el.offset();n&&(t.left-=this.$el[0].scrollLeft);for(var f=[[t.left,t.top],[t.left+this.width,t.top],[t.left,t.top+this.height],[t.left+this.width,t.top+this.height]],m=0;m<f.length;m+=1){var g=f[m];0<=g[0]&&g[0]<=h&&0<=g[1]&&g[1]<=p&&(d=!0)}if(!d)return}this.isHorizontal()?((o||l||c||u)&&(s.preventDefault?s.preventDefault():s.returnValue=!1),((l||u)&&!n||(o||c)&&n)&&this.slideNext(),((o||c)&&!n||(l||u)&&n)&&this.slidePrev()):((o||l||e||r)&&(s.preventDefault?s.preventDefault():s.returnValue=!1),(l||r)&&this.slideNext(),(o||e)&&this.slidePrev()),this.emit("keyPress",a)}},enable:function(){var e=v();this.keyboard.enabled||(S(e).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){var e=v();this.keyboard.enabled&&(S(e).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},O={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0,pageUpDown:!0}},create:function(){w(this,{keyboard:t({enabled:!1},q)})},on:{init:function(e){e.params.keyboard.enabled&&e.keyboard.enable()},destroy:function(e){e.keyboard.enabled&&e.keyboard.disable()}}},G={lastScrollTime:T(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){return-1<Y().navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":(t=v(),(i="onwheel"in t)||((e=t.createElement("div")).setAttribute("onwheel","return;"),i="function"==typeof e.onwheel),!i&&t.implementation&&t.implementation.hasFeature&&!0!==t.implementation.hasFeature("","")&&(i=t.implementation.hasFeature("Events.wheel","3.0")),i?"wheel":"mousewheel");var e,t,i},normalize:function(e){var t=0,i=0,n=0,s=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),n=10*t,s=10*i,"deltaY"in e&&(s=e.deltaY),"deltaX"in e&&(n=e.deltaX),e.shiftKey&&!n&&(n=s,s=0),(n||s)&&e.deltaMode&&(1===e.deltaMode?(n*=40,s*=40):(n*=800,s*=800)),n&&!t&&(t=n<1?-1:1),s&&!i&&(i=s<1?-1:1),{spinX:t,spinY:i,pixelX:n,pixelY:s}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,n=i.params.mousewheel;i.params.cssMode&&t.preventDefault();var s=i.$el;if("container"!==i.params.mousewheel.eventsTarget&&(s=S(i.params.mousewheel.eventsTarget)),!i.mouseEntered&&!s[0].contains(t.target)&&!n.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var a=0,r=i.rtlTranslate?-1:1,s=G.normalize(t);if(n.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(s.pixelX)>Math.abs(s.pixelY)))return!0;a=-s.pixelX*r}else{if(!(Math.abs(s.pixelY)>Math.abs(s.pixelX)))return!0;a=-s.pixelY}else a=Math.abs(s.pixelX)>Math.abs(s.pixelY)?-s.pixelX*r:-s.pixelY;if(0===a)return!0;if(n.invert&&(a=-a),i.params.freeMode){var o={time:T(),delta:Math.abs(a),direction:Math.sign(a)},r=i.mousewheel.lastEventBeforeSnap,s=r&&o.time<r.time+500&&o.delta<=r.delta&&o.direction===r.direction;if(!s){i.mousewheel.lastEventBeforeSnap=void 0,i.params.loop&&i.loopFix();var l,c,u=i.getTranslate()+a*n.sensitivity,r=i.isBeginning,n=i.isEnd;if(u>=i.minTranslate()&&(u=i.minTranslate()),u<=i.maxTranslate()&&(u=i.maxTranslate()),i.setTransition(0),i.setTranslate(u),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!r&&i.isBeginning||!n&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky&&(clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=void 0,15<=(l=i.mousewheel.recentWheelEvents).length&&l.shift(),r=l.length?l[l.length-1]:void 0,n=l[0],l.push(o),r&&(o.delta>r.delta||o.direction!==r.direction)?l.splice(0):15<=l.length&&o.time-n.time<500&&1<=n.delta-o.delta&&o.delta<=6&&(c=0<a?.8:.2,i.mousewheel.lastEventBeforeSnap=o,l.splice(0),i.mousewheel.timeout=E(function(){i.slideToClosest(i.params.speed,!0,void 0,c)},0)),i.mousewheel.timeout||(i.mousewheel.timeout=E(function(){i.mousewheel.lastEventBeforeSnap=o,l.splice(0),i.slideToClosest(i.params.speed,!0,void 0,.5)},500))),s||i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),u===i.minTranslate()||u===i.maxTranslate())return!0}}else{u={time:T(),delta:Math.abs(a),direction:Math.sign(a),raw:e},a=i.mousewheel.recentWheelEvents;2<=a.length&&a.shift();e=a.length?a[a.length-1]:void 0;if(a.push(u),(!e||u.direction!==e.direction||u.delta>e.delta||u.time>e.time+150)&&i.mousewheel.animateSlider(u),i.mousewheel.releaseScroll(u))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){var t=Y();return!(this.params.mousewheel.thresholdDelta&&e.delta<this.params.mousewheel.thresholdDelta||this.params.mousewheel.thresholdTime&&T()-this.mousewheel.lastScrollTime<this.params.mousewheel.thresholdTime||!(6<=e.delta&&T()-this.mousewheel.lastScrollTime<60)&&(e.direction<0?this.isEnd&&!this.params.loop||this.animating||(this.slideNext(),this.emit("scroll",e.raw)):this.isBeginning&&!this.params.loop||this.animating||(this.slidePrev(),this.emit("scroll",e.raw)),this.mousewheel.lastScrollTime=(new t.Date).getTime(),1))},releaseScroll:function(e){var t=this.params.mousewheel;if(e.direction<0){if(this.isEnd&&!this.params.loop&&t.releaseOnEdges)return!0}else if(this.isBeginning&&!this.params.loop&&t.releaseOnEdges)return!0;return!1},enable:function(){var e=G.event();if(this.params.cssMode)return this.wrapperEl.removeEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarget&&(t=S(this.params.mousewheel.eventsTarget)),t.on("mouseenter",this.mousewheel.handleMouseEnter),t.on("mouseleave",this.mousewheel.handleMouseLeave),t.on(e,this.mousewheel.handle),this.mousewheel.enabled=!0},disable:function(){var e=G.event();if(this.params.cssMode)return this.wrapperEl.addEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(!this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarget&&(t=S(this.params.mousewheel.eventsTarget)),t.off(e,this.mousewheel.handle),!(this.mousewheel.enabled=!1)}},_={update:function(){var e,t,i=this.params.navigation;this.params.loop||(e=(t=this.navigation).$nextEl,(t=t.$prevEl)&&0<t.length&&(this.isBeginning?t.addClass(i.disabledClass):t.removeClass(i.disabledClass),t[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](i.lockClass)),e&&0<e.length&&(this.isEnd?e.addClass(i.disabledClass):e.removeClass(i.disabledClass),e[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](i.lockClass)))},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=S(i.nextEl),this.params.uniqueNavElements&&"string"==typeof i.nextEl&&1<e.length&&1===this.$el.find(i.nextEl).length&&(e=this.$el.find(i.nextEl))),i.prevEl&&(t=S(i.prevEl),this.params.uniqueNavElements&&"string"==typeof i.prevEl&&1<t.length&&1===this.$el.find(i.prevEl).length&&(t=this.$el.find(i.prevEl))),e&&0<e.length&&e.on("click",this.navigation.onNextClick),t&&0<t.length&&t.on("click",this.navigation.onPrevClick),K(this.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,e=e.$prevEl;t&&t.length&&(t.off("click",this.navigation.onNextClick),t.removeClass(this.params.navigation.disabledClass)),e&&e.length&&(e.off("click",this.navigation.onPrevClick),e.removeClass(this.params.navigation.disabledClass))}},W={update:function(){var e=this.rtl,i=this.params.pagination;if(i.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var n,t=(this.virtual&&this.params.virtual.enabled?this.virtual:this).slides.length,s=this.pagination.$el,a=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((n=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>t-1-2*this.loopedSlides&&(n-=t-2*this.loopedSlides),a-1<n&&(n-=a),n<0&&"bullets"!==this.params.paginationType&&(n=a+n)):n=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===i.type&&this.pagination.bullets&&0<this.pagination.bullets.length){var r,o,l,c,u,d=this.pagination.bullets;if(i.dynamicBullets&&(this.pagination.bulletSize=d.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),s.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(i.dynamicMainBullets+4)+"px"),1<i.dynamicMainBullets&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=n-this.previousIndex,this.pagination.dynamicBulletIndex>i.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=i.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),r=n-this.pagination.dynamicBulletIndex,l=((o=r+(Math.min(d.length,i.dynamicMainBullets)-1))+r)/2),d.removeClass(i.bulletActiveClass+" "+i.bulletActiveClass+"-next "+i.bulletActiveClass+"-next-next "+i.bulletActiveClass+"-prev "+i.bulletActiveClass+"-prev-prev "+i.bulletActiveClass+"-main"),1<s.length)d.each(function(e){var t=S(e),e=t.index();e===n&&t.addClass(i.bulletActiveClass),i.dynamicBullets&&(r<=e&&e<=o&&t.addClass(i.bulletActiveClass+"-main"),e===r&&t.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),e===o&&t.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next"))});else{var h=d.eq(n),p=h.index();if(h.addClass(i.bulletActiveClass),i.dynamicBullets){for(var t=d.eq(r),h=d.eq(o),f=r;f<=o;f+=1)d.eq(f).addClass(i.bulletActiveClass+"-main");if(this.params.loop)if(p>=d.length-i.dynamicMainBullets){for(var m=i.dynamicMainBullets;0<=m;--m)d.eq(d.length-m).addClass(i.bulletActiveClass+"-main");d.eq(d.length-i.dynamicMainBullets-1).addClass(i.bulletActiveClass+"-prev")}else t.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),h.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next");else t.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),h.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next")}}i.dynamicBullets&&(u=Math.min(d.length,i.dynamicMainBullets+4),c=(this.pagination.bulletSize*u-this.pagination.bulletSize)/2-l*this.pagination.bulletSize,u=e?"right":"left",d.css(this.isHorizontal()?u:"top",c+"px"))}"fraction"===i.type&&(s.find("."+i.currentClass).text(i.formatFractionCurrent(n+1)),s.find("."+i.totalClass).text(i.formatFractionTotal(a))),"progressbar"===i.type&&(l=i.progressbarOpposite?this.isHorizontal()?"vertical":"horizontal":this.isHorizontal()?"horizontal":"vertical",e=(n+1)/a,c=u=1,"horizontal"==l?u=e:c=e,s.find("."+i.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+u+") scaleY("+c+")").transition(this.params.speed)),"custom"===i.type&&i.renderCustom?(s.html(i.renderCustom(this,n+1,a)),this.emit("paginationRender",s[0])):this.emit("paginationUpdate",s[0]),s[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](i.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=(this.virtual&&this.params.virtual.enabled?this.virtual:this).slides.length,i=this.pagination.$el,n="";if("bullets"===e.type){for(var s=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,a=0;a<s;a+=1)e.renderBullet?n+=e.renderBullet.call(this,a,e.bulletClass):n+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(n),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(n=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(n)),"progressbar"===e.type&&(n=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(n)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var e,t=this,i=t.params.pagination;!i.el||0!==(e=S(i.el)).length&&(t.params.uniqueNavElements&&"string"==typeof i.el&&1<e.length&&(e=t.$el.find(i.el)),"bullets"===i.type&&i.clickable&&e.addClass(i.clickableClass),e.addClass(i.modifierClass+i.type),"bullets"===i.type&&i.dynamicBullets&&(e.addClass(""+i.modifierClass+i.type+"-dynamic"),t.pagination.dynamicBulletIndex=0,i.dynamicMainBullets<1&&(i.dynamicMainBullets=1)),"progressbar"===i.type&&i.progressbarOpposite&&e.addClass(i.progressbarOppositeClass),i.clickable&&e.on("click","."+i.bulletClass,function(e){e.preventDefault();e=S(this).index()*t.params.slidesPerGroup;t.params.loop&&(e+=t.loopedSlides),t.slideTo(e)}),K(t.pagination,{$el:e,el:e[0]}))},destroy:function(){var e,t=this.params.pagination;t.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length&&((e=this.pagination.$el).removeClass(t.hiddenClass),e.removeClass(t.modifierClass+t.type),this.pagination.bullets&&this.pagination.bullets.removeClass(t.bulletActiveClass),t.clickable&&e.off("click","."+t.bulletClass))}},X={setTranslate:function(){var e,t,i,n,s,a,r,o;this.params.scrollbar.el&&this.scrollbar.el&&(r=this.scrollbar,e=this.rtlTranslate,o=this.progress,t=r.dragSize,i=r.trackSize,n=r.$dragEl,s=r.$el,a=this.params.scrollbar,o=(i-(r=t))*o,e?0<(o=-o)?(r=t-o,o=0):i<-o+t&&(r=i+o):o<0?(r=t+o,o=0):i<o+t&&(r=i-o),this.isHorizontal()?(n.transform("translate3d("+o+"px, 0, 0)"),n[0].style.width=r+"px"):(n.transform("translate3d(0px, "+o+"px, 0)"),n[0].style.height=r+"px"),a.hide&&(clearTimeout(this.scrollbar.timeout),s[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){s[0].style.opacity=0,s.transition(400)},1e3)))},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){var e,t,i,n,s,a,r;this.params.scrollbar.el&&this.scrollbar.el&&(t=(e=this.scrollbar).$dragEl,i=e.$el,t[0].style.width="",t[0].style.height="",n=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,a=(s=this.size/this.virtualSize)*(n/this.size),r="auto"===this.params.scrollbar.dragSize?n*s:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=r+"px":t[0].style.height=r+"px",i[0].style.display=1<=s?"none":"",this.params.scrollbar.hide&&(i[0].style.opacity=0),K(e,{trackSize:n,divider:s,moveDivider:a,dragSize:r}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass))},getPointerPosition:function(e){return this.isHorizontal()?("touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0]:e).clientX:("touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0]:e).clientY},setDragPosition:function(e){var t=this.scrollbar,i=this.rtlTranslate,n=t.$el,s=t.dragSize,a=t.trackSize,r=t.dragStartPos,s=(t.getPointerPosition(e)-n.offset()[this.isHorizontal()?"left":"top"]-(null!==r?r:s/2))/(a-s);s=Math.max(Math.min(s,1),0),i&&(s=1-s);s=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*s;this.updateProgress(s),this.setTranslate(s),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,n=this.$wrapperEl,s=i.$el,a=i.$dragEl;this.scrollbar.isTouched=!0,this.scrollbar.dragStartPos=e.target===a[0]||e.target===a?i.getPointerPosition(e)-e.target.getBoundingClientRect()[this.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),n.transition(100),a.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),s.transition(0),t.hide&&s.css("opacity",1),this.params.cssMode&&this.$wrapperEl.css("scroll-snap-type","none"),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,n=t.$el,s=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),n.transition(0),s.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar,n=this.$wrapperEl,s=i.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,this.params.cssMode&&(this.$wrapperEl.css("scroll-snap-type",""),n.transition("")),t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=E(function(){s.css("opacity",0),s.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){var e,t,i,n,s,a,r;this.params.scrollbar.el&&(e=v(),a=this.scrollbar,t=this.touchEventsTouch,i=this.touchEventsDesktop,r=this.params,n=this.support,s=a.$el[0],a=!(!n.passiveListener||!r.passiveListeners)&&{passive:!1,capture:!1},r=!(!n.passiveListener||!r.passiveListeners)&&{passive:!0,capture:!1},n.touch?(s.addEventListener(t.start,this.scrollbar.onDragStart,a),s.addEventListener(t.move,this.scrollbar.onDragMove,a),s.addEventListener(t.end,this.scrollbar.onDragEnd,r)):(s.addEventListener(i.start,this.scrollbar.onDragStart,a),e.addEventListener(i.move,this.scrollbar.onDragMove,a),e.addEventListener(i.end,this.scrollbar.onDragEnd,r)))},disableDraggable:function(){var e,t,i,n,s,a,r;this.params.scrollbar.el&&(e=v(),a=this.scrollbar,t=this.touchEventsTouch,i=this.touchEventsDesktop,r=this.params,n=this.support,s=a.$el[0],a=!(!n.passiveListener||!r.passiveListeners)&&{passive:!1,capture:!1},r=!(!n.passiveListener||!r.passiveListeners)&&{passive:!0,capture:!1},n.touch?(s.removeEventListener(t.start,this.scrollbar.onDragStart,a),s.removeEventListener(t.move,this.scrollbar.onDragMove,a),s.removeEventListener(t.end,this.scrollbar.onDragEnd,r)):(s.removeEventListener(i.start,this.scrollbar.onDragStart,a),e.removeEventListener(i.move,this.scrollbar.onDragMove,a),e.removeEventListener(i.end,this.scrollbar.onDragEnd,r)))},init:function(){var e,t,i,n;this.params.scrollbar.el&&(e=this.scrollbar,n=this.$el,i=S((t=this.params.scrollbar).el),this.params.uniqueNavElements&&"string"==typeof t.el&&1<i.length&&1===n.find(t.el).length&&(i=n.find(t.el)),0===(n=i.find("."+this.params.scrollbar.dragClass)).length&&(n=S('<div class="'+this.params.scrollbar.dragClass+'"></div>'),i.append(n)),K(e,{$el:i,el:i[0],$dragEl:n,dragEl:n[0]}),t.draggable&&e.enableDraggable())},destroy:function(){this.scrollbar.disableDraggable()}},U={setTransform:function(e,t){var i=this.rtl,n=S(e),s=i?-1:1,a=n.attr("data-swiper-parallax")||"0",r=n.attr("data-swiper-parallax-x"),o=n.attr("data-swiper-parallax-y"),e=n.attr("data-swiper-parallax-scale"),i=n.attr("data-swiper-parallax-opacity");r||o?(r=r||"0",o=o||"0"):this.isHorizontal()?(r=a,o="0"):(o=a,r="0"),r=0<=r.indexOf("%")?parseInt(r,10)*t*s+"%":r*t*s+"px",o=0<=o.indexOf("%")?parseInt(o,10)*t+"%":o*t+"px",null!=i&&(i=i-(i-1)*(1-Math.abs(t)),n[0].style.opacity=i),null==e?n.transform("translate3d("+r+", "+o+", 0px)"):(t=e-(e-1)*(1-Math.abs(t)),n.transform("translate3d("+r+", "+o+", 0px) scale("+t+")"))},setTranslate:function(){var n=this,e=n.$el,t=n.slides,s=n.progress,a=n.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){n.parallax.setTransform(e,s)}),t.each(function(e,t){var i=e.progress;1<n.params.slidesPerGroup&&"auto"!==n.params.slidesPerView&&(i+=Math.ceil(t/2)-s*(a.length-1)),i=Math.min(Math.max(i,-1),1),S(e).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){n.parallax.setTransform(e,i)})})},setTransition:function(i){void 0===i&&(i=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){var t=S(e),e=parseInt(t.attr("data-swiper-parallax-duration"),10)||i;0===i&&(e=0),t.transition(e)})}},V={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,n=e.targetTouches[1].pageX,e=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(n-t,2)+Math.pow(e-i,2))},onGestureStart:function(e){var t=this.support,i=this.params.zoom,n=this.zoom,s=n.gesture;if(n.fakeGestureTouched=!1,n.fakeGestureMoved=!1,!t.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;n.fakeGestureTouched=!0,s.scaleStart=V.getDistanceBetweenTouches(e)}s.$slideEl&&s.$slideEl.length||(s.$slideEl=S(e.target).closest("."+this.params.slideClass),0===s.$slideEl.length&&(s.$slideEl=this.slides.eq(this.activeIndex)),s.$imageEl=s.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),s.$imageWrapEl=s.$imageEl.parent("."+i.containerClass),s.maxRatio=s.$imageWrapEl.attr("data-swiper-zoom")||i.maxRatio,0!==s.$imageWrapEl.length)?(s.$imageEl&&s.$imageEl.transition(0),this.zoom.isScaling=!0):s.$imageEl=void 0},onGestureChange:function(e){var t=this.support,i=this.params.zoom,n=this.zoom,s=n.gesture;if(!t.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;n.fakeGestureMoved=!0,s.scaleMove=V.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length?(t.gestures?n.scale=e.scale*n.currentScale:n.scale=s.scaleMove/s.scaleStart*n.currentScale,n.scale>s.maxRatio&&(n.scale=s.maxRatio-1+Math.pow(n.scale-s.maxRatio+1,.5)),n.scale<i.minRatio&&(n.scale=i.minRatio+1-Math.pow(i.minRatio-n.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+n.scale+")")):"gesturechange"===e.type&&n.onGestureStart(e)},onGestureEnd:function(e){var t=this.device,i=this.support,n=this.params.zoom,s=this.zoom,a=s.gesture;if(!i.gestures){if(!s.fakeGestureTouched||!s.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!t.android)return;s.fakeGestureTouched=!1,s.fakeGestureMoved=!1}a.$imageEl&&0!==a.$imageEl.length&&(s.scale=Math.max(Math.min(s.scale,a.maxRatio),n.minRatio),a.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+s.scale+")"),s.currentScale=s.scale,s.isScaling=!1,1===s.scale&&(a.$slideEl=void 0))},onTouchStart:function(e){var t=this.device,i=this.zoom,n=i.gesture,i=i.image;n.$imageEl&&0!==n.$imageEl.length&&(i.isTouched||(t.android&&e.cancelable&&e.preventDefault(),i.isTouched=!0,i.touchesStart.x=("touchstart"===e.type?e.targetTouches[0]:e).pageX,i.touchesStart.y=("touchstart"===e.type?e.targetTouches[0]:e).pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,n=t.image,s=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,n.isTouched&&i.$slideEl)){n.isMoved||(n.width=i.$imageEl[0].offsetWidth,n.height=i.$imageEl[0].offsetHeight,n.startX=y(i.$imageWrapEl[0],"x")||0,n.startY=y(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(n.startX=-n.startX,n.startY=-n.startY));var a=n.width*t.scale,r=n.height*t.scale;if(!(a<i.slideWidth&&r<i.slideHeight)){if(n.minX=Math.min(i.slideWidth/2-a/2,0),n.maxX=-n.minX,n.minY=Math.min(i.slideHeight/2-r/2,0),n.maxY=-n.minY,n.touchesCurrent.x=("touchmove"===e.type?e.targetTouches[0]:e).pageX,n.touchesCurrent.y=("touchmove"===e.type?e.targetTouches[0]:e).pageY,!n.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(n.minX)===Math.floor(n.startX)&&n.touchesCurrent.x<n.touchesStart.x||Math.floor(n.maxX)===Math.floor(n.startX)&&n.touchesCurrent.x>n.touchesStart.x))return void(n.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(n.minY)===Math.floor(n.startY)&&n.touchesCurrent.y<n.touchesStart.y||Math.floor(n.maxY)===Math.floor(n.startY)&&n.touchesCurrent.y>n.touchesStart.y))return void(n.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),n.isMoved=!0,n.currentX=n.touchesCurrent.x-n.touchesStart.x+n.startX,n.currentY=n.touchesCurrent.y-n.touchesStart.y+n.startY,n.currentX<n.minX&&(n.currentX=n.minX+1-Math.pow(n.minX-n.currentX+1,.8)),n.currentX>n.maxX&&(n.currentX=n.maxX-1+Math.pow(n.currentX-n.maxX+1,.8)),n.currentY<n.minY&&(n.currentY=n.minY+1-Math.pow(n.minY-n.currentY+1,.8)),n.currentY>n.maxY&&(n.currentY=n.maxY-1+Math.pow(n.currentY-n.maxY+1,.8)),s.prevPositionX||(s.prevPositionX=n.touchesCurrent.x),s.prevPositionY||(s.prevPositionY=n.touchesCurrent.y),s.prevTime||(s.prevTime=Date.now()),s.x=(n.touchesCurrent.x-s.prevPositionX)/(Date.now()-s.prevTime)/2,s.y=(n.touchesCurrent.y-s.prevPositionY)/(Date.now()-s.prevTime)/2,Math.abs(n.touchesCurrent.x-s.prevPositionX)<2&&(s.x=0),Math.abs(n.touchesCurrent.y-s.prevPositionY)<2&&(s.y=0),s.prevPositionX=n.touchesCurrent.x,s.prevPositionY=n.touchesCurrent.y,s.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+n.currentX+"px, "+n.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,n=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var s=300,a=300,r=n.x*s,o=i.currentX+r,r=n.y*a,r=i.currentY+r;0!==n.x&&(s=Math.abs((o-i.currentX)/n.x)),0!==n.y&&(a=Math.abs((r-i.currentY)/n.y));a=Math.max(s,a);i.currentX=o,i.currentY=r;r=i.width*e.scale,e=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-r/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-e/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(a).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl&&t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl&&t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,n,s=this.zoom,a=this.params.zoom,r=s.gesture,o=s.image;r.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?r.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):r.$slideEl=this.slides.eq(this.activeIndex),r.$imageEl=r.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),r.$imageWrapEl=r.$imageEl.parent("."+a.containerClass)),r.$imageEl&&0!==r.$imageEl.length&&(r.$slideEl.addClass(""+a.zoomedSlideClass),o=void 0===o.touchesStart.x&&e?(n=("touchend"===e.type?e.changedTouches[0]:e).pageX,("touchend"===e.type?e.changedTouches[0]:e).pageY):(n=o.touchesStart.x,o.touchesStart.y),s.scale=r.$imageWrapEl.attr("data-swiper-zoom")||a.maxRatio,s.currentScale=r.$imageWrapEl.attr("data-swiper-zoom")||a.maxRatio,e?(a=r.$slideEl[0].offsetWidth,e=r.$slideEl[0].offsetHeight,t=r.$slideEl.offset().left+a/2-n,i=r.$slideEl.offset().top+e/2-o,n=r.$imageEl[0].offsetWidth,o=r.$imageEl[0].offsetHeight,n=n*s.scale,o=o*s.scale,n=-(a=Math.min(a/2-n/2,0)),o=-(e=Math.min(e/2-o/2,0)),(t=t*s.scale)<a&&(t=a),n<t&&(t=n),(i=i*s.scale)<e&&(i=e),o<i&&(i=o)):i=t=0,r.$imageWrapEl.transition(300).transform("translate3d("+t+"px, "+i+"px,0)"),r.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+s.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?i.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):i.$slideEl=this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},toggleGestures:function(e){var t=this.zoom,i=t.slideSelector,n=t.passiveListener;this.$wrapperEl[e]("gesturestart",i,t.onGestureStart,n),this.$wrapperEl[e]("gesturechange",i,t.onGestureChange,n),this.$wrapperEl[e]("gestureend",i,t.onGestureEnd,n)},enableGestures:function(){this.zoom.gesturesEnabled||(this.zoom.gesturesEnabled=!0,this.zoom.toggleGestures("on"))},disableGestures:function(){this.zoom.gesturesEnabled&&(this.zoom.gesturesEnabled=!1,this.zoom.toggleGestures("off"))},enable:function(){var e,t,i,n=this.support,s=this.zoom;s.enabled||(s.enabled=!0,e=!("touchstart"!==this.touchEvents.start||!n.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},t=!n.passiveListener||{passive:!1,capture:!0},i="."+this.params.slideClass,this.zoom.passiveListener=e,this.zoom.slideSelector=i,n.gestures?(this.$wrapperEl.on(this.touchEvents.start,this.zoom.enableGestures,e),this.$wrapperEl.on(this.touchEvents.end,this.zoom.disableGestures,e)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,i,s.onGestureStart,e),this.$wrapperEl.on(this.touchEvents.move,i,s.onGestureChange,t),this.$wrapperEl.on(this.touchEvents.end,i,s.onGestureEnd,e),this.touchEvents.cancel&&this.$wrapperEl.on(this.touchEvents.cancel,i,s.onGestureEnd,e)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,s.onTouchMove,t))},disable:function(){var e,t,i,n,s=this.zoom;s.enabled&&(e=this.support,this.zoom.enabled=!1,t=!("touchstart"!==this.touchEvents.start||!e.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!e.passiveListener||{passive:!1,capture:!0},n="."+this.params.slideClass,e.gestures?(this.$wrapperEl.off(this.touchEvents.start,this.zoom.enableGestures,t),this.$wrapperEl.off(this.touchEvents.end,this.zoom.disableGestures,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,n,s.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,n,s.onGestureChange,i),this.$wrapperEl.off(this.touchEvents.end,n,s.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.off(this.touchEvents.cancel,n,s.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,s.onTouchMove,i))}},Q={loadInSlide:function(e,l){void 0===l&&(l=!0);var c,u=this,d=u.params.lazy;void 0!==e&&0!==u.slides.length&&(e=(c=u.virtual&&u.params.virtual.enabled?u.$wrapperEl.children("."+u.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):u.slides.eq(e)).find("."+d.elementClass+":not(."+d.loadedClass+"):not(."+d.loadingClass+")"),!c.hasClass(d.elementClass)||c.hasClass(d.loadedClass)||c.hasClass(d.loadingClass)||e.push(c[0]),0!==e.length&&e.each(function(e){var i=S(e);i.addClass(d.loadingClass);var n=i.attr("data-background"),s=i.attr("data-src"),a=i.attr("data-srcset"),r=i.attr("data-sizes"),o=i.parent("picture");u.loadImage(i[0],s||n,a,r,!1,function(){var e,t;null==u||!u||u&&!u.params||u.destroyed||(n?(i.css("background-image",'url("'+n+'")'),i.removeAttr("data-background")):(a&&(i.attr("srcset",a),i.removeAttr("data-srcset")),r&&(i.attr("sizes",r),i.removeAttr("data-sizes")),o.length&&o.children("source").each(function(e){e=S(e);e.attr("data-srcset")&&(e.attr("srcset",e.attr("data-srcset")),e.removeAttr("data-srcset"))}),s&&(i.attr("src",s),i.removeAttr("data-src"))),i.addClass(d.loadedClass).removeClass(d.loadingClass),c.find("."+d.preloaderClass).remove(),u.params.loop&&l&&(t=c.attr("data-swiper-slide-index"),c.hasClass(u.params.slideDuplicateClass)?(e=u.$wrapperEl.children('[data-swiper-slide-index="'+t+'"]:not(.'+u.params.slideDuplicateClass+")"),u.lazy.loadInSlide(e.index(),!1)):(t=u.$wrapperEl.children("."+u.params.slideDuplicateClass+'[data-swiper-slide-index="'+t+'"]'),u.lazy.loadInSlide(t.index(),!1))),u.emit("lazyImageReady",c[0],i[0]),u.params.autoHeight&&u.updateAutoHeight())}),u.emit("lazyImageLoad",c[0],i[0])}))},load:function(){var t=this,i=t.$wrapperEl,n=t.params,s=t.slides,e=t.activeIndex,a=t.virtual&&n.virtual.enabled,r=n.lazy,o=n.slidesPerView;function l(e){if(a){if(i.children("."+n.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return 1}else if(s[e])return 1}function c(e){return a?S(e).attr("data-swiper-slide-index"):S(e).index()}if("auto"===o&&(o=0),t.lazy.initialImageLoaded||(t.lazy.initialImageLoaded=!0),t.params.watchSlidesVisibility)i.children("."+n.slideVisibleClass).each(function(e){e=a?S(e).attr("data-swiper-slide-index"):S(e).index();t.lazy.loadInSlide(e)});else if(1<o)for(var u=e;u<e+o;u+=1)l(u)&&t.lazy.loadInSlide(u);else t.lazy.loadInSlide(e);if(r.loadPrevNext)if(1<o||r.loadPrevNextAmount&&1<r.loadPrevNextAmount){for(var d=r.loadPrevNextAmount,r=o,h=Math.min(e+r+Math.max(d,r),s.length),d=Math.max(e-Math.max(r,d),0),p=e+o;p<h;p+=1)l(p)&&t.lazy.loadInSlide(p);for(var f=d;f<e;f+=1)l(f)&&t.lazy.loadInSlide(f)}else{d=i.children("."+n.slideNextClass);0<d.length&&t.lazy.loadInSlide(c(d));d=i.children("."+n.slidePrevClass);0<d.length&&t.lazy.loadInSlide(c(d))}}},Z={LinearSpline:function(e,t){var i,n,s,a,r;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(r=function(e,t){for(n=-1,i=e.length;1<i-n;)e[s=i+n>>1]<=t?n=s:i=s;return i}(this.x,e),a=r-1,(e-this.x[a])*(this.y[r]-this.y[a])/(this.x[r]-this.x[a])+this.y[a]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new Z.LinearSpline(this.slidesGrid,e.slidesGrid):new Z.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,n,s=this,a=s.controller.control,r=s.constructor;function o(e){var t=s.rtlTranslate?-s.translate:s.translate;"slide"===s.params.controller.by&&(s.controller.getInterpolateFunction(e),n=-s.controller.spline.interpolate(-t)),n&&"container"!==s.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(s.maxTranslate()-s.minTranslate()),n=(t-s.minTranslate())*i+e.minTranslate()),s.params.controller.inverse&&(n=e.maxTranslate()-n),e.updateProgress(n),e.setTranslate(n,s),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(a))for(var l=0;l<a.length;l+=1)a[l]!==t&&a[l]instanceof r&&o(a[l]);else a instanceof r&&t!==a&&o(a)},setTransition:function(t,e){var i,n=this,s=n.constructor,a=n.controller.control;function r(e){e.setTransition(t,n),0!==t&&(e.transitionStart(),e.params.autoHeight&&E(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){a&&(e.params.loop&&"slide"===n.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(a))for(i=0;i<a.length;i+=1)a[i]!==e&&a[i]instanceof s&&r(a[i]);else a instanceof s&&e!==a&&r(a)}},J={getRandomNumber:function(e){return void 0===e&&(e=16),"x".repeat(e).replace(/x/g,function(){return Math.round(16*Math.random()).toString(16)})},makeElFocusable:function(e){return e.attr("tabIndex","0"),e},makeElNotFocusable:function(e){return e.attr("tabIndex","-1"),e},addElRole:function(e,t){return e.attr("role",t),e},addElRoleDescription:function(e,t){return e.attr("aria-role-description",t),e},addElControls:function(e,t){return e.attr("aria-controls",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},addElId:function(e,t){return e.attr("id",t),e},addElLive:function(e,t){return e.attr("aria-live",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;13===e.keyCode&&(e=S(e.target),this.navigation&&this.navigation.$nextEl&&e.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&e.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&e.is("."+this.params.pagination.bulletClass)&&e[0].click())},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){var e,t;!this.params.loop&&this.navigation&&(e=(t=this.navigation).$nextEl,(t=t.$prevEl)&&0<t.length&&(this.isBeginning?(this.a11y.disableEl(t),this.a11y.makeElNotFocusable(t)):(this.a11y.enableEl(t),this.a11y.makeElFocusable(t))),e&&0<e.length&&(this.isEnd?(this.a11y.disableEl(e),this.a11y.makeElNotFocusable(e)):(this.a11y.enableEl(e),this.a11y.makeElFocusable(e))))},updatePagination:function(){var t=this,i=t.params.a11y;t.pagination&&t.params.pagination.clickable&&t.pagination.bullets&&t.pagination.bullets.length&&t.pagination.bullets.each(function(e){e=S(e);t.a11y.makeElFocusable(e),t.params.pagination.renderBullet||(t.a11y.addElRole(e,"button"),t.a11y.addElLabel(e,i.paginationBulletMessage.replace(/\{\{index\}\}/,e.index()+1)))})},init:function(){var t=this,e=t.params.a11y;t.$el.append(t.a11y.liveRegion);var i=t.$el;e.containerRoleDescriptionMessage&&t.a11y.addElRoleDescription(i,e.containerRoleDescriptionMessage),e.containerMessage&&t.a11y.addElLabel(i,e.containerMessage);var n,s,a=t.$wrapperEl,r=a.attr("id")||"swiper-wrapper-"+t.a11y.getRandomNumber(16);t.a11y.addElId(a,r),i=t.params.autoplay&&t.params.autoplay.enabled?"off":"polite",t.a11y.addElLive(a,i),e.itemRoleDescriptionMessage&&t.a11y.addElRoleDescription(S(t.slides),e.itemRoleDescriptionMessage),t.a11y.addElRole(S(t.slides),"group"),t.slides.each(function(e){e=S(e);t.a11y.addElLabel(e,e.index()+1+" / "+t.slides.length)}),t.navigation&&t.navigation.$nextEl&&(n=t.navigation.$nextEl),t.navigation&&t.navigation.$prevEl&&(s=t.navigation.$prevEl),n&&n.length&&(t.a11y.makeElFocusable(n),"BUTTON"!==n[0].tagName&&(t.a11y.addElRole(n,"button"),n.on("keydown",t.a11y.onEnterKey)),t.a11y.addElLabel(n,e.nextSlideMessage),t.a11y.addElControls(n,r)),s&&s.length&&(t.a11y.makeElFocusable(s),"BUTTON"!==s[0].tagName&&(t.a11y.addElRole(s,"button"),s.on("keydown",t.a11y.onEnterKey)),t.a11y.addElLabel(s,e.prevSlideMessage),t.a11y.addElControls(s,r)),t.pagination&&t.params.pagination.clickable&&t.pagination.bullets&&t.pagination.bullets.length&&t.pagination.$el.on("keydown","."+t.params.pagination.bulletClass,t.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&0<this.a11y.liveRegion.length&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},ee={init:function(){var e=Y();if(this.params.history){if(!e.history||!e.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var t=this.history;t.initialized=!0,t.paths=ee.getPathValues(this.params.url),(t.paths.key||t.paths.value)&&(t.scrollToSlide(0,t.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||e.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){var e=Y();this.params.history.replaceState||e.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=ee.getPathValues(this.params.url),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(e){var t=Y(),e=(e?new URL(e):t.location).pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){var i,n=Y();this.history.initialized&&this.params.history.enabled&&(i=this.params.url?new URL(this.params.url):n.location,t=this.slides.eq(t),t=ee.slugify(t.attr("data-history")),i.pathname.includes(e)||(t=e+"/"+t),(e=n.history.state)&&e.value===t||(this.params.history.replaceState?n.history.replaceState({value:t},null,t):n.history.pushState({value:t},null,t)))},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var n=0,s=this.slides.length;n<s;n+=1){var a=this.slides.eq(n);ee.slugify(a.attr("data-history"))!==t||a.hasClass(this.params.slideDuplicateClass)||(a=a.index(),this.slideTo(a,e,i))}else this.slideTo(0,e,i)}},te={onHashCange:function(){var e=v();this.emit("hashChange");e=e.location.hash.replace("#","");e===this.slides.eq(this.activeIndex).attr("data-hash")||void 0!==(e=this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+e+'"]').index())&&this.slideTo(e)},setHash:function(){var e=Y(),t=v();this.hashNavigation.initialized&&this.params.hashNavigation.enabled&&(this.params.hashNavigation.replaceState&&e.history&&e.history.replaceState?e.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||""):(e=(e=this.slides.eq(this.activeIndex)).attr("data-hash")||e.attr("data-history"),t.location.hash=e||""),this.emit("hashSet"))},init:function(){var e=v(),t=Y();if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var i=e.location.hash.replace("#","");if(i)for(var n=0,s=this.slides.length;n<s;n+=1){var a=this.slides.eq(n);(a.attr("data-hash")||a.attr("data-history"))!==i||a.hasClass(this.params.slideDuplicateClass)||(a=a.index(),this.slideTo(a,0,this.params.runCallbacksOnInit,!0))}this.params.hashNavigation.watchState&&S(t).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){var e=Y();this.params.hashNavigation.watchState&&S(e).off("hashchange",this.hashNavigation.onHashCange)}},ie={run:function(){var t=this,e=t.slides.eq(t.activeIndex),i=t.params.autoplay.delay;e.attr("data-swiper-autoplay")&&(i=e.attr("data-swiper-autoplay")||t.params.autoplay.delay),clearTimeout(t.autoplay.timeout),t.autoplay.timeout=E(function(){var e;t.params.autoplay.reverseDirection?t.params.loop?(t.loopFix(),e=t.slidePrev(t.params.speed,!0,!0),t.emit("autoplay")):t.isBeginning?t.params.autoplay.stopOnLastSlide?t.autoplay.stop():(e=t.slideTo(t.slides.length-1,t.params.speed,!0,!0),t.emit("autoplay")):(e=t.slidePrev(t.params.speed,!0,!0),t.emit("autoplay")):t.params.loop?(t.loopFix(),e=t.slideNext(t.params.speed,!0,!0),t.emit("autoplay")):t.isEnd?t.params.autoplay.stopOnLastSlide?t.autoplay.stop():(e=t.slideTo(0,t.params.speed,!0,!0),t.emit("autoplay")):(e=t.slideNext(t.params.speed,!0,!0),t.emit("autoplay")),(t.params.cssMode&&t.autoplay.running||!1===e)&&t.autoplay.run()},i)},start:function(){return void 0===this.autoplay.timeout&&!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0)},stop:function(){return!!this.autoplay.running&&void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0)},pause:function(e){this.autoplay.running&&(this.autoplay.paused||(this.autoplay.timeout&&clearTimeout(this.autoplay.timeout),this.autoplay.paused=!0,0!==e&&this.params.autoplay.waitForTransition?(this.$wrapperEl[0].addEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].addEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd)):(this.autoplay.paused=!1,this.autoplay.run())))},onVisibilityChange:function(){var e=v();"hidden"===e.visibilityState&&this.autoplay.running&&this.autoplay.pause(),"visible"===e.visibilityState&&this.autoplay.paused&&(this.autoplay.run(),this.autoplay.paused=!1)},onTransitionEnd:function(e){this&&!this.destroyed&&this.$wrapperEl&&e.target===this.$wrapperEl[0]&&(this.$wrapperEl[0].removeEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].removeEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd),this.autoplay.paused=!1,this.autoplay.running?this.autoplay.run():this.autoplay.stop())}},ne={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),n=-i[0].swiperSlideOffset;this.params.virtualTranslate||(n-=this.translate);var s=0;this.isHorizontal()||(s=n,n=0);var a=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:a}).transform("translate3d("+n+"px, "+s+"px, 0px)")}},setTransition:function(e){var i,n=this,t=n.slides,s=n.$wrapperEl;t.transition(e),n.params.virtualTranslate&&0!==e&&(i=!1,t.transitionEnd(function(){if(!i&&n&&!n.destroyed){i=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)s.trigger(e[t])}}))}},se={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,n=this.slides,s=this.width,a=this.height,r=this.rtlTranslate,o=this.size,l=this.browser,c=this.params.cubeEffect,u=this.isHorizontal(),d=this.virtual&&this.params.virtual.enabled,h=0;c.shadow&&(u?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=S('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:s+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=S('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var p,f=0;f<n.length;f+=1){var m=n.eq(f),g=f;d&&(g=parseInt(m.attr("data-swiper-slide-index"),10));var v=90*g,y=Math.floor(v/360);r&&(v=-v,y=Math.floor(-v/360));var b=Math.max(Math.min(m[0].progress,1),-1),w=0,x=0,C=0;g%4==0?(w=4*-y*o,C=0):(g-1)%4==0?(w=0,C=4*-y*o):(g-2)%4==0?(w=o+4*y*o,C=o):(g-3)%4==0&&(w=-o,C=3*o+4*o*y),r&&(w=-w),u||(x=w,w=0);C="rotateX("+(u?0:-v)+"deg) rotateY("+(u?v:0)+"deg) translate3d("+w+"px, "+x+"px, "+C+"px)";b<=1&&-1<b&&(h=r?90*-g-90*b:90*g+90*b),m.transform(C),c.slideShadows&&(g=u?m.find(".swiper-slide-shadow-left"):m.find(".swiper-slide-shadow-top"),C=u?m.find(".swiper-slide-shadow-right"):m.find(".swiper-slide-shadow-bottom"),0===g.length&&(g=S('<div class="swiper-slide-shadow-'+(u?"left":"top")+'"></div>'),m.append(g)),0===C.length&&(C=S('<div class="swiper-slide-shadow-'+(u?"right":"bottom")+'"></div>'),m.append(C)),g.length&&(g[0].style.opacity=Math.max(-b,0)),C.length&&(C[0].style.opacity=Math.max(b,0)))}i.css({"-webkit-transform-origin":"50% 50% -"+o/2+"px","-moz-transform-origin":"50% 50% -"+o/2+"px","-ms-transform-origin":"50% 50% -"+o/2+"px","transform-origin":"50% 50% -"+o/2+"px"}),c.shadow&&(u?e.transform("translate3d(0px, "+(s/2+c.shadowOffset)+"px, "+-s/2+"px) rotateX(90deg) rotateZ(0deg) scale("+c.shadowScale+")"):(p=Math.abs(h)-90*Math.floor(Math.abs(h)/90),t=1.5-(Math.sin(2*p*Math.PI/360)/2+Math.cos(2*p*Math.PI/360)/2),s=c.shadowScale,p=c.shadowScale/t,t=c.shadowOffset,e.transform("scale3d("+s+", 1, "+p+") translate3d(0px, "+(a/2+t)+"px, "+-a/2/p+"px) rotateX(-90deg)")));l=l.isSafari||l.isWebView?-o/2:0;i.transform("translate3d(0px,0,"+l+"px) rotateX("+(this.isHorizontal()?0:h)+"deg) rotateY("+(this.isHorizontal()?-h:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},ae={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var n=e.eq(i),s=n[0].progress;this.params.flipEffect.limitRotation&&(s=Math.max(Math.min(n[0].progress,1),-1));var a,r,o=-180*s,l=0,c=-n[0].swiperSlideOffset,u=0;this.isHorizontal()?t&&(o=-o):(u=c,l=-o,o=c=0),n[0].style.zIndex=-Math.abs(Math.round(s))+e.length,this.params.flipEffect.slideShadows&&(a=this.isHorizontal()?n.find(".swiper-slide-shadow-left"):n.find(".swiper-slide-shadow-top"),r=this.isHorizontal()?n.find(".swiper-slide-shadow-right"):n.find(".swiper-slide-shadow-bottom"),0===a.length&&(a=S('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),n.append(a)),0===r.length&&(r=S('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),n.append(r)),a.length&&(a[0].style.opacity=Math.max(-s,0)),r.length&&(r[0].style.opacity=Math.max(s,0))),n.transform("translate3d("+c+"px, "+u+"px, 0px) rotateX("+l+"deg) rotateY("+o+"deg)")}},setTransition:function(e){var i,n=this,t=n.slides,s=n.activeIndex,a=n.$wrapperEl;t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),n.params.virtualTranslate&&0!==e&&(i=!1,t.eq(s).transitionEnd(function(){if(!i&&n&&!n.destroyed){i=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)a.trigger(e[t])}}))}},re={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,n=this.slidesSizesGrid,s=this.params.coverflowEffect,a=this.isHorizontal(),r=this.translate,o=a?e/2-r:t/2-r,l=a?s.rotate:-s.rotate,c=s.depth,u=0,d=i.length;u<d;u+=1){var h=i.eq(u),p=n[u],f=(o-h[0].swiperSlideOffset-p/2)/p*s.modifier,m=a?l*f:0,g=a?0:l*f,v=-c*Math.abs(f),y=s.stretch;"string"==typeof y&&-1!==y.indexOf("%")&&(y=parseFloat(s.stretch)/100*p);var b=a?0:y*f,p=a?y*f:0,y=1-(1-s.scale)*Math.abs(f);Math.abs(p)<.001&&(p=0),Math.abs(b)<.001&&(b=0),Math.abs(v)<.001&&(v=0),Math.abs(m)<.001&&(m=0),Math.abs(g)<.001&&(g=0),Math.abs(y)<.001&&(y=0);m="translate3d("+p+"px,"+b+"px,"+v+"px)  rotateX("+g+"deg) rotateY("+m+"deg) scale("+y+")";h.transform(m),h[0].style.zIndex=1-Math.abs(Math.round(f)),s.slideShadows&&(y=a?h.find(".swiper-slide-shadow-left"):h.find(".swiper-slide-shadow-top"),m=a?h.find(".swiper-slide-shadow-right"):h.find(".swiper-slide-shadow-bottom"),0===y.length&&(y=S('<div class="swiper-slide-shadow-'+(a?"left":"top")+'"></div>'),h.append(y)),0===m.length&&(m=S('<div class="swiper-slide-shadow-'+(a?"right":"bottom")+'"></div>'),h.append(m)),y.length&&(y[0].style.opacity=0<f?f:0),m.length&&(m[0].style.opacity=0<-f?-f:0))}},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},oe={init:function(){var e=this.params.thumbs;if(this.thumbs.initialized)return!1;this.thumbs.initialized=!0;var t=this.constructor;return e.swiper instanceof t?(this.thumbs.swiper=e.swiper,K(this.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),K(this.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):b(e.swiper)&&(this.thumbs.swiper=new t(K({},e.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),this.thumbs.swiperCreated=!0),this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass),this.thumbs.swiper.on("tap",this.thumbs.onThumbClick),!0},onThumbClick:function(){var e,t,i,n=this.thumbs.swiper;n&&(t=n.clickedIndex,(e=n.clickedSlide)&&S(e).hasClass(this.params.thumbs.slideThumbActiveClass)||null==t||(i=n.params.loop?parseInt(S(n.clickedSlide).attr("data-swiper-slide-index"),10):t,this.params.loop&&(e=this.activeIndex,this.slides.eq(e).hasClass(this.params.slideDuplicateClass)&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,e=this.activeIndex),n=this.slides.eq(e).prevAll('[data-swiper-slide-index="'+i+'"]').eq(0).index(),t=this.slides.eq(e).nextAll('[data-swiper-slide-index="'+i+'"]').eq(0).index(),i=void 0===n||void 0!==t&&t-e<e-n?t:n),this.slideTo(i)))},update:function(e){var t=this.thumbs.swiper;if(t){var i,n,s,a="auto"===t.params.slidesPerView?t.slidesPerViewDynamic():t.params.slidesPerView,r=this.params.thumbs.autoScrollOffset,o=r&&!t.params.loop;this.realIndex===t.realIndex&&!o||(i=t.activeIndex,s=t.params.loop?(t.slides.eq(i).hasClass(t.params.slideDuplicateClass)&&(t.loopFix(),t._clientLeft=t.$wrapperEl[0].clientLeft,i=t.activeIndex),s=t.slides.eq(i).prevAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index(),n=t.slides.eq(i).nextAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index(),n=void 0===s?n:void 0===n?s:n-i==i-s?i:n-i<i-s?n:s,this.activeIndex>this.previousIndex?"next":"prev"):(n=this.realIndex)>this.previousIndex?"next":"prev",o&&(n+="next"===s?r:-1*r),t.visibleSlidesIndexes&&t.visibleSlidesIndexes.indexOf(n)<0&&(t.params.centeredSlides?n=i<n?n-Math.floor(a/2)+1:n+Math.floor(a/2)-1:i<n&&(n=n-a+1),t.slideTo(n,e?0:void 0)));var l=1,c=this.params.thumbs.slideThumbActiveClass;if(1<this.params.slidesPerView&&!this.params.centeredSlides&&(l=this.params.slidesPerView),this.params.thumbs.multipleActiveThumbs||(l=1),l=Math.floor(l),t.slides.removeClass(c),t.params.loop||t.params.virtual&&t.params.virtual.enabled)for(var u=0;u<l;u+=1)t.$wrapperEl.children('[data-swiper-slide-index="'+(this.realIndex+u)+'"]').addClass(c);else for(var d=0;d<l;d+=1)t.slides.eq(this.realIndex+d).addClass(c)}}},O=[M,O,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarget:"container",thresholdDelta:null,thresholdTime:null}},create:function(){w(this,{mousewheel:{enabled:!1,lastScrollTime:T(),lastEventBeforeSnap:void 0,recentWheelEvents:[],enable:G.enable,disable:G.disable,handle:G.handle,handleMouseEnter:G.handleMouseEnter,handleMouseLeave:G.handleMouseLeave,animateSlider:G.animateSlider,releaseScroll:G.releaseScroll}})},on:{init:function(e){!e.params.mousewheel.enabled&&e.params.cssMode&&e.mousewheel.disable(),e.params.mousewheel.enabled&&e.mousewheel.enable()},destroy:function(e){e.params.cssMode&&e.mousewheel.enable(),e.mousewheel.enabled&&e.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){w(this,{navigation:t({},_)})},on:{init:function(e){e.navigation.init(),e.navigation.update()},toEdge:function(e){e.navigation.update()},fromEdge:function(e){e.navigation.update()},destroy:function(e){e.navigation.destroy()},click:function(e,t){var i,n=e.navigation,s=n.$nextEl,n=n.$prevEl;!e.params.navigation.hideOnClick||S(t.target).is(n)||S(t.target).is(s)||(s?i=s.hasClass(e.params.navigation.hiddenClass):n&&(i=n.hasClass(e.params.navigation.hiddenClass)),!0===i?e.emit("navigationShow"):e.emit("navigationHide"),s&&s.toggleClass(e.params.navigation.hiddenClass),n&&n.toggleClass(e.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){w(this,{pagination:t({dynamicBulletIndex:0},W)})},on:{init:function(e){e.pagination.init(),e.pagination.render(),e.pagination.update()},activeIndexChange:function(e){!e.params.loop&&void 0!==e.snapIndex||e.pagination.update()},snapIndexChange:function(e){e.params.loop||e.pagination.update()},slidesLengthChange:function(e){e.params.loop&&(e.pagination.render(),e.pagination.update())},snapGridLengthChange:function(e){e.params.loop||(e.pagination.render(),e.pagination.update())},destroy:function(e){e.pagination.destroy()},click:function(e,t){e.params.pagination.el&&e.params.pagination.hideOnClick&&0<e.pagination.$el.length&&!S(t.target).hasClass(e.params.pagination.bulletClass)&&(!0===e.pagination.$el.hasClass(e.params.pagination.hiddenClass)?e.emit("paginationShow"):e.emit("paginationHide"),e.pagination.$el.toggleClass(e.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){w(this,{scrollbar:t({isTouched:!1,timeout:null,dragTimeout:null},X)})},on:{init:function(e){e.scrollbar.init(),e.scrollbar.updateSize(),e.scrollbar.setTranslate()},update:function(e){e.scrollbar.updateSize()},resize:function(e){e.scrollbar.updateSize()},observerUpdate:function(e){e.scrollbar.updateSize()},setTranslate:function(e){e.scrollbar.setTranslate()},setTransition:function(e,t){e.scrollbar.setTransition(t)},destroy:function(e){e.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){w(this,{parallax:t({},U)})},on:{beforeInit:function(e){e.params.parallax.enabled&&(e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},init:function(e){e.params.parallax.enabled&&e.parallax.setTranslate()},setTranslate:function(e){e.params.parallax.enabled&&e.parallax.setTranslate()},setTransition:function(e,t){e.params.parallax.enabled&&e.parallax.setTransition(t)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var n=this;w(n,{zoom:t({enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}},V)});var s=1;Object.defineProperty(n.zoom,"scale",{get:function(){return s},set:function(e){var t,i;s!==e&&(t=n.zoom.gesture.$imageEl?n.zoom.gesture.$imageEl[0]:void 0,i=n.zoom.gesture.$slideEl?n.zoom.gesture.$slideEl[0]:void 0,n.emit("zoomChange",e,t,i)),s=e}})},on:{init:function(e){e.params.zoom.enabled&&e.zoom.enable()},destroy:function(e){e.zoom.disable()},touchStart:function(e,t){e.zoom.enabled&&e.zoom.onTouchStart(t)},touchEnd:function(e,t){e.zoom.enabled&&e.zoom.onTouchEnd(t)},doubleTap:function(e,t){e.params.zoom.enabled&&e.zoom.enabled&&e.params.zoom.toggle&&e.zoom.toggle(t)},transitionEnd:function(e){e.zoom.enabled&&e.params.zoom.enabled&&e.zoom.onTransitionEnd()},slideChange:function(e){e.zoom.enabled&&e.params.zoom.enabled&&e.params.cssMode&&e.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){w(this,{lazy:t({initialImageLoaded:!1},Q)})},on:{beforeInit:function(e){e.params.lazy.enabled&&e.params.preloadImages&&(e.params.preloadImages=!1)},init:function(e){e.params.lazy.enabled&&!e.params.loop&&0===e.params.initialSlide&&e.lazy.load()},scroll:function(e){e.params.freeMode&&!e.params.freeModeSticky&&e.lazy.load()},resize:function(e){e.params.lazy.enabled&&e.lazy.load()},scrollbarDragMove:function(e){e.params.lazy.enabled&&e.lazy.load()},transitionStart:function(e){e.params.lazy.enabled&&(e.params.lazy.loadOnTransitionStart||!e.params.lazy.loadOnTransitionStart&&!e.lazy.initialImageLoaded)&&e.lazy.load()},transitionEnd:function(e){e.params.lazy.enabled&&!e.params.lazy.loadOnTransitionStart&&e.lazy.load()},slideChange:function(e){e.params.lazy.enabled&&e.params.cssMode&&e.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){w(this,{controller:t({control:this.params.controller.control},Z)})},on:{update:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},resize:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},observerUpdate:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},setTranslate:function(e,t,i){e.controller.control&&e.controller.setTranslate(t,i)},setTransition:function(e,t,i){e.controller.control&&e.controller.setTransition(t,i)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}",containerMessage:null,containerRoleDescriptionMessage:null,itemRoleDescriptionMessage:null}},create:function(){w(this,{a11y:t(t({},J),{},{liveRegion:S('<span class="'+this.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')})})},on:{afterInit:function(e){e.params.a11y.enabled&&(e.a11y.init(),e.a11y.updateNavigation())},toEdge:function(e){e.params.a11y.enabled&&e.a11y.updateNavigation()},fromEdge:function(e){e.params.a11y.enabled&&e.a11y.updateNavigation()},paginationUpdate:function(e){e.params.a11y.enabled&&e.a11y.updatePagination()},destroy:function(e){e.params.a11y.enabled&&e.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){w(this,{history:t({},ee)})},on:{init:function(e){e.params.history.enabled&&e.history.init()},destroy:function(e){e.params.history.enabled&&e.history.destroy()},transitionEnd:function(e){e.history.initialized&&e.history.setHistory(e.params.history.key,e.activeIndex)},slideChange:function(e){e.history.initialized&&e.params.cssMode&&e.history.setHistory(e.params.history.key,e.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){w(this,{hashNavigation:t({initialized:!1},te)})},on:{init:function(e){e.params.hashNavigation.enabled&&e.hashNavigation.init()},destroy:function(e){e.params.hashNavigation.enabled&&e.hashNavigation.destroy()},transitionEnd:function(e){e.hashNavigation.initialized&&e.hashNavigation.setHash()},slideChange:function(e){e.hashNavigation.initialized&&e.params.cssMode&&e.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){w(this,{autoplay:t(t({},ie),{},{running:!1,paused:!1})})},on:{init:function(e){e.params.autoplay.enabled&&(e.autoplay.start(),v().addEventListener("visibilitychange",e.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t,i){e.autoplay.running&&(i||!e.params.autoplay.disableOnInteraction?e.autoplay.pause(t):e.autoplay.stop())},sliderFirstMove:function(e){e.autoplay.running&&(e.params.autoplay.disableOnInteraction?e.autoplay.stop():e.autoplay.pause())},touchEnd:function(e){e.params.cssMode&&e.autoplay.paused&&!e.params.autoplay.disableOnInteraction&&e.autoplay.run()},destroy:function(e){e.autoplay.running&&e.autoplay.stop(),v().removeEventListener("visibilitychange",e.autoplay.onVisibilityChange)}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){w(this,{fadeEffect:t({},ne)})},on:{beforeInit:function(e){var t;"fade"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"fade"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},K(e.params,t),K(e.originalParams,t))},setTranslate:function(e){"fade"===e.params.effect&&e.fadeEffect.setTranslate()},setTransition:function(e,t){"fade"===e.params.effect&&e.fadeEffect.setTransition(t)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){w(this,{cubeEffect:t({},se)})},on:{beforeInit:function(e){var t;"cube"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"cube"),e.classNames.push(e.params.containerModifierClass+"3d"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0},K(e.params,t),K(e.originalParams,t))},setTranslate:function(e){"cube"===e.params.effect&&e.cubeEffect.setTranslate()},setTransition:function(e,t){"cube"===e.params.effect&&e.cubeEffect.setTransition(t)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){w(this,{flipEffect:t({},ae)})},on:{beforeInit:function(e){var t;"flip"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"flip"),e.classNames.push(e.params.containerModifierClass+"3d"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},K(e.params,t),K(e.originalParams,t))},setTranslate:function(e){"flip"===e.params.effect&&e.flipEffect.setTranslate()},setTransition:function(e,t){"flip"===e.params.effect&&e.flipEffect.setTransition(t)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,scale:1,modifier:1,slideShadows:!0}},create:function(){w(this,{coverflowEffect:t({},re)})},on:{beforeInit:function(e){"coverflow"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"coverflow"),e.classNames.push(e.params.containerModifierClass+"3d"),e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},setTranslate:function(e){"coverflow"===e.params.effect&&e.coverflowEffect.setTranslate()},setTransition:function(e,t){"coverflow"===e.params.effect&&e.coverflowEffect.setTransition(t)}}},{name:"thumbs",params:{thumbs:{swiper:null,multipleActiveThumbs:!0,autoScrollOffset:0,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){w(this,{thumbs:t({swiper:null,initialized:!1},oe)})},on:{beforeInit:function(e){var t=e.params.thumbs;t&&t.swiper&&(e.thumbs.init(),e.thumbs.update(!0))},slideChange:function(e){e.thumbs.swiper&&e.thumbs.update()},update:function(e){e.thumbs.swiper&&e.thumbs.update()},resize:function(e){e.thumbs.swiper&&e.thumbs.update()},observerUpdate:function(e){e.thumbs.swiper&&e.thumbs.update()},setTransition:function(e,t){e=e.thumbs.swiper;e&&e.setTransition(t)},beforeDestroy:function(e){var t=e.thumbs.swiper;t&&e.thumbs.swiperCreated&&t&&t.destroy()}}}];return H.use(O),H}),function(){function t(e,t){return function(){return e.apply(t,arguments)}}var n,e,i,l,s,r=[].indexOf||function(e){for(var t=0,i=this.length;t<i;t++)if(t in this&&this[t]===e)return t;return-1};function a(){}function o(){this.keys=[],this.values=[]}function c(){"undefined"!=typeof console&&null!==console&&console.warn("MutationObserver is not supported by your browser."),"undefined"!=typeof console&&null!==console&&console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content.")}function u(e){null==e&&(e={}),this.scrollCallback=t(this.scrollCallback,this),this.scrollHandler=t(this.scrollHandler,this),this.resetAnimation=t(this.resetAnimation,this),this.start=t(this.start,this),this.scrolled=!0,this.config=this.util().extend(e,this.defaults),null!=e.scrollContainer&&(this.config.scrollContainer=document.querySelector(e.scrollContainer)),this.animationNameCache=new i,this.wowEvent=this.util().createEvent(this.config.boxClass)}a.prototype.extend=function(e,t){var i,n;for(i in t)n=t[i],null==e[i]&&(e[i]=n);return e},a.prototype.isMobile=function(e){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(e)},a.prototype.createEvent=function(e,t,i,n){var s;return null==t&&(t=!1),null==i&&(i=!1),null==n&&(n=null),null!=document.createEvent?(s=document.createEvent("CustomEvent")).initCustomEvent(e,t,i,n):null!=document.createEventObject?(s=document.createEventObject()).eventType=e:s.eventName=e,s},a.prototype.emitEvent=function(e,t){return null!=e.dispatchEvent?e.dispatchEvent(t):t in(null!=e)?e[t]():"on"+t in(null!=e)?e["on"+t]():void 0},a.prototype.addEvent=function(e,t,i){return null!=e.addEventListener?e.addEventListener(t,i,!1):null!=e.attachEvent?e.attachEvent("on"+t,i):e[t]=i},a.prototype.removeEvent=function(e,t,i){return null!=e.removeEventListener?e.removeEventListener(t,i,!1):null!=e.detachEvent?e.detachEvent("on"+t,i):delete e[t]},a.prototype.innerHeight=function(){return"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight},e=a,i=this.WeakMap||this.MozWeakMap||(o.prototype.get=function(e){for(var t,i=this.keys,n=t=0,s=i.length;t<s;n=++t)if(i[n]===e)return this.values[n]},o.prototype.set=function(e,t){for(var i,n=this.keys,s=i=0,a=n.length;i<a;s=++i)if(n[s]===e)return void(this.values[s]=t);return this.keys.push(e),this.values.push(t)},o),n=this.MutationObserver||this.WebkitMutationObserver||this.MozMutationObserver||(c.notSupported=!0,c.prototype.observe=function(){},c),l=this.getComputedStyle||function(i,e){return this.getPropertyValue=function(e){var t;return"float"===e&&(e="styleFloat"),s.test(e)&&e.replace(s,function(e,t){return t.toUpperCase()}),(null!=(t=i.currentStyle)?t[e]:void 0)||null},this},s=/(\-([a-z]){1})/g,this.WOW=(u.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null},u.prototype.init=function(){var e;return this.element=window.document.documentElement,"interactive"===(e=document.readyState)||"complete"===e?this.start():this.util().addEvent(document,"DOMContentLoaded",this.start),this.finished=[]},u.prototype.start=function(){var s,e,t,i,r;if(this.stopped=!1,this.boxes=function(){for(var e=this.element.querySelectorAll("."+this.config.boxClass),t=[],i=0,n=e.length;i<n;i++)s=e[i],t.push(s);return t}.call(this),this.all=function(){for(var e=this.boxes,t=[],i=0,n=e.length;i<n;i++)s=e[i],t.push(s);return t}.call(this),this.boxes.length)if(this.disabled())this.resetStyle();else for(e=0,t=(i=this.boxes).length;e<t;e++)s=i[e],this.applyStyle(s,!0);if(this.disabled()||(this.util().addEvent(this.config.scrollContainer||window,"scroll",this.scrollHandler),this.util().addEvent(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live)return new n((r=this,function(e){for(var s,a,t=[],i=0,n=e.length;i<n;i++)a=e[i],t.push(function(){for(var e=a.addedNodes||[],t=[],i=0,n=e.length;i<n;i++)s=e[i],t.push(this.doSync(s));return t}.call(r));return t})).observe(document.body,{childList:!0,subtree:!0})},u.prototype.stop=function(){if(this.stopped=!0,this.util().removeEvent(this.config.scrollContainer||window,"scroll",this.scrollHandler),this.util().removeEvent(window,"resize",this.scrollHandler),null!=this.interval)return clearInterval(this.interval)},u.prototype.sync=function(e){if(n.notSupported)return this.doSync(this.element)},u.prototype.doSync=function(e){var t,i,n,s,a;if(null==e&&(e=this.element),1===e.nodeType){for(a=[],i=0,n=(s=(e=e.parentNode||e).querySelectorAll("."+this.config.boxClass)).length;i<n;i++)t=s[i],r.call(this.all,t)<0?(this.boxes.push(t),this.all.push(t),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(t,!0),a.push(this.scrolled=!0)):a.push(void 0);return a}},u.prototype.show=function(e){return this.applyStyle(e),e.className=e.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(e),this.util().emitEvent(e,this.wowEvent),this.util().addEvent(e,"animationend",this.resetAnimation),this.util().addEvent(e,"oanimationend",this.resetAnimation),this.util().addEvent(e,"webkitAnimationEnd",this.resetAnimation),this.util().addEvent(e,"MSAnimationEnd",this.resetAnimation),e},u.prototype.applyStyle=function(e,t){var i,n=e.getAttribute("data-wow-duration"),s=e.getAttribute("data-wow-delay"),a=e.getAttribute("data-wow-iteration");return this.animate((i=this,function(){return i.customStyle(e,t,n,s,a)}))},u.prototype.animate="requestAnimationFrame"in window?function(e){return window.requestAnimationFrame(e)}:function(e){return e()},u.prototype.resetStyle=function(){for(var e,t=this.boxes,i=[],n=0,s=t.length;n<s;n++)e=t[n],i.push(e.style.visibility="visible");return i},u.prototype.resetAnimation=function(e){if(0<=e.type.toLowerCase().indexOf("animationend"))return(e=e.target||e.srcElement).className=e.className.replace(this.config.animateClass,"").trim()},u.prototype.customStyle=function(e,t,i,n,s){return t&&this.cacheAnimationName(e),e.style.visibility=t?"hidden":"visible",i&&this.vendorSet(e.style,{animationDuration:i}),n&&this.vendorSet(e.style,{animationDelay:n}),s&&this.vendorSet(e.style,{animationIterationCount:s}),this.vendorSet(e.style,{animationName:t?"none":this.cachedAnimationName(e)}),e},u.prototype.vendors=["moz","webkit"],u.prototype.vendorSet=function(s,e){var a,r,o,t=[];for(a in e)r=e[a],s[""+a]=r,t.push(function(){for(var e=this.vendors,t=[],i=0,n=e.length;i<n;i++)o=e[i],t.push(s[""+o+a.charAt(0).toUpperCase()+a.substr(1)]=r);return t}.call(this));return t},u.prototype.vendorCSS=function(e,t){for(var i,n=l(e),s=n.getPropertyCSSValue(t),a=this.vendors,r=0,o=a.length;r<o;r++)i=a[r],s=s||n.getPropertyCSSValue("-"+i+"-"+t);return s},u.prototype.animationName=function(t){var i;try{i=this.vendorCSS(t,"animation-name").cssText}catch(e){i=l(t).getPropertyValue("animation-name")}return"none"===i?"":i},u.prototype.cacheAnimationName=function(e){return this.animationNameCache.set(e,this.animationName(e))},u.prototype.cachedAnimationName=function(e){return this.animationNameCache.get(e)},u.prototype.scrollHandler=function(){return this.scrolled=!0},u.prototype.scrollCallback=function(){var s;if(this.scrolled&&(this.scrolled=!1,this.boxes=function(){for(var e=this.boxes,t=[],i=0,n=e.length;i<n;i++)(s=e[i])&&(this.isVisible(s)?this.show(s):t.push(s));return t}.call(this),!this.boxes.length&&!this.config.live))return this.stop()},u.prototype.offsetTop=function(e){for(var t;void 0===e.offsetTop;)e=e.parentNode;for(t=e.offsetTop;e=e.offsetParent;)t+=e.offsetTop;return t},u.prototype.isVisible=function(e){var t=e.getAttribute("data-wow-offset")||this.config.offset,i=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset,n=i+Math.min(this.element.clientHeight,this.util().innerHeight())-t,t=this.offsetTop(e),e=t+e.clientHeight;return t<=n&&i<=e},u.prototype.util=function(){return null!=this._util?this._util:this._util=new e},u.prototype.disabled=function(){return!this.config.mobile&&this.util().isMobile(navigator.userAgent)},u)}.call(this),function(h){"use strict";var p=null,f=null;!function(){for(var s,a,r,o,e=["webkit","moz","o","ms"],t=h.document.createElement("div"),i=-1,i=0;i<e.length&&!h.requestAnimationFrame;i++)h.requestAnimationFrame=h[e[i]+"RequestAnimationFrame"];function n(){}void 0===t.nextElementSibling&&Object.defineProperty(h.Element.prototype,"nextElementSibling",{get:function(){for(var e=this.nextSibling;e;){if(1===e.nodeType)return e;e=e.nextSibling}return null}}),(t=h.Element.prototype).matches=t.matches||t.machesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector||function(e){return-1<Array.prototype.indexOf.call(this.parentElement.querySelectorAll(e),this)},Object.keys||(Object.keys=(s=Object.prototype.hasOwnProperty,a=[],r=!{toString:null}.propertyIsEnumerable("toString"),o=(a=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"]).length,function(e){var t=[],i="",n=-1;if("object"!=typeof e&&("function"!=typeof e||null===e))throw new TypeError("Object.keys called on non-object");for(i in e)s.call(e,i)&&t.push(i);if(r)for(n=0;n<o;n++)s.call(e,a[n])&&t.push(a[n]);return t})),Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),"function"!=typeof Object.create&&(Object.create=function(e,t){if(e!==Object(e)&&null!==e)throw TypeError("Argument must be an object, or null");n.prototype=e||{};var i=new n;return n.prototype=null,void 0!==t&&Object.defineProperties(i,t),null===e&&(i.__proto__=null),i}),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){var t,i,n,s;if(null===this)throw new TypeError;if(0==(s=(n=Object(this)).length>>>0))return-1;if(t=0,1<arguments.length&&((t=Number(arguments[1]))!=t?t=0:0!==t&&t!==1/0&&t!==-1/0&&(t=(0<t||-1)*Math.floor(Math.abs(t)))),s<=t)return-1;for(i=0<=t?t:Math.max(s-Math.abs(t),0);i<s;i++)if(i in n&&n[i]===e)return i;return-1}),Function.prototype.bind||(Function.prototype.bind=function(e){var t,i,n,s;if("function"!=typeof this)throw new TypeError;return t=Array.prototype.slice.call(arguments,1),n=function(){},s=function(){return i.apply(this instanceof n?this:e,t.concat(Array.prototype.slice.call(arguments)))},(i=this).prototype&&(n.prototype=this.prototype),s.prototype=new n,s}),h.Element.prototype.dispatchEvent||(h.Element.prototype.dispatchEvent=function(e){try{return this.fireEvent("on"+e.type,e)}catch(e){}})}(),(p=function(e,t,i){var n,s=null,a=!1,r=null,o=null,l=[],c="",u=[],d=-1,o=i||h.document;if((a=arguments[3])&&(a="boolean"==typeof a),"string"==typeof e)u=o.querySelectorAll(e);else if(e&&"object"==typeof e&&f.isElement(e,o))u=[e];else{if(!e||"object"!=typeof e||!e.length)throw new Error(p.messages.errorFactoryInvalidContainer());u=e}if(u.length<1)throw new Error(p.messages.errorFactoryContainerNotFound());for(d=0;(s=u[d])&&(!(0<d)||a);d++)s.id?c=s.id:(c="MixItUp"+f.randomHex(),s.id=c),p.instances[c]instanceof p.Mixer?(r=p.instances[c],(!t||t&&t.debug&&!1!==t.debug.showWarnings)&&console.warn(p.messages.warningFactoryPreexistingInstance())):((r=new p.Mixer).attach(s,o,c,t),p.instances[c]=r),n=new p.Facade(r),t&&t.debug&&t.debug.enable?l.push(r):l.push(n);return a?new p.Collection(l):l[0]}).use=function(e){p.Base.prototype.callActions.call(p,"beforeUse",arguments),"function"==typeof e&&"mixitup-extension"===e.TYPE?void 0===p.extensions[e.NAME]&&(e(p),p.extensions[e.NAME]=e):e.fn&&e.fn.jquery&&(p.libraries.$=e),p.Base.prototype.callActions.call(p,"afterUse",arguments)},p.instances={},p.extensions={},p.libraries={},f={hasClass:function(e,t){return!!e.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)"))},addClass:function(e,t){this.hasClass(e,t)||(e.className+=e.className?" "+t:t)},removeClass:function(e,t){this.hasClass(e,t)&&(t=new RegExp("(\\s|^)"+t+"(\\s|$)"),e.className=e.className.replace(t," ").trim())},extend:function(t,e,i,n){var s,a=[],r=-1;i=i||!1,n=n||!1;try{if(Array.isArray(e))for(r=0;r<e.length;r++)a.push(r);else e&&(a=Object.keys(e));for(r=0;r<a.length;r++)s=a[r],!i||"object"!=typeof e[s]||this.isElement(e[s])?t[s]=e[s]:(Array.isArray(e[s])?t[s]||(t[s]=[]):t[s]||(t[s]={}),this.extend(t[s],e[s],i,n))}catch(e){if(!n)throw e;this.handleExtendError(e,t)}return t},handleExtendError:function(e,t){var i,n=null,s="",a="",r="",o="",l=-1,c=-1;if(e instanceof TypeError&&(n=/property "?(\w*)"?[,:] object/i.exec(e.message))){for(o in s=n[1],t){for(c=0;c<s.length&&s.charAt(c)===o.charAt(c);)c++;l<c&&(l=c,r=o)}throw 1<l&&(a=p.messages.errorConfigInvalidPropertySuggestion({probableMatch:r})),i=p.messages.errorConfigInvalidProperty({erroneous:s,suggestion:a}),new TypeError(i)}throw e},template:function(n){for(var e,t=/\${([\w]*)}/g,s={};e=t.exec(n);)s[e[1]]=new RegExp("\\${"+e[1]+"}","g");return function(e){var t="",i=n;for(t in e=e||{},s)i=i.replace(s[t],void 0!==e[t]?e[t]:"");return i}},on:function(e,t,i,n){e&&(e.addEventListener?e.addEventListener(t,i,n):e.attachEvent&&(e["e"+t+i]=i,e[t+i]=function(){e["e"+t+i](h.event)},e.attachEvent("on"+t,e[t+i])))},off:function(e,t,i){e&&(e.removeEventListener?e.removeEventListener(t,i,!1):e.detachEvent&&(e.detachEvent("on"+t,e[t+i]),e[t+i]=null))},getCustomEvent:function(e,t,i){var n=null;return i=i||h.document,"function"==typeof h.CustomEvent?n=new h.CustomEvent(e,{detail:t,bubbles:!0,cancelable:!0}):"function"==typeof i.createEvent?(n=i.createEvent("CustomEvent")).initCustomEvent(e,!0,!0,t):((n=i.createEventObject()).type=e,n.returnValue=!1,n.cancelBubble=!1,n.detail=t),n},getOriginalEvent:function(e){return e.touches&&e.touches.length?e.touches[0]:e.changedTouches&&e.changedTouches.length?e.changedTouches[0]:e},index:function(e,t){for(var i=0;null!==(e=e.previousElementSibling);)t&&!e.matches(t)||++i;return i},camelCase:function(e){return e.toLowerCase().replace(/([_-][a-z])/g,function(e){return e.toUpperCase().replace(/[_-]/,"")})},pascalCase:function(e){return(e=this.camelCase(e)).charAt(0).toUpperCase()+e.slice(1)},dashCase:function(e){return e.replace(/([A-Z])/g,"-$1").replace(/^-/,"").toLowerCase()},isElement:function(e,t){return t=t||h.document,!!(h.HTMLElement&&e instanceof h.HTMLElement)||!!(t.defaultView&&t.defaultView.HTMLElement&&e instanceof t.defaultView.HTMLElement)||null!==e&&1===e.nodeType&&"string"==typeof e.nodeName},createElement:function(e,t){var i=null,n=null,i=(t=t||h.document).createDocumentFragment();for((n=t.createElement("div")).innerHTML=e.trim();n.firstChild;)i.appendChild(n.firstChild);return i},removeWhitespace:function(e){for(var t;e&&"#text"===e.nodeName;)e=(t=e).previousSibling,t.parentElement&&t.parentElement.removeChild(t)},isEqualArray:function(e,t){var i=e.length;if(i!==t.length)return!1;for(;i--;)if(e[i]!==t[i])return!1;return!0},deepEquals:function(e,t){if("object"==typeof e&&e&&"object"==typeof t&&t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(var i in e)if(!t.hasOwnProperty(i)||!this.deepEquals(e[i],t[i]))return!1}else if(e!==t)return!1;return!0},arrayShuffle:function(e){for(var t,i,n=e.slice(),s=n.length,a=s;a--;)t=~~(Math.random()*s),i=n[a],n[a]=n[t],n[t]=i;return n},arrayFromList:function(t){var i,n;try{return Array.prototype.slice.call(t)}catch(e){for(i=[],n=0;n<t.length;n++)i.push(t[n]);return i}},debounce:function(s,a,r){var o;return function(){var e=this,t=arguments,i=r&&!o,n=function(){o=null,r||s.apply(e,t)};clearTimeout(o),o=setTimeout(n,a),i&&s.apply(e,t)}},position:function(e){for(var t=0,i=0,n=e;e;)t-=e.scrollLeft,i-=e.scrollTop,e===n&&(t+=e.offsetLeft,i+=e.offsetTop,n=e.offsetParent),e=e.parentElement;return{x:t,y:i}},getHypotenuse:function(e,t){var i=(i=e.x-t.x)<0?-1*i:i,t=(t=e.y-t.y)<0?-1*t:t;return Math.sqrt(Math.pow(i,2)+Math.pow(t,2))},getIntersectionRatio:function(e,t){var i=e.width*e.height,n=Math.max(0,Math.min(e.left+e.width,t.left+t.width)-Math.max(e.left,t.left));return Math.max(0,Math.min(e.top+e.height,t.top+t.height)-Math.max(e.top,t.top))*n/i},closestParent:function(e,t,i,n){var s=e.parentNode;if(n=n||h.document,i&&e.matches(t))return e;for(;s&&s!=n.body;){if(s.matches&&s.matches(t))return s;if(!s.parentNode)return null;s=s.parentNode}return null},children:function(e,t,i){var n=[],s="";return i=i||h.doc,e&&(e.id||(s="Temp"+this.randomHexKey(),e.id=s),n=i.querySelectorAll("#"+e.id+" > "+t),s&&e.removeAttribute("id")),n},clean:function(e){for(var t=[],i=-1,i=0;i<e.length;i++)""!==e[i]&&t.push(e[i]);return t},defer:function(e){var t=null,i=null,n=null,i=new this.Deferred;return p.features.has.promises?i.promise=new Promise(function(e,t){i.resolve=e,i.reject=t}):(n=h.jQuery||e.$)&&"function"==typeof n.Deferred?(t=n.Deferred(),i.promise=t.promise(),i.resolve=t.resolve,i.reject=t.reject):h.console&&console.warn(p.messages.warningNoPromiseImplementation()),i},all:function(e,t){var i=null;return p.features.has.promises?Promise.all(e):(i=h.jQuery||t.$)&&"function"==typeof i.when?i.when.apply(i,e).done(function(){return arguments}):(h.console&&console.warn(p.messages.warningNoPromiseImplementation()),[])},getPrefix:function(e,t,i){var n=-1,s="";if(f.dashCase(t)in e.style)return"";for(n=0;s=i[n];n++)if(s+t in e.style)return s.toLowerCase();return"unsupported"},randomHex:function(){return("00000"+(16777216*Math.random()<<0).toString(16)).substr(-6).toUpperCase()},getDocumentState:function(e){return e="object"==typeof e.body?e:h.document,{scrollTop:h.pageYOffset,scrollLeft:h.pageXOffset,docHeight:e.documentElement.scrollHeight,docWidth:e.documentElement.scrollWidth,viewportHeight:e.documentElement.clientHeight,viewportWidth:e.documentElement.clientWidth}},bind:function(e,t){return function(){return t.apply(e,arguments)}},isVisible:function(e){var t;return!!e.offsetParent||"fixed"===(t=h.getComputedStyle(e)).position&&"hidden"!==t.visibility&&"0"!==t.opacity},seal:function(e){"function"==typeof Object.seal&&Object.seal(e)},freeze:function(e){"function"==typeof Object.freeze&&Object.freeze(e)},compareVersions:function(e,t){for(var i,n,s=e.split("."),a=t.split("."),r=-1,r=0;r<s.length;r++){if(i=parseInt(s[r].replace(/[^\d.]/g,"")),(n=parseInt(a[r].replace(/[^\d.]/g,"")||0))<i)return!1;if(i<n)return!0}return!0},Deferred:function(){this.promise=null,this.resolve=null,this.reject=null,this.id=f.randomHex()},isEmptyObject:function(e){var t="";if("function"==typeof Object.keys)return 0===Object.keys(e).length;for(t in e)if(e.hasOwnProperty(t))return!1;return!0},getClassname:function(e,t,i){var n="";return(n+=e.block).length&&(n+=e.delineatorElement),n+=e["element"+this.pascalCase(t)],i?(n.length&&(n+=e.delineatorModifier),n+=i):n},getProperty:function(e,t){var i,n=t.split("."),s="",a=0;if(!t)return e;for(i=function(e){return e?e[s]:null};a<n.length;)s=n[a],e=i(e),a++;return void 0!==e?e:null}},p.h=f,p.Base=function(){},p.Base.prototype={constructor:p.Base,callActions:function(e,t){var i=this.constructor.actions[e],n="";if(i&&!f.isEmptyObject(i))for(n in i)i[n].apply(this,t)},callFilters:function(e,t,i){var n=this.constructor.filters[e],s=t,a="";if(!n||f.isEmptyObject(n))return s;for(a in i=i||[],n)i=f.arrayFromList(i),i.unshift(s),s=n[a].apply(this,i);return s}},p.BaseStatic=function(){this.actions={},this.filters={},this.extend=function(e){f.extend(this.prototype,e)},this.registerAction=function(e,t,i){(this.actions[e]=this.actions[e]||{})[t]=i},this.registerFilter=function(e,t,i){(this.filters[e]=this.filters[e]||{})[t]=i}},p.Features=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.boxSizingPrefix="",this.transformPrefix="",this.transitionPrefix="",this.boxSizingPrefix="",this.transformProp="",this.transformRule="",this.transitionProp="",this.perspectiveProp="",this.perspectiveOriginProp="",this.has=new p.Has,this.canary=null,this.BOX_SIZING_PROP="boxSizing",this.TRANSITION_PROP="transition",this.TRANSFORM_PROP="transform",this.PERSPECTIVE_PROP="perspective",this.PERSPECTIVE_ORIGIN_PROP="perspectiveOrigin",this.VENDORS=["Webkit","moz","O","ms"],this.TWEENABLE=["opacity","width","height","marginRight","marginBottom","x","y","scale","translateX","translateY","translateZ","rotateX","rotateY","rotateZ"],this.callActions("afterConstruct")},p.BaseStatic.call(p.Features),p.Features.prototype=Object.create(p.Base.prototype),f.extend(p.Features.prototype,{constructor:p.Features,init:function(){this.callActions("beforeInit",arguments),this.canary=document.createElement("div"),this.setPrefixes(),this.runTests(),this.callActions("beforeInit",arguments)},runTests:function(){this.callActions("beforeRunTests",arguments),this.has.promises="function"==typeof h.Promise,this.has.transitions="unsupported"!==this.transitionPrefix,this.callActions("afterRunTests",arguments),f.freeze(this.has)},setPrefixes:function(){var e=this;e.callActions("beforeSetPrefixes",arguments),e.transitionPrefix=f.getPrefix(e.canary,"Transition",e.VENDORS),e.transformPrefix=f.getPrefix(e.canary,"Transform",e.VENDORS),e.boxSizingPrefix=f.getPrefix(e.canary,"BoxSizing",e.VENDORS),e.boxSizingProp=e.boxSizingPrefix?e.boxSizingPrefix+f.pascalCase(e.BOX_SIZING_PROP):e.BOX_SIZING_PROP,e.transitionProp=e.transitionPrefix?e.transitionPrefix+f.pascalCase(e.TRANSITION_PROP):e.TRANSITION_PROP,e.transformProp=e.transformPrefix?e.transformPrefix+f.pascalCase(e.TRANSFORM_PROP):e.TRANSFORM_PROP,e.transformRule=e.transformPrefix?"-"+e.transformPrefix+"-"+e.TRANSFORM_PROP:e.TRANSFORM_PROP,e.perspectiveProp=e.transformPrefix?e.transformPrefix+f.pascalCase(e.PERSPECTIVE_PROP):e.PERSPECTIVE_PROP,e.perspectiveOriginProp=e.transformPrefix?e.transformPrefix+f.pascalCase(e.PERSPECTIVE_ORIGIN_PROP):e.PERSPECTIVE_ORIGIN_PROP,e.callActions("afterSetPrefixes",arguments)}}),p.Has=function(){this.transitions=!1,this.promises=!1,f.seal(this)},p.features=new p.Features,p.features.init(),p.ConfigAnimation=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.enable=!0,this.effects="fade scale",this.effectsIn="",this.effectsOut="",this.duration=600,this.easing="ease",this.applyPerspective=!0,this.perspectiveDistance="3000px",this.perspectiveOrigin="50% 50%",this.queue=!0,this.queueLimit=3,this.animateResizeContainer=!0,this.animateResizeTargets=!1,this.staggerSequence=null,this.reverseOut=!1,this.nudge=!0,this.clampHeight=!0,this.clampWidth=!0,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigAnimation),p.ConfigAnimation.prototype=Object.create(p.Base.prototype),p.ConfigAnimation.prototype.constructor=p.ConfigAnimation,p.ConfigBehavior=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.liveSort=!1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigBehavior),p.ConfigBehavior.prototype=Object.create(p.Base.prototype),p.ConfigBehavior.prototype.constructor=p.ConfigBehavior,p.ConfigCallbacks=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.onMixStart=null,this.onMixBusy=null,this.onMixEnd=null,this.onMixFail=null,this.onMixClick=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigCallbacks),p.ConfigCallbacks.prototype=Object.create(p.Base.prototype),p.ConfigCallbacks.prototype.constructor=p.ConfigCallbacks,p.ConfigControls=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.enable=!0,this.live=!1,this.scope="global",this.toggleLogic="or",this.toggleDefault="all",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigControls),p.ConfigControls.prototype=Object.create(p.Base.prototype),p.ConfigControls.prototype.constructor=p.ConfigControls,p.ConfigClassNames=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.block="mixitup",this.elementContainer="container",this.elementFilter="control",this.elementSort="control",this.elementMultimix="control",this.elementToggle="control",this.modifierActive="active",this.modifierDisabled="disabled",this.modifierFailed="failed",this.delineatorElement="-",this.delineatorModifier="-",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigClassNames),p.ConfigClassNames.prototype=Object.create(p.Base.prototype),p.ConfigClassNames.prototype.constructor=p.ConfigClassNames,p.ConfigData=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.uidKey="",this.dirtyCheck=!1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigData),p.ConfigData.prototype=Object.create(p.Base.prototype),p.ConfigData.prototype.constructor=p.ConfigData,p.ConfigDebug=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.enable=!1,this.showWarnings=!0,this.fauxAsync=!1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigDebug),p.ConfigDebug.prototype=Object.create(p.Base.prototype),p.ConfigDebug.prototype.constructor=p.ConfigDebug,p.ConfigLayout=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.allowNestedTargets=!0,this.containerClassName="",this.siblingBefore=null,this.siblingAfter=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigLayout),p.ConfigLayout.prototype=Object.create(p.Base.prototype),p.ConfigLayout.prototype.constructor=p.ConfigLayout,p.ConfigLoad=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.filter="all",this.sort="default:asc",this.dataset=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigLoad),p.ConfigLoad.prototype=Object.create(p.Base.prototype),p.ConfigLoad.prototype.constructor=p.ConfigLoad,p.ConfigSelectors=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.target=".mix",this.control="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigSelectors),p.ConfigSelectors.prototype=Object.create(p.Base.prototype),p.ConfigSelectors.prototype.constructor=p.ConfigSelectors,p.ConfigRender=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.target=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigRender),p.ConfigRender.prototype=Object.create(p.Base.prototype),p.ConfigRender.prototype.constructor=p.ConfigRender,p.ConfigTemplates=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.ConfigTemplates),p.ConfigTemplates.prototype=Object.create(p.Base.prototype),p.ConfigTemplates.prototype.constructor=p.ConfigTemplates,p.Config=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.animation=new p.ConfigAnimation,this.behavior=new p.ConfigBehavior,this.callbacks=new p.ConfigCallbacks,this.controls=new p.ConfigControls,this.classNames=new p.ConfigClassNames,this.data=new p.ConfigData,this.debug=new p.ConfigDebug,this.layout=new p.ConfigLayout,this.load=new p.ConfigLoad,this.selectors=new p.ConfigSelectors,this.render=new p.ConfigRender,this.templates=new p.ConfigTemplates,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Config),p.Config.prototype=Object.create(p.Base.prototype),p.Config.prototype.constructor=p.Config,p.MixerDom=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.document=null,this.body=null,this.container=null,this.parent=null,this.targets=[],this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.MixerDom),p.MixerDom.prototype=Object.create(p.Base.prototype),p.MixerDom.prototype.constructor=p.MixerDom,p.UiClassNames=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.base="",this.active="",this.disabled="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.UiClassNames),p.UiClassNames.prototype=Object.create(p.Base.prototype),p.UiClassNames.prototype.constructor=p.UiClassNames,p.CommandDataset=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.dataset=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandDataset),p.CommandDataset.prototype=Object.create(p.Base.prototype),p.CommandDataset.prototype.constructor=p.CommandDataset,p.CommandMultimix=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.filter=null,this.sort=null,this.insert=null,this.remove=null,this.changeLayout=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandMultimix),p.CommandMultimix.prototype=Object.create(p.Base.prototype),p.CommandMultimix.prototype.constructor=p.CommandMultimix,p.CommandFilter=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.selector="",this.collection=null,this.action="show",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandFilter),p.CommandFilter.prototype=Object.create(p.Base.prototype),p.CommandFilter.prototype.constructor=p.CommandFilter,p.CommandSort=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.sortString="",this.attribute="",this.order="asc",this.collection=null,this.next=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandSort),p.CommandSort.prototype=Object.create(p.Base.prototype),p.CommandSort.prototype.constructor=p.CommandSort,p.CommandInsert=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.index=0,this.collection=[],this.position="before",this.sibling=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandInsert),p.CommandInsert.prototype=Object.create(p.Base.prototype),p.CommandInsert.prototype.constructor=p.CommandInsert,p.CommandRemove=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.targets=[],this.collection=[],this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandRemove),p.CommandRemove.prototype=Object.create(p.Base.prototype),p.CommandRemove.prototype.constructor=p.CommandRemove,p.CommandChangeLayout=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.containerClassName="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.CommandChangeLayout),p.CommandChangeLayout.prototype=Object.create(p.Base.prototype),p.CommandChangeLayout.prototype.constructor=p.CommandChangeLayout,p.ControlDefinition=function(e,t,i,n){p.Base.call(this),this.callActions("beforeConstruct"),this.type=e,this.selector=t,this.live=i||!1,this.parent=n||"",this.callActions("afterConstruct"),f.freeze(this),f.seal(this)},p.BaseStatic.call(p.ControlDefinition),p.ControlDefinition.prototype=Object.create(p.Base.prototype),p.ControlDefinition.prototype.constructor=p.ControlDefinition,p.controlDefinitions=[],p.controlDefinitions.push(new p.ControlDefinition("multimix","[data-filter][data-sort]")),p.controlDefinitions.push(new p.ControlDefinition("filter","[data-filter]")),p.controlDefinitions.push(new p.ControlDefinition("sort","[data-sort]")),p.controlDefinitions.push(new p.ControlDefinition("toggle","[data-toggle]")),p.Control=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.el=null,this.selector="",this.bound=[],this.pending=-1,this.type="",this.status="inactive",this.filter="",this.sort="",this.canDisable=!1,this.handler=null,this.classNames=new p.UiClassNames,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Control),p.Control.prototype=Object.create(p.Base.prototype),f.extend(p.Control.prototype,{constructor:p.Control,init:function(e,t,i){var n=this;if(this.callActions("beforeInit",arguments),n.el=e,n.type=t,n.selector=i,n.selector)n.status="live";else switch(n.canDisable="boolean"==typeof n.el.disable,n.type){case"filter":n.filter=n.el.getAttribute("data-filter");break;case"toggle":n.filter=n.el.getAttribute("data-toggle");break;case"sort":n.sort=n.el.getAttribute("data-sort");break;case"multimix":n.filter=n.el.getAttribute("data-filter"),n.sort=n.el.getAttribute("data-sort")}n.bindClick(),p.controls.push(n),this.callActions("afterInit",arguments)},isBound:function(e){var t;return this.callActions("beforeIsBound",arguments),t=-1<this.bound.indexOf(e),this.callFilters("afterIsBound",t,arguments)},addBinding:function(e){this.callActions("beforeAddBinding",arguments),this.isBound()||this.bound.push(e),this.callActions("afterAddBinding",arguments)},removeBinding:function(e){var t=-1;this.callActions("beforeRemoveBinding",arguments),-1<(t=this.bound.indexOf(e))&&this.bound.splice(t,1),this.bound.length<1&&(this.unbindClick(),t=p.controls.indexOf(this),p.controls.splice(t,1),"active"===this.status&&this.renderStatus(this.el,"inactive")),this.callActions("afterRemoveBinding",arguments)},bindClick:function(){var t=this;this.callActions("beforeBindClick",arguments),t.handler=function(e){t.handleClick(e)},f.on(t.el,"click",t.handler),this.callActions("afterBindClick",arguments)},unbindClick:function(){this.callActions("beforeUnbindClick",arguments),f.off(this.el,"click",this.handler),this.handler=null,this.callActions("afterUnbindClick",arguments)},handleClick:function(e){var t,i=this,n=null,s=null,a=!1,r={},o=[],l=-1;if(this.callActions("beforeHandleClick",arguments),this.pending=0,s=i.bound[0],n=i.selector?f.closestParent(e.target,s.config.selectors.control+i.selector,!0,s.dom.document):i.el){switch(i.type){case"filter":r.filter=i.filter||n.getAttribute("data-filter");break;case"sort":r.sort=i.sort||n.getAttribute("data-sort");break;case"multimix":r.filter=i.filter||n.getAttribute("data-filter"),r.sort=i.sort||n.getAttribute("data-sort");break;case"toggle":r.filter=i.filter||n.getAttribute("data-toggle"),a="live"===i.status?f.hasClass(n,i.classNames.active):"active"===i.status}for(l=0;l<i.bound.length;l++)t=new p.CommandMultimix,f.extend(t,r),o.push(t);for(o=i.callFilters("commandsHandleClick",o,arguments),i.pending=i.bound.length,l=0;s=i.bound[l];l++)(r=o[l])&&(s.lastClicked||(s.lastClicked=n),p.events.fire("mixClick",s.dom.container,{state:s.state,instance:s,originalEvent:e,control:s.lastClicked},s.dom.document),"function"==typeof s.config.callbacks.onMixClick&&!1===s.config.callbacks.onMixClick.call(s.lastClicked,s.state,e,s)||("toggle"===i.type?a?s.toggleOff(r.filter):s.toggleOn(r.filter):s.multimix(r)));this.callActions("afterHandleClick",arguments)}else i.callActions("afterHandleClick",arguments)},update:function(e,t){var i=this,n=new p.CommandMultimix;i.callActions("beforeUpdate",arguments),i.pending--,i.pending=Math.max(0,i.pending),0<i.pending||("live"===i.status?i.updateLive(e,t):(n.sort=i.sort,n.filter=i.filter,i.callFilters("actionsUpdate",n,arguments),i.parseStatusChange(i.el,e,n,t)),i.callActions("afterUpdate",arguments))},updateLive:function(e,t){var i,n=null,s=null,a=-1;if(this.callActions("beforeUpdateLive",arguments),this.el){for(i=this.el.querySelectorAll(this.selector),a=0;s=i[a];a++){switch(n=new p.CommandMultimix,this.type){case"filter":n.filter=s.getAttribute("data-filter");break;case"sort":n.sort=s.getAttribute("data-sort");break;case"multimix":n.filter=s.getAttribute("data-filter"),n.sort=s.getAttribute("data-sort");break;case"toggle":n.filter=s.getAttribute("data-toggle")}n=this.callFilters("actionsUpdateLive",n,arguments),this.parseStatusChange(s,e,n,t)}this.callActions("afterUpdateLive",arguments)}},parseStatusChange:function(e,t,i,n){var s=this,a="",r=-1;switch(s.callActions("beforeParseStatusChange",arguments),s.type){case"filter":t.filter===i.filter?s.renderStatus(e,"active"):s.renderStatus(e,"inactive");break;case"multimix":t.sort===i.sort&&t.filter===i.filter?s.renderStatus(e,"active"):s.renderStatus(e,"inactive");break;case"sort":t.sort.match(/:asc/g)&&(a=t.sort.replace(/:asc/g,"")),t.sort===i.sort||a===i.sort?s.renderStatus(e,"active"):s.renderStatus(e,"inactive");break;case"toggle":for(n.length<1&&s.renderStatus(e,"inactive"),t.filter===i.filter&&s.renderStatus(e,"active"),r=0;r<n.length;r++){if(n[r]===i.filter){s.renderStatus(e,"active");break}s.renderStatus(e,"inactive")}}s.callActions("afterParseStatusChange",arguments)},renderStatus:function(e,t){var i=this;switch(i.callActions("beforeRenderStatus",arguments),t){case"active":f.addClass(e,i.classNames.active),f.removeClass(e,i.classNames.disabled),i.canDisable&&(i.el.disabled=!1);break;case"inactive":f.removeClass(e,i.classNames.active),f.removeClass(e,i.classNames.disabled),i.canDisable&&(i.el.disabled=!1);break;case"disabled":i.canDisable&&(i.el.disabled=!0),f.addClass(e,i.classNames.disabled),f.removeClass(e,i.classNames.active)}"live"!==i.status&&(i.status=t),i.callActions("afterRenderStatus",arguments)}}),p.controls=[],p.StyleData=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.x=0,this.y=0,this.top=0,this.right=0,this.bottom=0,this.left=0,this.width=0,this.height=0,this.marginRight=0,this.marginBottom=0,this.opacity=0,this.scale=new p.TransformData,this.translateX=new p.TransformData,this.translateY=new p.TransformData,this.translateZ=new p.TransformData,this.rotateX=new p.TransformData,this.rotateY=new p.TransformData,this.rotateZ=new p.TransformData,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.StyleData),p.StyleData.prototype=Object.create(p.Base.prototype),p.StyleData.prototype.constructor=p.StyleData,p.TransformData=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.value=0,this.unit="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.TransformData),p.TransformData.prototype=Object.create(p.Base.prototype),p.TransformData.prototype.constructor=p.TransformData,p.TransformDefaults=function(){p.StyleData.apply(this),this.callActions("beforeConstruct"),this.scale.value=.01,this.scale.unit="",this.translateX.value=20,this.translateX.unit="px",this.translateY.value=20,this.translateY.unit="px",this.translateZ.value=20,this.translateZ.unit="px",this.rotateX.value=90,this.rotateX.unit="deg",this.rotateY.value=90,this.rotateY.unit="deg",this.rotateX.value=90,this.rotateX.unit="deg",this.rotateZ.value=180,this.rotateZ.unit="deg",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.TransformDefaults),p.TransformDefaults.prototype=Object.create(p.StyleData.prototype),p.TransformDefaults.prototype.constructor=p.TransformDefaults,p.transformDefaults=new p.TransformDefaults,p.EventDetail=function(){this.state=null,this.futureState=null,this.instance=null,this.originalEvent=null},p.Events=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.mixStart=null,this.mixBusy=null,this.mixEnd=null,this.mixFail=null,this.mixClick=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Events),p.Events.prototype=Object.create(p.Base.prototype),p.Events.prototype.constructor=p.Events,p.Events.prototype.fire=function(e,t,i,n){var s,a=new p.EventDetail;if(this.callActions("beforeFire",arguments),void 0===this[e])throw new Error('Event type "'+e+'" not found.');a.state=new p.State,f.extend(a.state,i.state),i.futureState&&(a.futureState=new p.State,f.extend(a.futureState,i.futureState)),a.instance=i.instance,i.originalEvent&&(a.originalEvent=i.originalEvent),s=f.getCustomEvent(e,a,n),this.callFilters("eventFire",s,arguments),t.dispatchEvent(s)},p.events=new p.Events,p.QueueItem=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.args=[],this.instruction=null,this.triggerElement=null,this.deferred=null,this.isToggling=!1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.QueueItem),p.QueueItem.prototype=Object.create(p.Base.prototype),p.QueueItem.prototype.constructor=p.QueueItem,p.Mixer=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.config=new p.Config,this.id="",this.isBusy=!1,this.isToggling=!1,this.incPadding=!0,this.controls=[],this.targets=[],this.origOrder=[],this.cache={},this.toggleArray=[],this.targetsMoved=0,this.targetsImmovable=0,this.targetsBound=0,this.targetsDone=0,this.staggerDuration=0,this.effectsIn=null,this.effectsOut=null,this.transformIn=[],this.transformOut=[],this.queue=[],this.state=null,this.lastOperation=null,this.lastClicked=null,this.userCallback=null,this.userDeferred=null,this.dom=new p.MixerDom,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Mixer),p.Mixer.prototype=Object.create(p.Base.prototype),f.extend(p.Mixer.prototype,{constructor:p.Mixer,attach:function(e,t,i,n){var s=this,a=null,r=-1;for(s.callActions("beforeAttach",arguments),s.id=i,n&&f.extend(s.config,n,!0,!0),s.sanitizeConfig(),s.cacheDom(e,t),s.config.layout.containerClassName&&f.addClass(s.dom.container,s.config.layout.containerClassName),p.features.has.transitions||(s.config.animation.enable=!1),void 0===h.console&&(s.config.debug.showWarnings=!1),s.config.data.uidKey&&(s.config.controls.enable=!1),s.indexTargets(),s.state=s.getInitialState(),r=0;a=s.lastOperation.toHide[r];r++)a.hide();s.config.controls.enable&&(s.initControls(),s.buildToggleArray(null,s.state),s.updateControls({filter:s.state.activeFilter,sort:s.state.activeSort})),s.parseEffects(),s.callActions("afterAttach",arguments)},sanitizeConfig:function(){var e=this;e.callActions("beforeSanitizeConfig",arguments),e.config.controls.scope=e.config.controls.scope.toLowerCase().trim(),e.config.controls.toggleLogic=e.config.controls.toggleLogic.toLowerCase().trim(),e.config.controls.toggleDefault=e.config.controls.toggleDefault.toLowerCase().trim(),e.config.animation.effects=e.config.animation.effects.trim(),e.callActions("afterSanitizeConfig",arguments)},getInitialState:function(){var e=this,t=new p.State,i=new p.Operation;if(e.callActions("beforeGetInitialState",arguments),t.activeContainerClassName=e.config.layout.containerClassName,e.config.load.dataset){if(!e.config.data.uidKey||"string"!=typeof e.config.data.uidKey)throw new TypeError(p.messages.errorConfigDataUidKeyNotSet());i.startDataset=i.newDataset=t.activeDataset=e.config.load.dataset.slice(),i.startContainerClassName=i.newContainerClassName=t.activeContainerClassName,i.show=e.targets.slice(),t=e.callFilters("stateGetInitialState",t,arguments)}else t.activeFilter=e.parseFilterArgs([e.config.load.filter]).command,t.activeSort=e.parseSortArgs([e.config.load.sort]).command,t.totalTargets=e.targets.length,(t=e.callFilters("stateGetInitialState",t,arguments)).activeSort.collection||t.activeSort.attribute||"random"===t.activeSort.order||"desc"===t.activeSort.order?(i.newSort=t.activeSort,e.sortOperation(i),e.printSort(!1,i),e.targets=i.newOrder):i.startOrder=i.newOrder=e.targets,i.startFilter=i.newFilter=t.activeFilter,i.startSort=i.newSort=t.activeSort,i.startContainerClassName=i.newContainerClassName=t.activeContainerClassName,"all"===i.newFilter.selector?i.newFilter.selector=e.config.selectors.target:"none"===i.newFilter.selector&&(i.newFilter.selector="");return i=e.callFilters("operationGetInitialState",i,[t]),(e.lastOperation=i).newFilter&&e.filterOperation(i),e.buildState(i)},cacheDom:function(e,t){this.callActions("beforeCacheDom",arguments),this.dom.document=t,this.dom.body=this.dom.document.querySelector("body"),this.dom.container=e,this.dom.parent=e,this.callActions("afterCacheDom",arguments)},indexTargets:function(){var e,t,i=this,n=null,s=-1;if(i.callActions("beforeIndexTargets",arguments),i.dom.targets=i.config.layout.allowNestedTargets?i.dom.container.querySelectorAll(i.config.selectors.target):f.children(i.dom.container,i.config.selectors.target,i.dom.document),i.dom.targets=f.arrayFromList(i.dom.targets),i.targets=[],(t=i.config.load.dataset)&&t.length!==i.dom.targets.length)throw new Error(p.messages.errorDatasetPrerenderedMismatch());if(i.dom.targets.length){for(s=0;e=i.dom.targets[s];s++)(n=new p.Target).init(e,i,t?t[s]:void 0),n.isInDom=!0,i.targets.push(n);i.dom.parent=i.dom.targets[0].parentElement===i.dom.container?i.dom.container:i.dom.targets[0].parentElement}i.origOrder=i.targets,i.callActions("afterIndexTargets",arguments)},initControls:function(){var e,t,i=this,n=null,s=null,a=null,r=null,o=-1,l=-1;switch(i.callActions("beforeInitControls",arguments),i.config.controls.scope){case"local":s=i.dom.container;break;case"global":s=i.dom.document;break;default:throw new Error(p.messages.errorConfigInvalidControlsScope())}for(o=0;e=p.controlDefinitions[o];o++)if(i.config.controls.live||e.live){if(e.parent){if(!(a=i.dom[e.parent])||a.length<0)continue;"number"!=typeof a.length&&(a=[a])}else a=[s];for(l=0;n=a[l];l++)r=i.getControl(n,e.type,e.selector),i.controls.push(r)}else for(t=s.querySelectorAll(i.config.selectors.control+e.selector),l=0;n=t[l];l++)(r=i.getControl(n,e.type,""))&&i.controls.push(r);i.callActions("afterInitControls",arguments)},getControl:function(e,t,i){var n=this,s=null,a=-1;if(n.callActions("beforeGetControl",arguments),!i)for(a=0;s=p.controls[a];a++){if(s.el===e&&s.isBound(n))return n.callFilters("controlGetControl",null,arguments);if(s.el===e&&s.type===t&&s.selector===i)return s.addBinding(n),n.callFilters("controlGetControl",s,arguments)}return(s=new p.Control).init(e,t,i),s.classNames.base=f.getClassname(n.config.classNames,t),s.classNames.active=f.getClassname(n.config.classNames,t,n.config.classNames.modifierActive),s.classNames.disabled=f.getClassname(n.config.classNames,t,n.config.classNames.modifierDisabled),s.addBinding(n),n.callFilters("controlGetControl",s,arguments)},getToggleSelector:function(){var e="or"===this.config.controls.toggleLogic?", ":"",t="";return this.callActions("beforeGetToggleSelector",arguments),this.toggleArray=f.clean(this.toggleArray),""===(t=this.toggleArray.join(e))&&(t=this.config.controls.toggleDefault),this.callFilters("selectorGetToggleSelector",t,arguments)},buildToggleArray:function(e,t){var i="";if(this.callActions("beforeBuildToggleArray",arguments),e&&e.filter)i=e.filter.selector.replace(/\s/g,"");else{if(!t)return;i=t.activeFilter.selector.replace(/\s/g,"")}i!==this.config.selectors.target&&"all"!==i||(i=""),"or"===this.config.controls.toggleLogic?this.toggleArray=i.split(","):this.toggleArray=this.splitCompoundSelector(i),this.toggleArray=f.clean(this.toggleArray),this.callActions("afterBuildToggleArray",arguments)},splitCompoundSelector:function(e){var t=e.split(/([\.\[])/g),i=[],n="",s=-1;for(""===t[0]&&t.shift(),s=0;s<t.length;s++)s%2==0&&(n=""),n+=t[s],s%2!=0&&i.push(n);return i},updateControls:function(e){var t=null,i=new p.CommandMultimix,n=-1;for(this.callActions("beforeUpdateControls",arguments),e.filter?i.filter=e.filter.selector:i.filter=this.state.activeFilter.selector,e.sort?i.sort=this.buildSortString(e.sort):i.sort=this.buildSortString(this.state.activeSort),i.filter===this.config.selectors.target&&(i.filter="all"),""===i.filter&&(i.filter="none"),f.freeze(i),n=0;t=this.controls[n];n++)t.update(i,this.toggleArray);this.callActions("afterUpdateControls",arguments)},buildSortString:function(e){var t="";return t+=e.sortString,e.next&&(t+=" "+this.buildSortString(e.next)),t},insertTargets:function(e,t){var i,n=this,s=-1,a=null,r=null,o=null,l=-1;if(n.callActions("beforeInsertTargets",arguments),void 0===e.index&&(e.index=0),i=n.getNextSibling(e.index,e.sibling,e.position),a=n.dom.document.createDocumentFragment(),s=i?f.index(i,n.config.selectors.target):n.targets.length,e.collection){for(l=0;o=e.collection[l];l++){if(-1<n.dom.targets.indexOf(o))throw new Error(p.messages.errorInsertPreexistingElement());o.style.display="none",a.appendChild(o),a.appendChild(n.dom.document.createTextNode(" ")),f.isElement(o,n.dom.document)&&o.matches(n.config.selectors.target)&&((r=new p.Target).init(o,n),r.isInDom=!0,n.targets.splice(s,0,r),s++)}n.dom.parent.insertBefore(a,i)}t.startOrder=n.origOrder=n.targets,n.callActions("afterInsertTargets",arguments)},getNextSibling:function(e,t,i){var n=this,s=null;return e=Math.max(e,0),t&&"before"===i?s=t:t&&"after"===i?s=t.nextElementSibling||null:0<n.targets.length&&void 0!==e?s=e<n.targets.length||!n.targets.length?n.targets[e].dom.el:n.targets[n.targets.length-1].dom.el.nextElementSibling:0===n.targets.length&&0<n.dom.parent.children.length&&(n.config.layout.siblingAfter?s=n.config.layout.siblingAfter:n.config.layout.siblingBefore?s=n.config.layout.siblingBefore.nextElementSibling:n.dom.parent.children[0]),n.callFilters("elementGetNextSibling",s,arguments)},filterOperation:function(e){var t,i,n,s=null,a=-1;for(this.callActions("beforeFilterOperation",arguments),n=e.newFilter.action,a=0;s=e.newOrder[a];a++)t=e.newFilter.collection?-1<e.newFilter.collection.indexOf(s.dom.el):""!==e.newFilter.selector&&s.dom.el.matches(e.newFilter.selector),this.evaluateHideShow(t,s,n,e);if(e.toRemove.length)for(a=0;s=e.show[a];a++)-1<e.toRemove.indexOf(s)&&(e.show.splice(a,1),-1<(i=e.toShow.indexOf(s))&&e.toShow.splice(i,1),e.toHide.push(s),e.hide.push(s),a--);e.matching=e.show.slice(),0===e.show.length&&""!==e.newFilter.selector&&0!==this.targets.length&&(e.hasFailed=!0),this.callActions("afterFilterOperation",arguments)},evaluateHideShow:function(e,t,i,n){var s=Array.prototype.slice.call(arguments,1),a=this.callFilters("testResultEvaluateHideShow",e,s);this.callActions("beforeEvaluateHideShow",arguments),!0===a&&"show"===i||!1===a&&"hide"===i?(n.show.push(t),t.isShown||n.toShow.push(t)):(n.hide.push(t),t.isShown&&n.toHide.push(t)),this.callActions("afterEvaluateHideShow",arguments)},sortOperation:function(i){var e,n=this,t=[],s=null,a=-1;if(n.callActions("beforeSortOperation",arguments),i.startOrder=n.targets,i.newSort.collection){for(t=[],a=0;e=i.newSort.collection[a];a++){if(n.dom.targets.indexOf(e)<0)throw new Error(p.messages.errorSortNonExistentElement());(s=new p.Target).init(e,n),s.isInDom=!0,t.push(s)}i.newOrder=t}else"random"===i.newSort.order?i.newOrder=f.arrayShuffle(i.startOrder):""===i.newSort.attribute?(i.newOrder=n.origOrder.slice(),"desc"===i.newSort.order&&i.newOrder.reverse()):(i.newOrder=i.startOrder.slice(),i.newOrder.sort(function(e,t){return n.compare(e,t,i.newSort)}));f.isEqualArray(i.newOrder,i.startOrder)&&(i.willSort=!1),n.callActions("afterSortOperation",arguments)},compare:function(e,t,i){var n=i.order,s=this.getAttributeValue(e,i.attribute),a=this.getAttributeValue(t,i.attribute),a=isNaN(+s)||isNaN(+a)?(s=s.toLowerCase(),a.toLowerCase()):(s=+s,+a);return s<a?"asc"===n?-1:1:a<s?"asc"===n?1:-1:s===a&&i.next?this.compare(e,t,i.next):0},getAttributeValue:function(e,t){var i="";return null===(i=e.dom.el.getAttribute("data-"+t))&&this.config.debug.showWarnings&&console.warn(p.messages.warningInconsistentSortingAttributes({attribute:"data-"+t})),this.callFilters("valueGetAttributeValue",i||0,arguments)},printSort:function(e,t){var i=e?t.newOrder:t.startOrder,n=e?t.startOrder:t.newOrder,e=i.length?i[i.length-1].dom.el.nextElementSibling:null,s=h.document.createDocumentFragment(),t=null,a=null,r=null,o=-1;for(this.callActions("beforePrintSort",arguments),o=0;a=i[o];o++)"absolute"!==(r=a.dom.el).style.position&&(f.removeWhitespace(r.previousSibling),r.parentElement.removeChild(r));for((t=e?e.previousSibling:this.dom.parent.lastChild)&&"#text"===t.nodeName&&f.removeWhitespace(t),o=0;a=n[o];o++)r=a.dom.el,f.isElement(s.lastChild)&&s.appendChild(h.document.createTextNode(" ")),s.appendChild(r);this.dom.parent.firstChild&&this.dom.parent.firstChild!==e&&s.insertBefore(h.document.createTextNode(" "),s.childNodes[0]),e?(s.appendChild(h.document.createTextNode(" ")),this.dom.parent.insertBefore(s,e)):this.dom.parent.appendChild(s),this.callActions("afterPrintSort",arguments)},parseSortString:function(e,t){for(var i,n=e.split(" "),s=t,a=-1,a=0;a<n.length;a++){switch(i=n[a].split(":"),s.sortString=n[a],s.attribute=f.dashCase(i[0]),s.order=i[1]||"asc",s.attribute){case"default":s.attribute="";break;case"random":s.attribute="",s.order="random"}if(!s.attribute||"random"===s.order)break;a<n.length-1&&(s.next=new p.CommandSort,f.freeze(s),s=s.next)}return this.callFilters("commandsParseSort",t,arguments)},parseEffects:function(){var e=this,t="",i=e.config.animation.effectsIn||e.config.animation.effects,n=e.config.animation.effectsOut||e.config.animation.effects;for(t in e.callActions("beforeParseEffects",arguments),e.effectsIn=new p.StyleData,e.effectsOut=new p.StyleData,e.transformIn=[],e.transformOut=[],e.effectsIn.opacity=e.effectsOut.opacity=1,e.parseEffect("fade",i,e.effectsIn,e.transformIn),e.parseEffect("fade",n,e.effectsOut,e.transformOut,!0),p.transformDefaults)p.transformDefaults[t]instanceof p.TransformData&&(e.parseEffect(t,i,e.effectsIn,e.transformIn),e.parseEffect(t,n,e.effectsOut,e.transformOut,!0));e.parseEffect("stagger",i,e.effectsIn,e.transformIn),e.parseEffect("stagger",n,e.effectsOut,e.transformOut,!0),e.callActions("afterParseEffects",arguments)},parseEffect:function(e,t,i,n,s){var a,r,o,l="",c=["%","px","em","rem","vh","vw","deg"],u=-1;if(this.callActions("beforeParseEffect",arguments),"string"!=typeof t)throw new TypeError(p.messages.errorConfigInvalidAnimationEffects());if(t.indexOf(e)<0)"stagger"===e&&(this.staggerDuration=0);else{switch(-1<(a=t.indexOf(e+"("))&&(r=t.substring(a),l=/\(([^)]+)\)/.exec(r)[1]),e){case"fade":i.opacity=l?parseFloat(l):0;break;case"stagger":this.staggerDuration=l?parseFloat(l):100;break;default:if(s&&this.config.animation.reverseOut&&"scale"!==e?i[e].value=-1*(l?parseFloat(l):p.transformDefaults[e].value):i[e].value=l?parseFloat(l):p.transformDefaults[e].value,l){for(u=0;o=c[u];u++)if(-1<l.indexOf(o)){i[e].unit=o;break}}else i[e].unit=p.transformDefaults[e].unit;n.push(e+"("+i[e].value+i[e].unit+")")}this.callActions("afterParseEffect",arguments)}},buildState:function(e){var t=new p.State,i=null,n=-1;for(this.callActions("beforeBuildState",arguments),n=0;i=this.targets[n];n++)(!e.toRemove.length||e.toRemove.indexOf(i)<0)&&t.targets.push(i.dom.el);for(n=0;i=e.matching[n];n++)t.matching.push(i.dom.el);for(n=0;i=e.show[n];n++)t.show.push(i.dom.el);for(n=0;i=e.hide[n];n++)(!e.toRemove.length||e.toRemove.indexOf(i)<0)&&t.hide.push(i.dom.el);return t.id=this.id,t.container=this.dom.container,t.activeFilter=e.newFilter,t.activeSort=e.newSort,t.activeDataset=e.newDataset,t.activeContainerClassName=e.newContainerClassName,t.hasFailed=e.hasFailed,t.totalTargets=this.targets.length,t.totalShow=e.show.length,t.totalHide=e.hide.length,t.totalMatching=e.matching.length,t.triggerElement=e.triggerElement,this.callFilters("stateBuildState",t,arguments)},goMix:function(e,t){var i,n=this;return n.callActions("beforeGoMix",arguments),n.config.animation.duration&&n.config.animation.effects&&f.isVisible(n.dom.container)||(e=!1),t.toShow.length||t.toHide.length||t.willSort||t.willChangeLayout||(e=!1),t.startState.show.length||t.show.length||(e=!1),p.events.fire("mixStart",n.dom.container,{state:t.startState,futureState:t.newState,instance:n},n.dom.document),"function"==typeof n.config.callbacks.onMixStart&&n.config.callbacks.onMixStart.call(n.dom.container,t.startState,t.newState,n),f.removeClass(n.dom.container,f.getClassname(n.config.classNames,"container",n.config.classNames.modifierFailed)),i=n.userDeferred||(n.userDeferred=f.defer(p.libraries)),n.isBusy=!0,e&&p.features.has.transitions?(h.pageYOffset!==t.docState.scrollTop&&h.scrollTo(t.docState.scrollLeft,t.docState.scrollTop),n.config.animation.applyPerspective&&(n.dom.parent.style[p.features.perspectiveProp]=n.config.animation.perspectiveDistance,n.dom.parent.style[p.features.perspectiveOriginProp]=n.config.animation.perspectiveOrigin),n.config.animation.animateResizeContainer&&t.startHeight!==t.newHeight&&t.viewportDeltaY!==t.startHeight-t.newHeight&&(n.dom.parent.style.height=t.startHeight+"px"),n.config.animation.animateResizeContainer&&t.startWidth!==t.newWidth&&t.viewportDeltaX!==t.startWidth-t.newWidth&&(n.dom.parent.style.width=t.startWidth+"px"),t.startHeight===t.newHeight&&(n.dom.parent.style.height=t.startHeight+"px"),t.startWidth===t.newWidth&&(n.dom.parent.style.width=t.startWidth+"px"),t.startHeight===t.newHeight&&t.startWidth===t.newWidth&&(n.dom.parent.style.overflow="hidden"),requestAnimationFrame(function(){n.moveTargets(t)})):n.config.debug.fauxAsync?setTimeout(function(){n.cleanUp(t)},n.config.animation.duration):n.cleanUp(t),n.callFilters("promiseGoMix",i.promise,arguments)},getStartMixData:function(e){var t=h.getComputedStyle(this.dom.parent),i=this.dom.parent.getBoundingClientRect(),n=null,s={},a=-1,r=t[p.features.boxSizingProp];for(this.incPadding="border-box"===r,this.callActions("beforeGetStartMixData",arguments),a=0;n=e.show[a];a++)s=n.getPosData(),e.showPosData[a]={startPosData:s};for(a=0;n=e.toHide[a];a++)s=n.getPosData(),e.toHidePosData[a]={startPosData:s};e.startX=i.left,e.startY=i.top,e.startHeight=this.incPadding?i.height:i.height-parseFloat(t.paddingTop)-parseFloat(t.paddingBottom)-parseFloat(t.borderTop)-parseFloat(t.borderBottom),e.startWidth=this.incPadding?i.width:i.width-parseFloat(t.paddingLeft)-parseFloat(t.paddingRight)-parseFloat(t.borderLeft)-parseFloat(t.borderRight),this.callActions("afterGetStartMixData",arguments)},setInter:function(e){var t=this,i=null,n=-1;for(t.callActions("beforeSetInter",arguments),t.config.animation.clampHeight&&(t.dom.parent.style.height=e.startHeight+"px",t.dom.parent.style.overflow="hidden"),t.config.animation.clampWidth&&(t.dom.parent.style.width=e.startWidth+"px",t.dom.parent.style.overflow="hidden"),n=0;i=e.toShow[n];n++)i.show();e.willChangeLayout&&(f.removeClass(t.dom.container,e.startContainerClassName),f.addClass(t.dom.container,e.newContainerClassName)),t.callActions("afterSetInter",arguments)},getInterMixData:function(e){var t=null,i=-1;for(this.callActions("beforeGetInterMixData",arguments),i=0;t=e.show[i];i++)e.showPosData[i].interPosData=t.getPosData();for(i=0;t=e.toHide[i];i++)e.toHidePosData[i].interPosData=t.getPosData();this.callActions("afterGetInterMixData",arguments)},setFinal:function(e){var t=null,i=-1;for(this.callActions("beforeSetFinal",arguments),e.willSort&&this.printSort(!1,e),i=0;t=e.toHide[i];i++)t.hide();this.callActions("afterSetFinal",arguments)},getFinalMixData:function(e){var t,i=this,n=null,s=null,a=-1;for(i.callActions("beforeGetFinalMixData",arguments),a=0;s=e.show[a];a++)e.showPosData[a].finalPosData=s.getPosData();for(a=0;s=e.toHide[a];a++)e.toHidePosData[a].finalPosData=s.getPosData();for((i.config.animation.clampHeight||i.config.animation.clampWidth)&&(i.dom.parent.style.height=i.dom.parent.style.width=i.dom.parent.style.overflow=""),i.incPadding||(n=h.getComputedStyle(i.dom.parent)),t=i.dom.parent.getBoundingClientRect(),e.newX=t.left,e.newY=t.top,e.newHeight=i.incPadding?t.height:t.height-parseFloat(n.paddingTop)-parseFloat(n.paddingBottom)-parseFloat(n.borderTop)-parseFloat(n.borderBottom),e.newWidth=i.incPadding?t.width:t.width-parseFloat(n.paddingLeft)-parseFloat(n.paddingRight)-parseFloat(n.borderLeft)-parseFloat(n.borderRight),e.viewportDeltaX=e.docState.viewportWidth-this.dom.document.documentElement.clientWidth,e.viewportDeltaY=e.docState.viewportHeight-this.dom.document.documentElement.clientHeight,e.willSort&&i.printSort(!0,e),a=0;s=e.toShow[a];a++)s.hide();for(a=0;s=e.toHide[a];a++)s.show();e.willChangeLayout&&(f.removeClass(i.dom.container,e.newContainerClassName),f.addClass(i.dom.container,i.config.layout.containerClassName)),i.callActions("afterGetFinalMixData",arguments)},getTweenData:function(e){var t=this,i=null,n=null,s=Object.getOwnPropertyNames(t.effectsIn),a="",r=null,o=-1,l=-1,c=-1,u=-1;for(t.callActions("beforeGetTweenData",arguments),c=0;i=e.show[c];c++)for((n=e.showPosData[c]).posIn=new p.StyleData,n.posOut=new p.StyleData,n.tweenData=new p.StyleData,i.isShown?(n.posIn.x=n.startPosData.x-n.interPosData.x,n.posIn.y=n.startPosData.y-n.interPosData.y):n.posIn.x=n.posIn.y=0,n.posOut.x=n.finalPosData.x-n.interPosData.x,n.posOut.y=n.finalPosData.y-n.interPosData.y,n.posIn.opacity=i.isShown?1:t.effectsIn.opacity,n.posOut.opacity=1,n.tweenData.opacity=n.posOut.opacity-n.posIn.opacity,i.isShown||t.config.animation.nudge||(n.posIn.x=n.posOut.x,n.posIn.y=n.posOut.y),n.tweenData.x=n.posOut.x-n.posIn.x,n.tweenData.y=n.posOut.y-n.posIn.y,t.config.animation.animateResizeTargets&&(n.posIn.width=n.startPosData.width,n.posIn.height=n.startPosData.height,o=(n.startPosData.width||n.finalPosData.width)-n.interPosData.width,n.posIn.marginRight=n.startPosData.marginRight-o,l=(n.startPosData.height||n.finalPosData.height)-n.interPosData.height,n.posIn.marginBottom=n.startPosData.marginBottom-l,n.posOut.width=n.finalPosData.width,n.posOut.height=n.finalPosData.height,o=(n.finalPosData.width||n.startPosData.width)-n.interPosData.width,n.posOut.marginRight=n.finalPosData.marginRight-o,l=(n.finalPosData.height||n.startPosData.height)-n.interPosData.height,n.posOut.marginBottom=n.finalPosData.marginBottom-l,n.tweenData.width=n.posOut.width-n.posIn.width,n.tweenData.height=n.posOut.height-n.posIn.height,n.tweenData.marginRight=n.posOut.marginRight-n.posIn.marginRight,n.tweenData.marginBottom=n.posOut.marginBottom-n.posIn.marginBottom),u=0;a=s[u];u++)(r=t.effectsIn[a])instanceof p.TransformData&&r.value&&(n.posIn[a].value=r.value,n.posOut[a].value=0,n.tweenData[a].value=n.posOut[a].value-n.posIn[a].value,n.posIn[a].unit=n.posOut[a].unit=n.tweenData[a].unit=r.unit);for(c=0;i=e.toHide[c];c++)for((n=e.toHidePosData[c]).posIn=new p.StyleData,n.posOut=new p.StyleData,n.tweenData=new p.StyleData,n.posIn.x=i.isShown?n.startPosData.x-n.interPosData.x:0,n.posIn.y=i.isShown?n.startPosData.y-n.interPosData.y:0,n.posOut.x=t.config.animation.nudge?0:n.posIn.x,n.posOut.y=t.config.animation.nudge?0:n.posIn.y,n.tweenData.x=n.posOut.x-n.posIn.x,n.tweenData.y=n.posOut.y-n.posIn.y,t.config.animation.animateResizeTargets&&(n.posIn.width=n.startPosData.width,n.posIn.height=n.startPosData.height,o=n.startPosData.width-n.interPosData.width,n.posIn.marginRight=n.startPosData.marginRight-o,l=n.startPosData.height-n.interPosData.height,n.posIn.marginBottom=n.startPosData.marginBottom-l),n.posIn.opacity=1,n.posOut.opacity=t.effectsOut.opacity,n.tweenData.opacity=n.posOut.opacity-n.posIn.opacity,u=0;a=s[u];u++)(r=t.effectsOut[a])instanceof p.TransformData&&r.value&&(n.posIn[a].value=0,n.posOut[a].value=r.value,n.tweenData[a].value=n.posOut[a].value-n.posIn[a].value,n.posIn[a].unit=n.posOut[a].unit=n.tweenData[a].unit=r.unit);t.callActions("afterGetTweenData",arguments)},moveTargets:function(e){var t=this,i=null,n=null,s=null,a="",r=!1,o=-1,l=-1,c=t.checkProgress.bind(t);for(t.callActions("beforeMoveTargets",arguments),l=0;i=e.show[l];l++)n=new p.IMoveData,s=e.showPosData[l],a=i.isShown?"none":"show",(r=t.willTransition(a,e.hasEffect,s.posIn,s.posOut))&&o++,i.show(),n.posIn=s.posIn,n.posOut=s.posOut,n.statusChange=a,n.staggerIndex=o,n.operation=e,n.callback=r?c:null,i.move(n);for(l=0;i=e.toHide[l];l++)s=e.toHidePosData[l],n=new p.IMoveData,a="hide",r=t.willTransition(a,s.posIn,s.posOut),n.posIn=s.posIn,n.posOut=s.posOut,n.statusChange=a,n.staggerIndex=l,n.operation=e,n.callback=r?c:null,i.move(n);t.config.animation.animateResizeContainer&&(t.dom.parent.style[p.features.transitionProp]="height "+t.config.animation.duration+"ms ease, width "+t.config.animation.duration+"ms ease ",requestAnimationFrame(function(){e.startHeight!==e.newHeight&&e.viewportDeltaY!==e.startHeight-e.newHeight&&(t.dom.parent.style.height=e.newHeight+"px"),e.startWidth!==e.newWidth&&e.viewportDeltaX!==e.startWidth-e.newWidth&&(t.dom.parent.style.width=e.newWidth+"px")})),e.willChangeLayout&&(f.removeClass(t.dom.container,t.config.layout.ContainerClassName),f.addClass(t.dom.container,e.newContainerClassName)),t.callActions("afterMoveTargets",arguments)},hasEffect:function(){var e,t,i=["scale","translateX","translateY","translateZ","rotateX","rotateY","rotateZ"],n=!1,s=-1;if(1!==this.effectsIn.opacity)return this.callFilters("resultHasEffect",!0,arguments);for(s=0;e=i[s];s++)if(0!==("undefined"!==(t=this.effectsIn[e]).value?t.value:t)){n=!0;break}return this.callFilters("resultHasEffect",n,arguments)},willTransition:function(e,t,i,n){var s=!(!f.isVisible(this.dom.container)||!("none"!==e&&t||i.x!==n.x||i.y!==n.y)&&(!this.config.animation.animateResizeTargets||i.width===n.width&&i.height===n.height&&i.marginRight===n.marginRight&&i.marginTop===n.marginTop));return this.callFilters("resultWillTransition",s,arguments)},checkProgress:function(e){this.targetsDone++,this.targetsBound===this.targetsDone&&this.cleanUp(e)},cleanUp:function(e){var t,i,n=this,s=null,a=null,r=-1;for(n.callActions("beforeCleanUp",arguments),r=n.targetsMoved=n.targetsImmovable=n.targetsBound=n.targetsDone=0;s=e.show[r];r++)s.cleanUp(),s.show();for(r=0;s=e.toHide[r];r++)s.cleanUp(),s.hide();if(e.willSort&&n.printSort(!1,e),n.dom.parent.style[p.features.transitionProp]=n.dom.parent.style.height=n.dom.parent.style.width=n.dom.parent.style.overflow=n.dom.parent.style[p.features.perspectiveProp]=n.dom.parent.style[p.features.perspectiveOriginProp]="",e.willChangeLayout&&(f.removeClass(n.dom.container,e.startContainerClassName),f.addClass(n.dom.container,e.newContainerClassName)),e.toRemove.length){for(r=0;s=n.targets[r];r++)-1<e.toRemove.indexOf(s)&&((t=s.dom.el.previousSibling)&&"#text"===t.nodeName&&(a=s.dom.el.nextSibling)&&"#text"===a.nodeName&&f.removeWhitespace(t),e.willSort||n.dom.parent.removeChild(s.dom.el),n.targets.splice(r,1),s.isInDom=!1,r--);n.origOrder=n.targets}e.willSort&&(n.targets=e.newOrder),n.state=e.newState,n.lastOperation=e,n.dom.targets=n.state.targets,p.events.fire("mixEnd",n.dom.container,{state:n.state,instance:n},n.dom.document),"function"==typeof n.config.callbacks.onMixEnd&&n.config.callbacks.onMixEnd.call(n.dom.container,n.state,n),e.hasFailed&&(p.events.fire("mixFail",n.dom.container,{state:n.state,instance:n},n.dom.document),"function"==typeof n.config.callbacks.onMixFail&&n.config.callbacks.onMixFail.call(n.dom.container,n.state,n),f.addClass(n.dom.container,f.getClassname(n.config.classNames,"container",n.config.classNames.modifierFailed))),"function"==typeof n.userCallback&&n.userCallback.call(n.dom.container,n.state,n),"function"==typeof n.userDeferred.resolve&&n.userDeferred.resolve(n.state),n.userCallback=null,n.userDeferred=null,n.lastClicked=null,n.isToggling=!1,n.isBusy=!1,n.queue.length&&(n.callActions("beforeReadQueueCleanUp",arguments),i=n.queue.shift(),n.userDeferred=i.deferred,n.isToggling=i.isToggling,n.lastClicked=i.triggerElement,(i.instruction.command instanceof p.CommandMultimix?n.multimix:n.dataset).apply(n,i.args)),n.callActions("afterCleanUp",arguments)},parseMultimixArgs:function(e){var t,i=new p.UserInstruction,n=-1;for(i.animate=this.config.animation.enable,i.command=new p.CommandMultimix,n=0;n<e.length;n++)null!==(t=e[n])&&("object"==typeof t?f.extend(i.command,t):"boolean"==typeof t?i.animate=t:"function"==typeof t&&(i.callback=t));return!i.command.insert||i.command.insert instanceof p.CommandInsert||(i.command.insert=this.parseInsertArgs([i.command.insert]).command),!i.command.remove||i.command.remove instanceof p.CommandRemove||(i.command.remove=this.parseRemoveArgs([i.command.remove]).command),!i.command.filter||i.command.filter instanceof p.CommandFilter||(i.command.filter=this.parseFilterArgs([i.command.filter]).command),!i.command.sort||i.command.sort instanceof p.CommandSort||(i.command.sort=this.parseSortArgs([i.command.sort]).command),!i.command.changeLayout||i.command.changeLayout instanceof p.CommandChangeLayout||(i.command.changeLayout=this.parseChangeLayoutArgs([i.command.changeLayout]).command),i=this.callFilters("instructionParseMultimixArgs",i,arguments),f.freeze(i),i},parseFilterArgs:function(e){var t,i=new p.UserInstruction,n=-1;for(i.animate=this.config.animation.enable,i.command=new p.CommandFilter,n=0;n<e.length;n++)"string"==typeof(t=e[n])?i.command.selector=t:null===t?i.command.collection=[]:"object"==typeof t&&f.isElement(t,this.dom.document)?i.command.collection=[t]:"object"==typeof t&&void 0!==t.length?i.command.collection=f.arrayFromList(t):"object"==typeof t?f.extend(i.command,t):"boolean"==typeof t?i.animate=t:"function"==typeof t&&(i.callback=t);if(i.command.selector&&i.command.collection)throw new Error(p.messages.errorFilterInvalidArguments());return i=this.callFilters("instructionParseFilterArgs",i,arguments),f.freeze(i),i},parseSortArgs:function(e){var t,i=new p.UserInstruction,n="",s=-1;for(i.animate=this.config.animation.enable,i.command=new p.CommandSort,s=0;s<e.length;s++)if(null!==(t=e[s]))switch(typeof t){case"string":n=t;break;case"object":t.length&&(i.command.collection=f.arrayFromList(t));break;case"boolean":i.animate=t;break;case"function":i.callback=t}return n&&(i.command=this.parseSortString(n,i.command)),i=this.callFilters("instructionParseSortArgs",i,arguments),f.freeze(i),i},parseInsertArgs:function(e){var t,i=new p.UserInstruction,n=-1;for(i.animate=this.config.animation.enable,i.command=new p.CommandInsert,n=0;n<e.length;n++)null!==(t=e[n])&&("number"==typeof t?i.command.index=t:"string"==typeof t&&-1<["before","after"].indexOf(t)?i.command.position=t:"string"==typeof t?i.command.collection=f.arrayFromList(f.createElement(t).childNodes):"object"==typeof t&&f.isElement(t,this.dom.document)?i.command.collection.length?i.command.sibling=t:i.command.collection=[t]:"object"==typeof t&&t.length?i.command.collection.length?i.command.sibling=t[0]:i.command.collection=t:"object"==typeof t&&t.childNodes&&t.childNodes.length?i.command.collection.length?i.command.sibling=t.childNodes[0]:i.command.collection=f.arrayFromList(t.childNodes):"object"==typeof t?f.extend(i.command,t):"boolean"==typeof t?i.animate=t:"function"==typeof t&&(i.callback=t));if(i.command.index&&i.command.sibling)throw new Error(p.messages.errorInsertInvalidArguments());return!i.command.collection.length&&this.config.debug.showWarnings&&console.warn(p.messages.warningInsertNoElements()),i=this.callFilters("instructionParseInsertArgs",i,arguments),f.freeze(i),i},parseRemoveArgs:function(e){var t,i,n=new p.UserInstruction,s=-1;for(n.animate=this.config.animation.enable,n.command=new p.CommandRemove,s=0;s<e.length;s++)if(null!==(i=e[s]))switch(typeof i){case"number":this.targets[i]&&(n.command.targets[0]=this.targets[i]);break;case"string":n.command.collection=f.arrayFromList(this.dom.parent.querySelectorAll(i));break;case"object":i&&i.length?n.command.collection=i:f.isElement(i,this.dom.document)?n.command.collection=[i]:f.extend(n.command,i);break;case"boolean":n.animate=i;break;case"function":n.callback=i}if(n.command.collection.length)for(s=0;t=this.targets[s];s++)-1<n.command.collection.indexOf(t.dom.el)&&n.command.targets.push(t);return!n.command.targets.length&&this.config.debug.showWarnings&&console.warn(p.messages.warningRemoveNoElements()),f.freeze(n),n},parseDatasetArgs:function(e){var t,i=new p.UserInstruction,n=-1;for(i.animate=this.config.animation.enable,i.command=new p.CommandDataset,n=0;n<e.length;n++)if(null!==(t=e[n]))switch(typeof t){case"object":Array.isArray(t)||"number"==typeof t.length?i.command.dataset=t:f.extend(i.command,t);break;case"boolean":i.animate=t;break;case"function":i.callback=t}return f.freeze(i),i},parseChangeLayoutArgs:function(e){var t,i=new p.UserInstruction,n=-1;for(i.animate=this.config.animation.enable,i.command=new p.CommandChangeLayout,n=0;n<e.length;n++)if(null!==(t=e[n]))switch(typeof t){case"string":i.command.containerClassName=t;break;case"object":f.extend(i.command,t);break;case"boolean":i.animate=t;break;case"function":i.callback=t}return f.freeze(i),i},queueMix:function(e){var t,i=this,n=null;return i.callActions("beforeQueueMix",arguments),n=f.defer(p.libraries),i.config.animation.queue&&i.queue.length<i.config.animation.queueLimit?(e.deferred=n,i.queue.push(e),i.config.controls.enable&&(i.isToggling?(i.buildToggleArray(e.instruction.command),t=i.getToggleSelector(),i.updateControls({filter:{selector:t}})):i.updateControls(e.instruction.command))):(i.config.debug.showWarnings&&console.warn(p.messages.warningMultimixInstanceQueueFull()),n.resolve(i.state),p.events.fire("mixBusy",i.dom.container,{state:i.state,instance:i},i.dom.document),"function"==typeof i.config.callbacks.onMixBusy&&i.config.callbacks.onMixBusy.call(i.dom.container,i.state,i)),i.callFilters("promiseQueueMix",n.promise,arguments)},getDataOperation:function(e){var t=this,i=new p.Operation,n=[],i=t.callFilters("operationUnmappedGetDataOperation",i,arguments);if(t.dom.targets.length&&!(n=t.state.activeDataset||[]).length)throw new Error(p.messages.errorDatasetNotSet());return i.id=f.randomHex(),i.startState=t.state,i.startDataset=n,i.newDataset=e.slice(),t.diffDatasets(i),i.startOrder=t.targets,i.newOrder=i.show,t.config.animation.enable&&(t.getStartMixData(i),t.setInter(i),i.docState=f.getDocumentState(t.dom.document),t.getInterMixData(i),t.setFinal(i),t.getFinalMixData(i),t.parseEffects(),i.hasEffect=t.hasEffect(),t.getTweenData(i)),t.targets=i.show.slice(),i.newState=t.buildState(i),Array.prototype.push.apply(t.targets,i.toRemove),t.callFilters("operationMappedGetDataOperation",i,arguments)},diffDatasets:function(e){var t=this,i=[],n=[],s=[],a=null,r=null,o=null,l=null,c=null,u={},d="",h=-1;for(t.callActions("beforeDiffDatasets",arguments),h=0;a=e.newDataset[h];h++){if(void 0===(d=a[t.config.data.uidKey])||d.toString().length<1)throw new TypeError(p.messages.errorDatasetInvalidUidKey({uidKey:t.config.data.uidKey}));if(u[d])throw new Error(p.messages.errorDatasetDuplicateUid({uid:d}));u[d]=!0,(r=t.cache[d])instanceof p.Target?(t.config.data.dirtyCheck&&!f.deepEquals(a,r.data)&&(o=r.render(a),r.data=a,o!==r.dom.el&&(r.isInDom&&(r.unbindEvents(),t.dom.parent.replaceChild(o,r.dom.el)),r.isShown||(o.style.display="none"),r.dom.el=o,r.isInDom&&r.bindEvents())),o=r.dom.el):((r=new p.Target).init(null,t,a),r.hide()),r.isInDom?(c=r.dom.el.nextElementSibling,n.push(d),l&&(l.lastElementChild&&l.appendChild(t.dom.document.createTextNode(" ")),t.insertDatasetFrag(l,r.dom.el,s),l=null)):((l=l||t.dom.document.createDocumentFragment()).lastElementChild&&l.appendChild(t.dom.document.createTextNode(" ")),l.appendChild(r.dom.el),r.isInDom=!0,r.unbindEvents(),r.bindEvents(),r.hide(),e.toShow.push(r),s.push(r)),e.show.push(r)}for(l&&((c=c||t.config.layout.siblingAfter)&&l.appendChild(t.dom.document.createTextNode(" ")),t.insertDatasetFrag(l,c,s)),h=0;a=e.startDataset[h];h++)d=a[t.config.data.uidKey],r=t.cache[d],e.show.indexOf(r)<0?(e.hide.push(r),e.toHide.push(r),e.toRemove.push(r)):i.push(d);f.isEqualArray(i,n)||(e.willSort=!0),t.callActions("afterDiffDatasets",arguments)},insertDatasetFrag:function(e,t,i){var n=t?f.arrayFromList(this.dom.parent.children).indexOf(t):this.targets.length;for(this.dom.parent.insertBefore(e,t);i.length;)this.targets.splice(n,0,i.shift()),n++},willSort:function(e,t){var i=!!(this.config.behavior.liveSort||"random"===e.order||e.attribute!==t.attribute||e.order!==t.order||e.collection!==t.collection||null===e.next&&t.next||e.next&&null===t.next)||!(!e.next||!t.next)&&this.willSort(e.next,t.next);return this.callFilters("resultWillSort",i,arguments)},show:function(){return this.filter("all")},hide:function(){return this.filter("none")},isMixing:function(){return this.isBusy},filter:function(){var e=this.parseFilterArgs(arguments);return this.multimix({filter:e.command},e.animate,e.callback)},toggleOn:function(){var e,t=this.parseFilterArgs(arguments),i=t.command.selector;return this.isToggling=!0,this.toggleArray.indexOf(i)<0&&this.toggleArray.push(i),e=this.getToggleSelector(),this.multimix({filter:e},t.animate,t.callback)},toggleOff:function(){var e=this.parseFilterArgs(arguments),t=e.command.selector,i=this.toggleArray.indexOf(t);return this.isToggling=!0,-1<i&&this.toggleArray.splice(i,1),t=this.getToggleSelector(),this.multimix({filter:t},e.animate,e.callback)},sort:function(){var e=this.parseSortArgs(arguments);return this.multimix({sort:e.command},e.animate,e.callback)},changeLayout:function(){var e=this.parseChangeLayoutArgs(arguments);return this.multimix({changeLayout:e.command},e.animate,e.callback)},dataset:function(){var e,t,i=this.parseDatasetArgs(arguments),n=null;return this.callActions("beforeDataset",arguments),this.isBusy?((n=new p.QueueItem).args=arguments,n.instruction=i,this.queueMix(n)):(i.callback&&(this.userCallback=i.callback),t=i.animate^this.config.animation.enable?i.animate:this.config.animation.enable,e=this.getDataOperation(i.command.dataset),this.goMix(t,e))},multimix:function(){var e,t,i=this,n=null,s=i.parseMultimixArgs(arguments);return i.callActions("beforeMultimix",arguments),i.isBusy?((n=new p.QueueItem).args=arguments,n.instruction=s,n.triggerElement=i.lastClicked,n.isToggling=i.isToggling,i.queueMix(n)):(e=i.getOperation(s.command),i.config.controls.enable&&(s.command.filter&&!i.isToggling&&(i.toggleArray.length=0,i.buildToggleArray(e.command)),i.queue.length<1&&i.updateControls(e.command)),s.callback&&(i.userCallback=s.callback),t=s.animate^i.config.animation.enable?s.animate:i.config.animation.enable,i.callFilters("operationMultimix",e,arguments),i.goMix(t,e))},getOperation:function(e){var t=this,i=e.sort,n=e.filter,s=e.changeLayout,a=e.remove,r=e.insert,o=new p.Operation;return(o=t.callFilters("operationUnmappedGetOperation",o,arguments)).id=f.randomHex(),o.command=e,o.startState=t.state,o.triggerElement=t.lastClicked,t.isBusy?(t.config.debug.showWarnings&&console.warn(p.messages.warningGetOperationInstanceBusy()),null):(r&&t.insertTargets(r,o),a&&(o.toRemove=a.targets),o.startSort=o.newSort=o.startState.activeSort,o.startOrder=o.newOrder=t.targets,i&&(o.startSort=o.startState.activeSort,o.newSort=i,o.willSort=t.willSort(i,o.startState.activeSort),o.willSort&&t.sortOperation(o)),o.startFilter=o.startState.activeFilter,o.newFilter=n||f.extend(new p.CommandFilter,o.startFilter),"all"===o.newFilter.selector?o.newFilter.selector=t.config.selectors.target:"none"===o.newFilter.selector&&(o.newFilter.selector=""),t.filterOperation(o),o.startContainerClassName=o.startState.activeContainerClassName,s?(o.newContainerClassName=s.containerClassName,o.newContainerClassName!==o.startContainerClassName&&(o.willChangeLayout=!0)):o.newContainerClassName=o.startContainerClassName,t.config.animation.enable&&(t.getStartMixData(o),t.setInter(o),o.docState=f.getDocumentState(t.dom.document),t.getInterMixData(o),t.setFinal(o),t.getFinalMixData(o),t.parseEffects(),o.hasEffect=t.hasEffect(),t.getTweenData(o)),o.willSort&&(t.targets=o.newOrder),o.newState=t.buildState(o),t.callFilters("operationMappedGetOperation",o,arguments))},tween:function(e,t){var i,n=null,s=null,a=-1;for(t=Math.min(t,1),t=Math.max(t,0),a=0;n=e.show[a];a++)s=e.showPosData[a],n.applyTween(s,t);for(a=0;n=e.hide[a];a++)n.isShown&&n.hide(),-1<(i=e.toHide.indexOf(n))&&(s=e.toHidePosData[i],n.isShown||n.show(),n.applyTween(s,t))},insert:function(){var e=this.parseInsertArgs(arguments);return this.multimix({insert:e.command},e.animate,e.callback)},insertBefore:function(){var e=this.parseInsertArgs(arguments);return this.insert(e.command.collection,"before",e.command.sibling,e.animate,e.callback)},insertAfter:function(){var e=this.parseInsertArgs(arguments);return this.insert(e.command.collection,"after",e.command.sibling,e.animate,e.callback)},prepend:function(){var e=this.parseInsertArgs(arguments);return this.insert(0,e.command.collection,e.animate,e.callback)},append:function(){var e=this.parseInsertArgs(arguments);return this.insert(this.state.totalTargets,e.command.collection,e.animate,e.callback)},remove:function(){var e=this.parseRemoveArgs(arguments);return this.multimix({remove:e.command},e.animate,e.callback)},getConfig:function(e){var t=e?f.getProperty(this.config,e):this.config;return this.callFilters("valueGetConfig",t,arguments)},configure:function(e){this.callActions("beforeConfigure",arguments),f.extend(this.config,e,!0,!0),this.callActions("afterConfigure",arguments)},getState:function(){var e=new p.State;return f.extend(e,this.state),f.freeze(e),this.callFilters("stateGetState",e,arguments)},forceRefresh:function(){this.indexTargets()},forceRender:function(){var e=null,t=null,i="";for(i in this.cache)e=this.cache[i],t=e.render(e.data),t!==e.dom.el&&(e.isInDom&&(e.unbindEvents(),this.dom.parent.replaceChild(t,e.dom.el)),e.isShown||(t.style.display="none"),e.dom.el=t,e.isInDom&&e.bindEvents());this.state=this.buildState(this.lastOperation)},destroy:function(e){var t=null,i=null,n=0;for(this.callActions("beforeDestroy",arguments),n=0;t=this.controls[n];n++)t.removeBinding(this);for(n=0;i=this.targets[n];n++)e&&i.show(),i.unbindEvents();this.dom.container.id.match(/^MixItUp/)&&this.dom.container.removeAttribute("id"),delete p.instances[this.id],this.callActions("afterDestroy",arguments)}}),p.IMoveData=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.posIn=null,this.posOut=null,this.operation=null,this.callback=null,this.statusChange="",this.duration=-1,this.staggerIndex=-1,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.IMoveData),p.IMoveData.prototype=Object.create(p.Base.prototype),p.IMoveData.prototype.constructor=p.IMoveData,p.TargetDom=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.el=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.TargetDom),p.TargetDom.prototype=Object.create(p.Base.prototype),p.TargetDom.prototype.constructor=p.TargetDom,p.Target=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.sortString="",this.mixer=null,this.callback=null,this.isShown=!1,this.isBound=!1,this.isExcluded=!1,this.isInDom=!1,this.handler=null,this.operation=null,this.data=null,this.dom=new p.TargetDom,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Target),p.Target.prototype=Object.create(p.Base.prototype),f.extend(p.Target.prototype,{constructor:p.Target,init:function(e,t,i){var n=this,s="";if(n.callActions("beforeInit",arguments),n.mixer=t,e=e||n.render(i),n.cacheDom(e),n.bindEvents(),"none"!==n.dom.el.style.display&&(n.isShown=!0),i&&t.config.data.uidKey){if(void 0===(s=i[t.config.data.uidKey])||s.toString().length<1)throw new TypeError(p.messages.errorDatasetInvalidUidKey({uidKey:t.config.data.uidKey}));n.id=s,n.data=i,t.cache[s]=n}n.callActions("afterInit",arguments)},render:function(e){var t,i=null,n=null,s=null;if(this.callActions("beforeRender",arguments),"function"!=typeof(i=this.callFilters("renderRender",this.mixer.config.render.target,arguments)))throw new TypeError(p.messages.errorDatasetRendererNotSet());return(t=i(e))&&"object"==typeof t&&f.isElement(t)?n=t:"string"==typeof t&&((s=document.createElement("div")).innerHTML=t,n=s.firstElementChild),this.callFilters("elRender",n,arguments)},cacheDom:function(e){this.callActions("beforeCacheDom",arguments),this.dom.el=e,this.callActions("afterCacheDom",arguments)},getSortString:function(e){e=this.dom.el.getAttribute("data-"+e)||"";this.callActions("beforeGetSortString",arguments),e=isNaN(+e)?e.toLowerCase():+e,this.sortString=e,this.callActions("afterGetSortString",arguments)},show:function(){this.callActions("beforeShow",arguments),this.isShown||(this.dom.el.style.display="",this.isShown=!0),this.callActions("afterShow",arguments)},hide:function(){this.callActions("beforeHide",arguments),this.isShown&&(this.dom.el.style.display="none",this.isShown=!1),this.callActions("afterHide",arguments)},move:function(e){var t=this;t.callActions("beforeMove",arguments),t.isExcluded||t.mixer.targetsMoved++,t.applyStylesIn(e),requestAnimationFrame(function(){t.applyStylesOut(e)}),t.callActions("afterMove",arguments)},applyTween:function(e,t){var i,n,s=e.posIn,a=[],r=new p.StyleData,o=-1;for(this.callActions("beforeApplyTween",arguments),r.x=s.x,r.y=s.y,0===t?this.hide():this.isShown||this.show(),o=0;i=p.features.TWEENABLE[o];o++)if(n=e.tweenData[i],"x"===i){if(!n)continue;r.x=s.x+n*t}else if("y"===i){if(!n)continue;r.y=s.y+n*t}else if(n instanceof p.TransformData){if(!n.value)continue;r[i].value=s[i].value+n.value*t,r[i].unit=n.unit,a.push(i+"("+r[i].value+n.unit+")")}else{if(!n)continue;r[i]=s[i]+n*t,this.dom.el.style[i]=r[i]}(r.x||r.y)&&a.unshift("translate("+r.x+"px, "+r.y+"px)"),a.length&&(this.dom.el.style[p.features.transformProp]=a.join(" ")),this.callActions("afterApplyTween",arguments)},applyStylesIn:function(e){var t=this,i=e.posIn,n=1!==t.mixer.effectsIn.opacity,s=[];t.callActions("beforeApplyStylesIn",arguments),s.push("translate("+i.x+"px, "+i.y+"px)"),t.mixer.config.animation.animateResizeTargets&&("show"!==e.statusChange&&(t.dom.el.style.width=i.width+"px",t.dom.el.style.height=i.height+"px"),t.dom.el.style.marginRight=i.marginRight+"px",t.dom.el.style.marginBottom=i.marginBottom+"px"),n&&(t.dom.el.style.opacity=i.opacity),"show"===e.statusChange&&(s=s.concat(t.mixer.transformIn)),t.dom.el.style[p.features.transformProp]=s.join(" "),t.callActions("afterApplyStylesIn",arguments)},applyStylesOut:function(e){var t=this,i=[],n=[],s=t.mixer.config.animation.animateResizeTargets,a=void 0!==t.mixer.effectsIn.opacity;if(t.callActions("beforeApplyStylesOut",arguments),i.push(t.writeTransitionRule(p.features.transformRule,e.staggerIndex)),"none"!==e.statusChange&&i.push(t.writeTransitionRule("opacity",e.staggerIndex,e.duration)),s&&(i.push(t.writeTransitionRule("width",e.staggerIndex,e.duration)),i.push(t.writeTransitionRule("height",e.staggerIndex,e.duration)),i.push(t.writeTransitionRule("margin",e.staggerIndex,e.duration))),!e.callback)return t.mixer.targetsImmovable++,void(t.mixer.targetsMoved===t.mixer.targetsImmovable&&t.mixer.cleanUp(e.operation));switch(t.operation=e.operation,t.callback=e.callback,t.isExcluded||t.mixer.targetsBound++,t.isBound=!0,t.applyTransition(i),s&&0<e.posOut.width&&0<e.posOut.height&&(t.dom.el.style.width=e.posOut.width+"px",t.dom.el.style.height=e.posOut.height+"px",t.dom.el.style.marginRight=e.posOut.marginRight+"px",t.dom.el.style.marginBottom=e.posOut.marginBottom+"px"),t.mixer.config.animation.nudge||"hide"!==e.statusChange||n.push("translate("+e.posOut.x+"px, "+e.posOut.y+"px)"),e.statusChange){case"hide":a&&(t.dom.el.style.opacity=t.mixer.effectsOut.opacity),n=n.concat(t.mixer.transformOut);break;case"show":a&&(t.dom.el.style.opacity=1)}(t.mixer.config.animation.nudge||!t.mixer.config.animation.nudge&&"hide"!==e.statusChange)&&n.push("translate("+e.posOut.x+"px, "+e.posOut.y+"px)"),t.dom.el.style[p.features.transformProp]=n.join(" "),t.callActions("afterApplyStylesOut",arguments)},writeTransitionRule:function(e,t,i){var n=this.getDelay(t),t="",t=e+" "+(0<i?i:this.mixer.config.animation.duration)+"ms "+n+"ms "+("opacity"===e?"linear":this.mixer.config.animation.easing);return this.callFilters("ruleWriteTransitionRule",t,arguments)},getDelay:function(e){var t;return"function"==typeof this.mixer.config.animation.staggerSequence&&(e=this.mixer.config.animation.staggerSequence.call(this,e,this.state)),t=this.mixer.staggerDuration?e*this.mixer.staggerDuration:0,this.callFilters("delayGetDelay",t,arguments)},applyTransition:function(e){e=e.join(", ");this.callActions("beforeApplyTransition",arguments),this.dom.el.style[p.features.transitionProp]=e,this.callActions("afterApplyTransition",arguments)},handleTransitionEnd:function(e){var t=this,i=e.propertyName,n=t.mixer.config.animation.animateResizeTargets;t.callActions("beforeHandleTransitionEnd",arguments),t.isBound&&e.target.matches(t.mixer.config.selectors.target)&&(-1<i.indexOf("transform")||-1<i.indexOf("opacity")||n&&-1<i.indexOf("height")||n&&-1<i.indexOf("width")||n&&-1<i.indexOf("margin"))&&(t.callback.call(t,t.operation),t.isBound=!1,t.callback=null,t.operation=null),t.callActions("afterHandleTransitionEnd",arguments)},eventBus:function(e){switch(this.callActions("beforeEventBus",arguments),e.type){case"webkitTransitionEnd":case"transitionend":this.handleTransitionEnd(e)}this.callActions("afterEventBus",arguments)},unbindEvents:function(){this.callActions("beforeUnbindEvents",arguments),f.off(this.dom.el,"webkitTransitionEnd",this.handler),f.off(this.dom.el,"transitionend",this.handler),this.callActions("afterUnbindEvents",arguments)},bindEvents:function(){var e,t=this;t.callActions("beforeBindEvents",arguments),e="webkit"===p.features.transitionPrefix?"webkitTransitionEnd":"transitionend",t.handler=function(e){return t.eventBus(e)},f.on(t.dom.el,e,t.handler),t.callActions("afterBindEvents",arguments)},getPosData:function(e){var t,i,n=new p.StyleData;return this.callActions("beforeGetPosData",arguments),n.x=this.dom.el.offsetLeft,n.y=this.dom.el.offsetTop,(this.mixer.config.animation.animateResizeTargets||e)&&(i=this.dom.el.getBoundingClientRect(),n.top=i.top,n.right=i.right,n.bottom=i.bottom,n.left=i.left,n.width=i.width,n.height=i.height),this.mixer.config.animation.animateResizeTargets&&(t=h.getComputedStyle(this.dom.el),n.marginBottom=parseFloat(t.marginBottom),n.marginRight=parseFloat(t.marginRight)),this.callFilters("posDataGetPosData",n,arguments)},cleanUp:function(){var e=this;e.callActions("beforeCleanUp",arguments),e.dom.el.style[p.features.transformProp]="",e.dom.el.style[p.features.transitionProp]="",e.dom.el.style.opacity="",e.mixer.config.animation.animateResizeTargets&&(e.dom.el.style.width="",e.dom.el.style.height="",e.dom.el.style.marginRight="",e.dom.el.style.marginBottom=""),e.callActions("afterCleanUp",arguments)}}),p.Collection=function(e){var t,i=-1;for(this.callActions("beforeConstruct"),i=0;t=e[i];i++)this[i]=t;this.length=e.length,this.callActions("afterConstruct"),f.freeze(this)},p.BaseStatic.call(p.Collection),p.Collection.prototype=Object.create(p.Base.prototype),f.extend(p.Collection.prototype,{constructor:p.Collection,mixitup:function(e){var t=null,i=Array.prototype.slice.call(arguments),n=[],s=-1;for(this.callActions("beforeMixitup"),i.shift(),s=0;t=this[s];s++)n.push(t[e].apply(t,i));return this.callFilters("promiseMixitup",f.all(n,p.libraries),arguments)}}),p.Operation=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.args=[],this.command=null,this.showPosData=[],this.toHidePosData=[],this.startState=null,this.newState=null,this.docState=null,this.willSort=!1,this.willChangeLayout=!1,this.hasEffect=!1,this.hasFailed=!1,this.triggerElement=null,this.show=[],this.hide=[],this.matching=[],this.toShow=[],this.toHide=[],this.toMove=[],this.toRemove=[],this.startOrder=[],this.newOrder=[],this.startSort=null,this.newSort=null,this.startFilter=null,this.newFilter=null,this.startDataset=null,this.newDataset=null,this.viewportDeltaX=0,this.viewportDeltaY=0,this.startX=0,this.startY=0,this.startHeight=0,this.startWidth=0,this.newX=0,this.newY=0,this.newHeight=0,this.newWidth=0,this.startContainerClassName="",this.startDisplay="",this.newContainerClassName="",this.newDisplay="",this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.Operation),p.Operation.prototype=Object.create(p.Base.prototype),p.Operation.prototype.constructor=p.Operation,p.State=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.id="",this.activeFilter=null,this.activeSort=null,this.activeContainerClassName="",this.container=null,this.targets=[],this.hide=[],this.show=[],this.matching=[],this.totalTargets=-1,this.totalShow=-1,this.totalHide=-1,this.totalMatching=-1,this.hasFailed=!1,this.triggerElement=null,this.activeDataset=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.State),p.State.prototype=Object.create(p.Base.prototype),p.State.prototype.constructor=p.State,p.UserInstruction=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.command={},this.animate=!1,this.callback=null,this.callActions("afterConstruct"),f.seal(this)},p.BaseStatic.call(p.UserInstruction),p.UserInstruction.prototype=Object.create(p.Base.prototype),p.UserInstruction.prototype.constructor=p.UserInstruction,p.Messages=function(){p.Base.call(this),this.callActions("beforeConstruct"),this.ERROR_FACTORY_INVALID_CONTAINER="[MixItUp] An invalid selector or element reference was passed to the mixitup factory function",this.ERROR_FACTORY_CONTAINER_NOT_FOUND="[MixItUp] The provided selector yielded no container element",this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS="[MixItUp] Invalid value for `animation.effects`",this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE="[MixItUp] Invalid value for `controls.scope`",this.ERROR_CONFIG_INVALID_PROPERTY='[MixitUp] Invalid configuration object property "${erroneous}"${suggestion}',this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION='. Did you mean "${probableMatch}"?',this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET="[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`",this.ERROR_DATASET_INVALID_UID_KEY='[MixItUp] The specified UID key "${uidKey}" is not present on one or more dataset items',this.ERROR_DATASET_DUPLICATE_UID='[MixItUp] The UID "${uid}" was found on two or more dataset items. UIDs must be unique.',this.ERROR_INSERT_INVALID_ARGUMENTS="[MixItUp] Please provider either an index or a sibling and position to insert, not both",this.ERROR_INSERT_PREEXISTING_ELEMENT="[MixItUp] An element to be inserted already exists in the container",this.ERROR_FILTER_INVALID_ARGUMENTS="[MixItUp] Please provide either a selector or collection `.filter()`, not both",this.ERROR_DATASET_NOT_SET="[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`",this.ERROR_DATASET_PRERENDERED_MISMATCH="[MixItUp] `load.dataset` does not match pre-rendered targets",this.ERROR_DATASET_RENDERER_NOT_SET="[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`",this.ERROR_SORT_NON_EXISTENT_ELEMENT="[MixItUp] An element to be sorted does not already exist in the container",this.WARNING_FACTORY_PREEXISTING_INSTANCE="[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored. If you wish to perform additional methods on this instance, please create a reference.",this.WARNING_INSERT_NO_ELEMENTS="[MixItUp] WARNING: No valid elements were passed to `.insert()`",this.WARNING_REMOVE_NO_ELEMENTS="[MixItUp] WARNING: No valid elements were passed to `.remove()`",this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL="[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the queue is full or queuing is disabled.",this.WARNING_GET_OPERATION_INSTANCE_BUSY="[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.",this.WARNING_NO_PROMISE_IMPLEMENTATION="[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install an ES6 Promise polyfill.",this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES='[MixItUp] WARNING: The requested sorting data attribute "${attribute}" was not present on one or more target elements which may product unexpected sort output',this.callActions("afterConstruct"),this.compileTemplates(),f.seal(this)},p.BaseStatic.call(p.Messages),p.Messages.prototype=Object.create(p.Base.prototype),p.Messages.prototype.constructor=p.Messages,p.Messages.prototype.compileTemplates=function(){var e,t="";for(t in this)"string"==typeof(e=this[t])&&(this[f.camelCase(t)]=f.template(e))},p.messages=new p.Messages,p.Facade=function(e){p.Base.call(this),this.callActions("beforeConstruct",arguments),this.configure=e.configure.bind(e),this.show=e.show.bind(e),this.hide=e.hide.bind(e),this.filter=e.filter.bind(e),this.toggleOn=e.toggleOn.bind(e),this.toggleOff=e.toggleOff.bind(e),this.sort=e.sort.bind(e),this.changeLayout=e.changeLayout.bind(e),this.multimix=e.multimix.bind(e),this.dataset=e.dataset.bind(e),this.tween=e.tween.bind(e),this.insert=e.insert.bind(e),this.insertBefore=e.insertBefore.bind(e),this.insertAfter=e.insertAfter.bind(e),this.prepend=e.prepend.bind(e),this.append=e.append.bind(e),this.remove=e.remove.bind(e),this.destroy=e.destroy.bind(e),this.forceRefresh=e.forceRefresh.bind(e),this.forceRender=e.forceRender.bind(e),this.isMixing=e.isMixing.bind(e),this.getOperation=e.getOperation.bind(e),this.getConfig=e.getConfig.bind(e),this.getState=e.getState.bind(e),this.callActions("afterConstruct",arguments),f.freeze(this),f.seal(this)},p.BaseStatic.call(p.Facade),p.Facade.prototype=Object.create(p.Base.prototype),p.Facade.prototype.constructor=p.Facade,"object"==typeof exports&&"object"==typeof module?module.exports=p:"function"==typeof define&&define.amd?define(function(){return p}):void 0!==h.mixitup&&"function"==typeof h.mixitup||(h.mixitup=p),p.BaseStatic.call(p.constructor),p.NAME="mixitup",p.CORE_VERSION="3.3.1"}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
