!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(T,e){"use strict";function m(e){return null!=e&&e===e.window}var t=[],i=Object.getPrototypeOf,o=t.slice,v=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,s=t.indexOf,n={},r=n.toString,g=n.hasOwnProperty,a=g.toString,d=a.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},E=T.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function w(e,t,i){var n,s,r=(i=i||E).createElement("script");if(r.text=e,t)for(n in u)(s=t[n]||t.getAttribute&&t.getAttribute(n))&&r.setAttribute(n,s);i.head.appendChild(r).parentNode.removeChild(r)}function f(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[r.call(e)]||"object":typeof e}var c="3.5.1",C=function(e,t){return new C.fn.init(e,t)};function h(e){var t=!!e&&"length"in e&&e.length,i=f(e);return!b(e)&&!m(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}C.fn=C.prototype={jquery:c,constructor:C,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){e=C.merge(this.constructor(),e);return e.prevObject=this,e},each:function(e){return C.each(this,e)},map:function(i){return this.pushStack(C.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(C.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(C.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,e=+e+(e<0?t:0);return this.pushStack(0<=e&&e<t?[this[e]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},C.extend=C.fn.extend=function(){var e,t,i,n,s,r=arguments[0]||{},a=1,o=arguments.length,l=!1;for("boolean"==typeof r&&(l=r,r=arguments[a]||{},a++),"object"==typeof r||b(r)||(r={}),a===o&&(r=this,a--);a<o;a++)if(null!=(e=arguments[a]))for(t in e)i=e[t],"__proto__"!==t&&r!==i&&(l&&i&&(C.isPlainObject(i)||(n=Array.isArray(i)))?(s=r[t],s=n&&!Array.isArray(s)?[]:n||C.isPlainObject(s)?s:{},n=!1,r[t]=C.extend(l,s,i)):void 0!==i&&(r[t]=i));return r},C.extend({expando:"jQuery"+(c+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){return!(!e||"[object Object]"!==r.call(e))&&(!(e=i(e))||"function"==typeof(e=g.call(e,"constructor")&&e.constructor)&&a.call(e)===d)},isEmptyObject:function(e){for(var t in e)return!1;return!0},globalEval:function(e,t,i){w(e,{nonce:t&&t.nonce},i)},each:function(e,t){var i,n=0;if(h(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},makeArray:function(e,t){t=t||[];return null!=e&&(h(Object(e))?C.merge(t,"string"==typeof e?[e]:e):l.call(t,e)),t},inArray:function(e,t,i){return null==t?-1:s.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,s=e.length;n<i;n++)e[s++]=t[n];return e.length=s,e},grep:function(e,t,i){for(var n=[],s=0,r=e.length,a=!i;s<r;s++)!t(e[s],s)!=a&&n.push(e[s]);return n},map:function(e,t,i){var n,s,r=0,a=[];if(h(e))for(n=e.length;r<n;r++)null!=(s=t(e[r],r,i))&&a.push(s);else for(r in e)null!=(s=t(e[r],r,i))&&a.push(s);return v(a)},guid:1,support:y}),"function"==typeof Symbol&&(C.fn[Symbol.iterator]=t[Symbol.iterator]),C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var p=function(i){function c(e,t){return e="0x"+e.slice(1)-65536,t||(e<0?String.fromCharCode(65536+e):String.fromCharCode(e>>10|55296,1023&e|56320))}function n(){T()}var e,p,w,r,s,f,h,m,x,l,d,T,E,a,C,v,o,u,g,S="sizzle"+ +new Date,y=i.document,M=0,b=0,k=le(),P=le(),L=le(),z=le(),A=function(e,t){return e===t&&(d=!0),0},D={}.hasOwnProperty,t=[],$=t.pop,N=t.push,I=t.push,O=t.slice,H=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},j="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",q="[\\x20\\t\\r\\n\\f]",B="(?:\\\\[\\da-fA-F]{1,6}"+q+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",R="\\["+q+"*("+B+")(?:"+q+"*([*^$|!~]?=)"+q+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+B+"))|)"+q+"*\\]",G=":("+B+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",F=new RegExp(q+"+","g"),W=new RegExp("^"+q+"+|((?:^|[^\\\\])(?:\\\\.)*)"+q+"+$","g"),X=new RegExp("^"+q+"*,"+q+"*"),V=new RegExp("^"+q+"*([>+~]|"+q+")"+q+"*"),Y=new RegExp(q+"|>"),_=new RegExp(G),U=new RegExp("^"+B+"$"),K={ID:new RegExp("^#("+B+")"),CLASS:new RegExp("^\\.("+B+")"),TAG:new RegExp("^("+B+"|[*])"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+G),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+q+"*(even|odd|(([+-]|)(\\d*)n|)"+q+"*(?:([+-]|)"+q+"*(\\d+)|))"+q+"*\\)|)","i"),bool:new RegExp("^(?:"+j+")$","i"),needsContext:new RegExp("^"+q+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+q+"*((?:-\\d)?\\d*)"+q+"*\\)|)(?=[^-]|$)","i")},Q=/HTML$/i,J=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,ne=new RegExp("\\\\[\\da-fA-F]{1,6}"+q+"?|\\\\([^\\r\\n\\f])","g"),se=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},ae=ye(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{I.apply(t=O.call(y.childNodes),y.childNodes),t[y.childNodes.length].nodeType}catch(e){I={apply:t.length?function(e,t){N.apply(e,O.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function oe(t,e,i,n){var s,r,a,o,l,d,u,c=e&&e.ownerDocument,h=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==h&&9!==h&&11!==h)return i;if(!n&&(T(e),e=e||E,C)){if(11!==h&&(l=te.exec(t)))if(s=l[1]){if(9===h){if(!(a=e.getElementById(s)))return i;if(a.id===s)return i.push(a),i}else if(c&&(a=c.getElementById(s))&&g(e,a)&&a.id===s)return i.push(a),i}else{if(l[2])return I.apply(i,e.getElementsByTagName(t)),i;if((s=l[3])&&p.getElementsByClassName&&e.getElementsByClassName)return I.apply(i,e.getElementsByClassName(s)),i}if(p.qsa&&!z[t+" "]&&(!v||!v.test(t))&&(1!==h||"object"!==e.nodeName.toLowerCase())){if(u=t,c=e,1===h&&(Y.test(t)||V.test(t))){for((c=ie.test(t)&&me(e.parentNode)||e)===e&&p.scope||((o=e.getAttribute("id"))?o=o.replace(se,re):e.setAttribute("id",o=S)),r=(d=f(t)).length;r--;)d[r]=(o?"#"+o:":scope")+" "+ge(d[r]);u=d.join(",")}try{return I.apply(i,c.querySelectorAll(u)),i}catch(e){z(t,!0)}finally{o===S&&e.removeAttribute("id")}}}return m(t.replace(W,"$1"),e,i,n)}function le(){var i=[];function n(e,t){return i.push(e+" ")>w.cacheLength&&delete n[i.shift()],n[e+" "]=t}return n}function de(e){return e[S]=!0,e}function ue(e){var t=E.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ce(e,t){for(var i=e.split("|"),n=i.length;n--;)w.attrHandle[i[n]]=t}function he(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function pe(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function fe(a){return de(function(r){return r=+r,de(function(e,t){for(var i,n=a([],e.length,r),s=n.length;s--;)e[i=n[s]]&&(e[i]=!(t[i]=e[i]))})})}function me(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in p=oe.support={},s=oe.isXML=function(e){var t=e.namespaceURI,e=(e.ownerDocument||e).documentElement;return!Q.test(t||e&&e.nodeName||"HTML")},T=oe.setDocument=function(e){var t,e=e?e.ownerDocument||e:y;return e!=E&&9===e.nodeType&&e.documentElement&&(a=(E=e).documentElement,C=!s(E),y!=E&&(t=E.defaultView)&&t.top!==t&&(t.addEventListener?t.addEventListener("unload",n,!1):t.attachEvent&&t.attachEvent("onunload",n)),p.scope=ue(function(e){return a.appendChild(e).appendChild(E.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),p.attributes=ue(function(e){return e.className="i",!e.getAttribute("className")}),p.getElementsByTagName=ue(function(e){return e.appendChild(E.createComment("")),!e.getElementsByTagName("*").length}),p.getElementsByClassName=ee.test(E.getElementsByClassName),p.getById=ue(function(e){return a.appendChild(e).id=S,!E.getElementsByName||!E.getElementsByName(S).length}),p.getById?(w.filter.ID=function(e){var t=e.replace(ne,c);return function(e){return e.getAttribute("id")===t}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&C){e=t.getElementById(e);return e?[e]:[]}}):(w.filter.ID=function(e){var t=e.replace(ne,c);return function(e){e=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return e&&e.value===t}},w.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var i,n,s,r=t.getElementById(e);if(r){if((i=r.getAttributeNode("id"))&&i.value===e)return[r];for(s=t.getElementsByName(e),n=0;r=s[n++];)if((i=r.getAttributeNode("id"))&&i.value===e)return[r]}return[]}}),w.find.TAG=p.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):p.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],s=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;i=r[s++];)1===i.nodeType&&n.push(i);return n},w.find.CLASS=p.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&C)return t.getElementsByClassName(e)},o=[],v=[],(p.qsa=ee.test(E.querySelectorAll))&&(ue(function(e){var t;a.appendChild(e).innerHTML="<a id='"+S+"'></a><select id='"+S+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+q+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||v.push("\\["+q+"*(?:value|"+j+")"),e.querySelectorAll("[id~="+S+"-]").length||v.push("~="),(t=E.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||v.push("\\["+q+"*name"+q+"*="+q+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||v.push(":checked"),e.querySelectorAll("a#"+S+"+*").length||v.push(".#.+[+~]"),e.querySelectorAll("\\\f"),v.push("[\\r\\n\\f]")}),ue(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=E.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&v.push("name"+q+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&v.push(":enabled",":disabled"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&v.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),v.push(",.*:")})),(p.matchesSelector=ee.test(u=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ue(function(e){p.disconnectedMatch=u.call(e,"*"),u.call(e,"[s!='']:x"),o.push("!=",G)}),v=v.length&&new RegExp(v.join("|")),o=o.length&&new RegExp(o.join("|")),t=ee.test(a.compareDocumentPosition),g=t||ee.test(a.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,t=t&&t.parentNode;return e===t||!(!t||1!==t.nodeType||!(i.contains?i.contains(t):e.compareDocumentPosition&&16&e.compareDocumentPosition(t)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},A=t?function(e,t){if(e===t)return d=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!p.sortDetached&&t.compareDocumentPosition(e)===i?e==E||e.ownerDocument==y&&g(y,e)?-1:t==E||t.ownerDocument==y&&g(y,t)?1:l?H(l,e)-H(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,n=0,s=e.parentNode,r=t.parentNode,a=[e],o=[t];if(!s||!r)return e==E?-1:t==E?1:s?-1:r?1:l?H(l,e)-H(l,t):0;if(s===r)return he(e,t);for(i=e;i=i.parentNode;)a.unshift(i);for(i=t;i=i.parentNode;)o.unshift(i);for(;a[n]===o[n];)n++;return n?he(a[n],o[n]):a[n]==y?-1:o[n]==y?1:0}),E},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if(T(e),p.matchesSelector&&C&&!z[t+" "]&&(!o||!o.test(t))&&(!v||!v.test(t)))try{var i=u.call(e,t);if(i||p.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){z(t,!0)}return 0<oe(t,E,null,[e]).length},oe.contains=function(e,t){return(e.ownerDocument||e)!=E&&T(e),g(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!=E&&T(e);var i=w.attrHandle[t.toLowerCase()],i=i&&D.call(w.attrHandle,t.toLowerCase())?i(e,t,!C):void 0;return void 0!==i?i:p.attributes||!C?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},oe.escape=function(e){return(e+"").replace(se,re)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,i=[],n=0,s=0;if(d=!p.detectDuplicates,l=!p.sortStable&&e.slice(0),e.sort(A),d){for(;t=e[s++];)t===e[s]&&(n=i.push(s));for(;n--;)e.splice(i[n],1)}return l=null,e},r=oe.getText=function(e){var t,i="",n=0,s=e.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=r(e)}else if(3===s||4===s)return e.nodeValue}else for(;t=e[n++];)i+=r(t);return i},(w=oe.selectors={cacheLength:50,createPseudo:de,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ne,c),e[3]=(e[3]||e[4]||e[5]||"").replace(ne,c),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&_.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ne,c).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=k[e+" "];return t||(t=new RegExp("(^|"+q+")"+e+"("+q+"|$)"))&&k(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(e){e=oe.attr(e,t);return null==e?"!="===i:!i||(e+="","="===i?e===n:"!="===i?e!==n:"^="===i?n&&0===e.indexOf(n):"*="===i?n&&-1<e.indexOf(n):"$="===i?n&&e.slice(-n.length)===n:"~="===i?-1<(" "+e.replace(F," ")+" ").indexOf(n):"|="===i&&(e===n||e.slice(0,n.length+1)===n+"-"))}},CHILD:function(f,e,t,m,v){var g="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===m&&0===v?function(e){return!!e.parentNode}:function(e,t,i){var n,s,r,a,o,l,d=g!=y?"nextSibling":"previousSibling",u=e.parentNode,c=b&&e.nodeName.toLowerCase(),h=!i&&!b,p=!1;if(u){if(g){for(;d;){for(a=e;a=a[d];)if(b?a.nodeName.toLowerCase()===c:1===a.nodeType)return!1;l=d="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?u.firstChild:u.lastChild],y&&h){for(p=(o=(n=(s=(r=(a=u)[S]||(a[S]={}))[a.uniqueID]||(r[a.uniqueID]={}))[f]||[])[0]===M&&n[1])&&n[2],a=o&&u.childNodes[o];a=++o&&a&&a[d]||(p=o=0)||l.pop();)if(1===a.nodeType&&++p&&a===e){s[f]=[M,o,p];break}}else if(h&&(p=o=(n=(s=(r=(a=e)[S]||(a[S]={}))[a.uniqueID]||(r[a.uniqueID]={}))[f]||[])[0]===M&&n[1]),!1===p)for(;(a=++o&&a&&a[d]||(p=o=0)||l.pop())&&((b?a.nodeName.toLowerCase()!==c:1!==a.nodeType)||!++p||(h&&((s=(r=a[S]||(a[S]={}))[a.uniqueID]||(r[a.uniqueID]={}))[f]=[M,p]),a!==e)););return(p-=v)===m||p%m==0&&0<=p/m}}},PSEUDO:function(e,r){var t,a=w.pseudos[e]||w.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return a[S]?a(r):1<a.length?(t=[e,e,"",r],w.setFilters.hasOwnProperty(e.toLowerCase())?de(function(e,t){for(var i,n=a(e,r),s=n.length;s--;)e[i=H(e,n[s])]=!(t[i]=n[s])}):function(e){return a(e,0,t)}):a}},pseudos:{not:de(function(e){var n=[],s=[],o=h(e.replace(W,"$1"));return o[S]?de(function(e,t,i,n){for(var s,r=o(e,null,n,[]),a=e.length;a--;)(s=r[a])&&(e[a]=!(t[a]=s))}):function(e,t,i){return n[0]=e,o(n,null,i,s),n[0]=null,!s.pop()}}),has:de(function(t){return function(e){return 0<oe(t,e).length}}),contains:de(function(t){return t=t.replace(ne,c),function(e){return-1<(e.textContent||r(e)).indexOf(t)}}),lang:de(function(i){return U.test(i||"")||oe.error("unsupported lang: "+i),i=i.replace(ne,c).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===E.activeElement&&(!E.hasFocus||E.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:pe(!1),disabled:pe(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return Z.test(e.nodeName)},input:function(e){return J.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(e=e.getAttribute("type"))||"text"===e.toLowerCase())},first:fe(function(){return[0]}),last:fe(function(e,t){return[t-1]}),eq:fe(function(e,t,i){return[i<0?i+t:i]}),even:fe(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:fe(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:fe(function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e}),gt:fe(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}}).pseudos.nth=w.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[e]=function(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}(e);for(e in{submit:!0,reset:!0})w.pseudos[e]=function(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}(e);function ve(){}function ge(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function ye(a,e,t){var o=e.dir,l=e.next,d=l||o,u=t&&"parentNode"===d,c=b++;return e.first?function(e,t,i){for(;e=e[o];)if(1===e.nodeType||u)return a(e,t,i);return!1}:function(e,t,i){var n,s,r=[M,c];if(i){for(;e=e[o];)if((1===e.nodeType||u)&&a(e,t,i))return!0}else for(;e=e[o];)if(1===e.nodeType||u)if(n=(s=e[S]||(e[S]={}))[e.uniqueID]||(s[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[o]||e;else{if((s=n[d])&&s[0]===M&&s[1]===c)return r[2]=s[2];if((n[d]=r)[2]=a(e,t,i))return!0}return!1}}function be(s){return 1<s.length?function(e,t,i){for(var n=s.length;n--;)if(!s[n](e,t,i))return!1;return!0}:s[0]}function we(e,t,i,n,s){for(var r,a=[],o=0,l=e.length,d=null!=t;o<l;o++)(r=e[o])&&(i&&!i(r,n,s)||(a.push(r),d&&t.push(o)));return a}function xe(p,f,m,v,g,e){return v&&!v[S]&&(v=xe(v)),g&&!g[S]&&(g=xe(g,e)),de(function(e,t,i,n){var s,r,a,o=[],l=[],d=t.length,u=e||function(e,t,i){for(var n=0,s=t.length;n<s;n++)oe(e,t[n],i);return i}(f||"*",i.nodeType?[i]:i,[]),c=!p||!e&&f?u:we(u,o,p,i,n),h=m?g||(e?p:d||v)?[]:t:c;if(m&&m(c,h,i,n),v)for(s=we(h,l),v(s,[],i,n),r=s.length;r--;)(a=s[r])&&(h[l[r]]=!(c[l[r]]=a));if(e){if(g||p){if(g){for(s=[],r=h.length;r--;)(a=h[r])&&s.push(c[r]=a);g(null,h=[],s,n)}for(r=h.length;r--;)(a=h[r])&&-1<(s=g?H(e,a):o[r])&&(e[s]=!(t[s]=a))}}else h=we(h===t?h.splice(d,h.length):h),g?g(null,t,h,n):I.apply(t,h)})}function Te(v,g){function e(e,t,i,n,s){var r,a,o,l=0,d="0",u=e&&[],c=[],h=x,p=e||b&&w.find.TAG("*",s),f=M+=null==h?1:Math.random()||.1,m=p.length;for(s&&(x=t==E||t||s);d!==m&&null!=(r=p[d]);d++){if(b&&r){for(a=0,t||r.ownerDocument==E||(T(r),i=!C);o=v[a++];)if(o(r,t||E,i)){n.push(r);break}s&&(M=f)}y&&((r=!o&&r)&&l--,e&&u.push(r))}if(l+=d,y&&d!==l){for(a=0;o=g[a++];)o(u,c,t,i);if(e){if(0<l)for(;d--;)u[d]||c[d]||(c[d]=$.call(n));c=we(c)}I.apply(n,c),s&&!e&&0<c.length&&1<l+g.length&&oe.uniqueSort(n)}return s&&(M=f,x=h),u}var y=0<g.length,b=0<v.length;return y?de(e):e}return ve.prototype=w.filters=w.pseudos,w.setFilters=new ve,f=oe.tokenize=function(e,t){var i,n,s,r,a,o,l,d=P[e+" "];if(d)return t?0:d.slice(0);for(a=e,o=[],l=w.preFilter;a;){for(r in i&&!(n=X.exec(a))||(n&&(a=a.slice(n[0].length)||a),o.push(s=[])),i=!1,(n=V.exec(a))&&(i=n.shift(),s.push({value:i,type:n[0].replace(W," ")}),a=a.slice(i.length)),w.filter)!(n=K[r].exec(a))||l[r]&&!(n=l[r](n))||(i=n.shift(),s.push({value:i,type:r,matches:n}),a=a.slice(i.length));if(!i)break}return t?a.length:a?oe.error(e):P(e,o).slice(0)},h=oe.compile=function(e,t){var i,n=[],s=[],r=L[e+" "];if(!r){for(i=(t=t||f(e)).length;i--;)((r=function e(t){for(var n,i,s,r=t.length,a=w.relative[t[0].type],o=a||w.relative[" "],l=a?1:0,d=ye(function(e){return e===n},o,!0),u=ye(function(e){return-1<H(n,e)},o,!0),c=[function(e,t,i){return i=!a&&(i||t!==x)||((n=t).nodeType?d:u)(e,t,i),n=null,i}];l<r;l++)if(i=w.relative[t[l].type])c=[ye(be(c),i)];else{if((i=w.filter[t[l].type].apply(null,t[l].matches))[S]){for(s=++l;s<r&&!w.relative[t[s].type];s++);return xe(1<l&&be(c),1<l&&ge(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(W,"$1"),i,l<s&&e(t.slice(l,s)),s<r&&e(t=t.slice(s)),s<r&&ge(t))}c.push(i)}return be(c)}(t[i]))[S]?n:s).push(r);(r=L(e,Te(s,n))).selector=e}return r},m=oe.select=function(e,t,i,n){var s,r,a,o,l,d="function"==typeof e&&e,u=!n&&f(e=d.selector||e);if(i=i||[],1===u.length){if(2<(r=u[0]=u[0].slice(0)).length&&"ID"===(a=r[0]).type&&9===t.nodeType&&C&&w.relative[r[1].type]){if(!(t=(w.find.ID(a.matches[0].replace(ne,c),t)||[])[0]))return i;d&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(s=K.needsContext.test(e)?0:r.length;s--&&(a=r[s],!w.relative[o=a.type]);)if((l=w.find[o])&&(n=l(a.matches[0].replace(ne,c),ie.test(r[0].type)&&me(t.parentNode)||t))){if(r.splice(s,1),!(e=n.length&&ge(r)))return I.apply(i,n),i;break}}return(d||h(e,u))(n,t,!C,i,!t||ie.test(e)&&me(t.parentNode)||t),i},p.sortStable=S.split("").sort(A).join("")===S,p.detectDuplicates=!!d,T(),p.sortDetached=ue(function(e){return 1&e.compareDocumentPosition(E.createElement("fieldset"))}),ue(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ce("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),p.attributes&&ue(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ce("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ue(function(e){return null==e.getAttribute("disabled")})||ce(j,function(e,t,i){if(!i)return!0===e[t]?t.toLowerCase():(t=e.getAttributeNode(t))&&t.specified?t.value:null}),oe}(T);C.find=p,C.expr=p.selectors,C.expr[":"]=C.expr.pseudos,C.uniqueSort=C.unique=p.uniqueSort,C.text=p.getText,C.isXMLDoc=p.isXML,C.contains=p.contains,C.escapeSelector=p.escape;function x(e,t,i){for(var n=[],s=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(s&&C(e).is(i))break;n.push(e)}return n}function S(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var M=C.expr.match.needsContext;function k(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var P=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function L(e,i,n){return b(i)?C.grep(e,function(e,t){return!!i.call(e,t,e)!==n}):i.nodeType?C.grep(e,function(e){return e===i!==n}):"string"!=typeof i?C.grep(e,function(e){return-1<s.call(i,e)!==n}):C.filter(i,e,n)}C.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?C.find.matchesSelector(n,e)?[n]:[]:C.find.matches(e,C.grep(t,function(e){return 1===e.nodeType}))},C.fn.extend({find:function(e){var t,i,n=this.length,s=this;if("string"!=typeof e)return this.pushStack(C(e).filter(function(){for(t=0;t<n;t++)if(C.contains(s[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)C.find(e,s[t],i);return 1<n?C.uniqueSort(i):i},filter:function(e){return this.pushStack(L(this,e||[],!1))},not:function(e){return this.pushStack(L(this,e||[],!0))},is:function(e){return!!L(this,"string"==typeof e&&M.test(e)?C(e):e||[],!1).length}});var z,A=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(C.fn.init=function(e,t,i){if(!e)return this;if(i=i||z,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==i.ready?i.ready(e):e(C):C.makeArray(e,this);if(!(n="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:A.exec(e))||!n[1]&&t)return(!t||t.jquery?t||i:this.constructor(t)).find(e);if(n[1]){if(t=t instanceof C?t[0]:t,C.merge(this,C.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),P.test(n[1])&&C.isPlainObject(t))for(var n in t)b(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(e=E.getElementById(n[2]))&&(this[0]=e,this.length=1),this}).prototype=C.fn,z=C(E);var D=/^(?:parents|prev(?:Until|All))/,$={children:!0,contents:!0,next:!0,prev:!0};function N(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}C.fn.extend({has:function(e){var t=C(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(C.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,s=this.length,r=[],a="string"!=typeof e&&C(e);if(!M.test(e))for(;n<s;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(a?-1<a.index(i):1===i.nodeType&&C.find.matchesSelector(i,e))){r.push(i);break}return this.pushStack(1<r.length?C.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?s.call(C(e),this[0]):s.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(C.uniqueSort(C.merge(this.get(),C(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),C.each({parent:function(e){e=e.parentNode;return e&&11!==e.nodeType?e:null},parents:function(e){return x(e,"parentNode")},parentsUntil:function(e,t,i){return x(e,"parentNode",i)},next:function(e){return N(e,"nextSibling")},prev:function(e){return N(e,"previousSibling")},nextAll:function(e){return x(e,"nextSibling")},prevAll:function(e){return x(e,"previousSibling")},nextUntil:function(e,t,i){return x(e,"nextSibling",i)},prevUntil:function(e,t,i){return x(e,"previousSibling",i)},siblings:function(e){return S((e.parentNode||{}).firstChild,e)},children:function(e){return S(e.firstChild)},contents:function(e){return null!=e.contentDocument&&i(e.contentDocument)?e.contentDocument:(k(e,"template")&&(e=e.content||e),C.merge([],e.childNodes))}},function(n,s){C.fn[n]=function(e,t){var i=C.map(this,s,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=C.filter(t,i)),1<this.length&&($[n]||C.uniqueSort(i),D.test(n)&&i.reverse()),this.pushStack(i)}});var I=/[^\x20\t\r\n\f]+/g;function O(e){return e}function H(e){throw e}function j(e,t,i,n){var s;try{e&&b(s=e.promise)?s.call(e).done(t).fail(i):e&&b(s=e.then)?s.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}C.Callbacks=function(n){var e,i;n="string"==typeof n?(e=n,i={},C.each(e.match(I)||[],function(e,t){i[t]=!0}),i):C.extend({},n);function s(){for(o=o||n.once,a=r=!0;d.length;u=-1)for(t=d.shift();++u<l.length;)!1===l[u].apply(t[0],t[1])&&n.stopOnFalse&&(u=l.length,t=!1);n.memory||(t=!1),r=!1,o&&(l=t?[]:"")}var r,t,a,o,l=[],d=[],u=-1,c={add:function(){return l&&(t&&!r&&(u=l.length-1,d.push(t)),function i(e){C.each(e,function(e,t){b(t)?n.unique&&c.has(t)||l.push(t):t&&t.length&&"string"!==f(t)&&i(t)})}(arguments),t&&!r&&s()),this},remove:function(){return C.each(arguments,function(e,t){for(var i;-1<(i=C.inArray(t,l,i));)l.splice(i,1),i<=u&&u--}),this},has:function(e){return e?-1<C.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return o=d=[],l=t="",this},disabled:function(){return!l},lock:function(){return o=d=[],t||r||(l=t=""),this},locked:function(){return!!o},fireWith:function(e,t){return o||(t=[e,(t=t||[]).slice?t.slice():t],d.push(t),r||s()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!a}};return c},C.extend({Deferred:function(e){var r=[["notify","progress",C.Callbacks("memory"),C.Callbacks("memory"),2],["resolve","done",C.Callbacks("once memory"),C.Callbacks("once memory"),0,"resolved"],["reject","fail",C.Callbacks("once memory"),C.Callbacks("once memory"),1,"rejected"]],s="pending",a={state:function(){return s},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return a.then(null,e)},pipe:function(){var s=arguments;return C.Deferred(function(n){C.each(r,function(e,t){var i=b(s[t[4]])&&s[t[4]];o[t[1]](function(){var e=i&&i.apply(this,arguments);e&&b(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),s=null}).promise()},then:function(t,i,n){var l=0;function d(s,r,a,o){return function(){function e(){var e,t;if(!(s<l)){if((e=a.apply(i,n))===r.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,b(t)?o?t.call(e,d(l,r,O,o),d(l,r,H,o)):(l++,t.call(e,d(l,r,O,o),d(l,r,H,o),d(l,r,O,r.notifyWith))):(a!==O&&(i=void 0,n=[e]),(o||r.resolveWith)(i,n))}}var i=this,n=arguments,t=o?e:function(){try{e()}catch(e){C.Deferred.exceptionHook&&C.Deferred.exceptionHook(e,t.stackTrace),l<=s+1&&(a!==H&&(i=void 0,n=[e]),r.rejectWith(i,n))}};s?t():(C.Deferred.getStackHook&&(t.stackTrace=C.Deferred.getStackHook()),T.setTimeout(t))}}return C.Deferred(function(e){r[0][3].add(d(0,e,b(n)?n:O,e.notifyWith)),r[1][3].add(d(0,e,b(t)?t:O)),r[2][3].add(d(0,e,b(i)?i:H))}).promise()},promise:function(e){return null!=e?C.extend(e,a):a}},o={};return C.each(r,function(e,t){var i=t[2],n=t[5];a[t[1]]=i.add,n&&i.add(function(){s=n},r[3-e][2].disable,r[3-e][3].disable,r[0][2].lock,r[0][3].lock),i.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=i.fireWith}),a.promise(o),e&&e.call(o,o),o},when:function(e){function t(t){return function(e){s[t]=this,r[t]=1<arguments.length?o.call(arguments):e,--i||a.resolveWith(s,r)}}var i=arguments.length,n=i,s=Array(n),r=o.call(arguments),a=C.Deferred();if(i<=1&&(j(e,a.done(t(n)).resolve,a.reject,!i),"pending"===a.state()||b(r[n]&&r[n].then)))return a.then();for(;n--;)j(r[n],t(n),a.reject);return a.promise()}});var q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;C.Deferred.exceptionHook=function(e,t){T.console&&T.console.warn&&e&&q.test(e.name)&&T.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},C.readyException=function(e){T.setTimeout(function(){throw e})};var B=C.Deferred();function R(){E.removeEventListener("DOMContentLoaded",R),T.removeEventListener("load",R),C.ready()}C.fn.ready=function(e){return B.then(e).catch(function(e){C.readyException(e)}),this},C.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--C.readyWait:C.isReady)||(C.isReady=!0)!==e&&0<--C.readyWait||B.resolveWith(E,[C])}}),C.ready.then=B.then,"complete"===E.readyState||"loading"!==E.readyState&&!E.documentElement.doScroll?T.setTimeout(C.ready):(E.addEventListener("DOMContentLoaded",R),T.addEventListener("load",R));var G=function(e,t,i,n,s,r,a){var o=0,l=e.length,d=null==i;if("object"===f(i))for(o in s=!0,i)G(e,t,o,i[o],!0,r,a);else if(void 0!==n&&(s=!0,b(n)||(a=!0),d&&(t=a?(t.call(e,n),null):(d=t,function(e,t,i){return d.call(C(e),i)})),t))for(;o<l;o++)t(e[o],i,a?n:n.call(e[o],o,t(e[o],i)));return s?e:d?t.call(e):l?t(e[0],i):r},F=/^-ms-/,W=/-([a-z])/g;function X(e,t){return t.toUpperCase()}function V(e){return e.replace(F,"ms-").replace(W,X)}function Y(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function _(){this.expando=C.expando+_.uid++}_.uid=1,_.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Y(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,s=this.cache(e);if("string"==typeof t)s[V(t)]=i;else for(n in t)s[V(n)]=t[n];return s},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][V(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(V):(t=V(t))in n?[t]:t.match(I)||[]).length;for(;i--;)delete n[t[i]]}void 0!==t&&!C.isEmptyObject(n)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){e=e[this.expando];return void 0!==e&&!C.isEmptyObject(e)}};var U=new _,K=new _,Q=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,J=/[A-Z]/g;function Z(e,t,i){var n,s;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(J,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i="true"===(s=i)||"false"!==s&&("null"===s?null:s===+s+""?+s:Q.test(s)?JSON.parse(s):s)}catch(e){}K.set(e,t,i)}else i=void 0;return i}C.extend({hasData:function(e){return K.hasData(e)||U.hasData(e)},data:function(e,t,i){return K.access(e,t,i)},removeData:function(e,t){K.remove(e,t)},_data:function(e,t,i){return U.access(e,t,i)},_removeData:function(e,t){U.remove(e,t)}}),C.fn.extend({data:function(i,e){var t,n,s,r=this[0],a=r&&r.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){K.set(this,i)}):G(this,function(e){var t;return r&&void 0===e?void 0!==(t=K.get(r,i))||void 0!==(t=Z(r,i))?t:void 0:void this.each(function(){K.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(s=K.get(r),1===r.nodeType&&!U.get(r,"hasDataAttrs"))){for(t=a.length;t--;)a[t]&&0===(n=a[t].name).indexOf("data-")&&(n=V(n.slice(5)),Z(r,n,s[n]));U.set(r,"hasDataAttrs",!0)}return s},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),C.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=U.get(e,t),i&&(!n||Array.isArray(i)?n=U.access(e,t,C.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=C.queue(e,t),n=i.length,s=i.shift(),r=C._queueHooks(e,t);"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===t&&i.unshift("inprogress"),delete r.stop,s.call(e,function(){C.dequeue(e,t)},r)),!n&&r&&r.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return U.get(e,i)||U.access(e,i,{empty:C.Callbacks("once memory").add(function(){U.remove(e,[t+"queue",i])})})}}),C.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?C.queue(this[0],t):void 0===i?this:this.each(function(){var e=C.queue(this,t,i);C._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&C.dequeue(this,t)})},dequeue:function(e){return this.each(function(){C.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--s||r.resolveWith(a,[a])}var n,s=1,r=C.Deferred(),a=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(n=U.get(a[o],e+"queueHooks"))&&n.empty&&(s++,n.empty.add(i));return i(),r.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ie=["Top","Right","Bottom","Left"],ne=E.documentElement,se=function(e){return C.contains(e.ownerDocument,e)},re={composed:!0};ne.getRootNode&&(se=function(e){return C.contains(e.ownerDocument,e)||e.getRootNode(re)===e.ownerDocument});var ae=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&se(e)&&"none"===C.css(e,"display")};function oe(e,t,i,n){var s,r,a=20,o=n?function(){return n.cur()}:function(){return C.css(e,t,"")},l=o(),d=i&&i[3]||(C.cssNumber[t]?"":"px"),u=e.nodeType&&(C.cssNumber[t]||"px"!==d&&+l)&&te.exec(C.css(e,t));if(u&&u[3]!==d){for(l/=2,d=d||u[3],u=+l||1;a--;)C.style(e,t,u+d),(1-r)*(1-(r=o()/l||.5))<=0&&(a=0),u/=r;u*=2,C.style(e,t,u+d),i=i||[]}return i&&(u=+u||+l||0,s=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=d,n.start=u,n.end=s)),s}var le={};function de(e,t){for(var i,n,s,r,a,o=[],l=0,d=e.length;l<d;l++)(n=e[l]).style&&(i=n.style.display,t?("none"===i&&(o[l]=U.get(n,"display")||null,o[l]||(n.style.display="")),""===n.style.display&&ae(n)&&(o[l]=(a=r=void 0,r=(s=n).ownerDocument,a=s.nodeName,(s=le[a])||(r=r.body.appendChild(r.createElement(a)),s=C.css(r,"display"),r.parentNode.removeChild(r),"none"===s&&(s="block"),le[a]=s)))):"none"!==i&&(o[l]="none",U.set(n,"display",i)));for(l=0;l<d;l++)null!=o[l]&&(e[l].style.display=o[l]);return e}C.fn.extend({show:function(){return de(this,!0)},hide:function(){return de(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?C(this).show():C(this).hide()})}});var ue=/^(?:checkbox|radio)$/i,ce=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i;c=E.createDocumentFragment().appendChild(E.createElement("div")),(p=E.createElement("input")).setAttribute("type","radio"),p.setAttribute("checked","checked"),p.setAttribute("name","t"),c.appendChild(p),y.checkClone=c.cloneNode(!0).cloneNode(!0).lastChild.checked,c.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!c.cloneNode(!0).lastChild.defaultValue,c.innerHTML="<option></option>",y.option=!!c.lastChild;var pe={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function fe(e,t){var i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&k(e,t)?C.merge([e],i):i}function me(e,t){for(var i=0,n=e.length;i<n;i++)U.set(e[i],"globalEval",!t||U.get(t[i],"globalEval"))}pe.tbody=pe.tfoot=pe.colgroup=pe.caption=pe.thead,pe.th=pe.td,y.option||(pe.optgroup=pe.option=[1,"<select multiple='multiple'>","</select>"]);var ve=/<|&#?\w+;/;function ge(e,t,i,n,s){for(var r,a,o,l,d,u=t.createDocumentFragment(),c=[],h=0,p=e.length;h<p;h++)if((r=e[h])||0===r)if("object"===f(r))C.merge(c,r.nodeType?[r]:r);else if(ve.test(r)){for(a=a||u.appendChild(t.createElement("div")),o=(ce.exec(r)||["",""])[1].toLowerCase(),o=pe[o]||pe._default,a.innerHTML=o[1]+C.htmlPrefilter(r)+o[2],d=o[0];d--;)a=a.lastChild;C.merge(c,a.childNodes),(a=u.firstChild).textContent=""}else c.push(t.createTextNode(r));for(u.textContent="",h=0;r=c[h++];)if(n&&-1<C.inArray(r,n))s&&s.push(r);else if(l=se(r),a=fe(u.appendChild(r),"script"),l&&me(a),i)for(d=0;r=a[d++];)he.test(r.type||"")&&i.push(r);return u}var ye=/^key/,be=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,we=/^([^.]*)(?:\.(.+)|)/;function xe(){return!0}function Te(){return!1}function Ee(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==("focus"===t)}function Ce(e,t,i,n,s,r){var a,o;if("object"==typeof t){for(o in"string"!=typeof i&&(n=n||i,i=void 0),t)Ce(e,o,i,n,t[o],r);return e}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),!1===s)s=Te;else if(!s)return e;return 1===r&&(a=s,(s=function(e){return C().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=C.guid++)),e.each(function(){C.event.add(this,t,s,n,i)})}function Se(e,s,r){r?(U.set(e,s,!1),C.event.add(e,s,{namespace:!1,handler:function(e){var t,i,n=U.get(this,s);if(1&e.isTrigger&&this[s]){if(n.length)(C.event.special[s]||{}).delegateType&&e.stopPropagation();else if(n=o.call(arguments),U.set(this,s,n),t=r(this,s),this[s](),n!==(i=U.get(this,s))||t?U.set(this,s,!1):i={},n!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else n.length&&(U.set(this,s,{value:C.event.trigger(C.extend(n[0],C.Event.prototype),n.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===U.get(e,s)&&C.event.add(e,s,xe)}C.event={global:{},add:function(t,e,i,n,s){var r,a,o,l,d,u,c,h,p,f=U.get(t);if(Y(t))for(i.handler&&(i=(r=i).handler,s=r.selector),s&&C.find.matchesSelector(ne,s),i.guid||(i.guid=C.guid++),(o=f.events)||(o=f.events=Object.create(null)),(a=f.handle)||(a=f.handle=function(e){return void 0!==C&&C.event.triggered!==e.type?C.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(I)||[""]).length;l--;)c=p=(d=we.exec(e[l])||[])[1],h=(d[2]||"").split(".").sort(),c&&(u=C.event.special[c]||{},c=(s?u.delegateType:u.bindType)||c,u=C.event.special[c]||{},d=C.extend({type:c,origType:p,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&C.expr.match.needsContext.test(s),namespace:h.join(".")},r),(p=o[c])||((p=o[c]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,n,h,a)||t.addEventListener&&t.addEventListener(c,a)),u.add&&(u.add.call(t,d),d.handler.guid||(d.handler.guid=i.guid)),s?p.splice(p.delegateCount++,0,d):p.push(d),C.event.global[c]=!0)},remove:function(e,t,i,n,s){var r,a,o,l,d,u,c,h,p,f,m,v=U.hasData(e)&&U.get(e);if(v&&(l=v.events)){for(d=(t=(t||"").match(I)||[""]).length;d--;)if(p=m=(o=we.exec(t[d])||[])[1],f=(o[2]||"").split(".").sort(),p){for(c=C.event.special[p]||{},h=l[p=(n?c.delegateType:c.bindType)||p]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=r=h.length;r--;)u=h[r],!s&&m!==u.origType||i&&i.guid!==u.guid||o&&!o.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(h.splice(r,1),u.selector&&h.delegateCount--,c.remove&&c.remove.call(e,u));a&&!h.length&&(c.teardown&&!1!==c.teardown.call(e,f,v.handle)||C.removeEvent(e,p,v.handle),delete l[p])}else for(p in l)C.event.remove(e,p+t[d],i,n,!0);C.isEmptyObject(l)&&U.remove(e,"handle events")}},dispatch:function(e){var t,i,n,s,r,a=new Array(arguments.length),o=C.event.fix(e),l=(U.get(this,"events")||Object.create(null))[o.type]||[],e=C.event.special[o.type]||{};for(a[0]=o,t=1;t<arguments.length;t++)a[t]=arguments[t];if(o.delegateTarget=this,!e.preDispatch||!1!==e.preDispatch.call(this,o)){for(r=C.event.handlers.call(this,o,l),t=0;(n=r[t++])&&!o.isPropagationStopped();)for(o.currentTarget=n.elem,i=0;(s=n.handlers[i++])&&!o.isImmediatePropagationStopped();)o.rnamespace&&!1!==s.namespace&&!o.rnamespace.test(s.namespace)||(o.handleObj=s,o.data=s.data,void 0!==(s=((C.event.special[s.origType]||{}).handle||s.handler).apply(n.elem,a))&&!1===(o.result=s)&&(o.preventDefault(),o.stopPropagation()));return e.postDispatch&&e.postDispatch.call(this,o),o.result}},handlers:function(e,t){var i,n,s,r,a,o=[],l=t.delegateCount,d=e.target;if(l&&d.nodeType&&!("click"===e.type&&1<=e.button))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==e.type||!0!==d.disabled)){for(r=[],a={},i=0;i<l;i++)void 0===a[s=(n=t[i]).selector+" "]&&(a[s]=n.needsContext?-1<C(s,this).index(d):C.find(s,this,null,[d]).length),a[s]&&r.push(n);r.length&&o.push({elem:d,handlers:r})}return d=this,l<t.length&&o.push({elem:d,handlers:t.slice(l)}),o},addProp:function(t,e){Object.defineProperty(C.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[C.expando]?e:new C.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){e=this||e;return ue.test(e.type)&&e.click&&k(e,"input")&&Se(e,"click",xe),!1},trigger:function(e){e=this||e;return ue.test(e.type)&&e.click&&k(e,"input")&&Se(e,"click"),!0},_default:function(e){e=e.target;return ue.test(e.type)&&e.click&&k(e,"input")&&U.get(e,"click")||k(e,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},C.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},C.Event=function(e,t){if(!(this instanceof C.Event))return new C.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?xe:Te,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&C.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[C.expando]=!0},C.Event.prototype={constructor:C.Event,isDefaultPrevented:Te,isPropagationStopped:Te,isImmediatePropagationStopped:Te,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=xe,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=xe,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=xe,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},C.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&ye.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&be.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},C.event.addProp),C.each({focus:"focusin",blur:"focusout"},function(e,t){C.event.special[e]={setup:function(){return Se(this,e,Ee),!1},trigger:function(){return Se(this,e),!0},delegateType:t}}),C.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,s){C.event.special[e]={delegateType:s,bindType:s,handle:function(e){var t,i=e.relatedTarget,n=e.handleObj;return i&&(i===this||C.contains(this,i))||(e.type=n.origType,t=n.handler.apply(this,arguments),e.type=s),t}}}),C.fn.extend({on:function(e,t,i,n){return Ce(this,e,t,i,n)},one:function(e,t,i,n){return Ce(this,e,t,i,n,1)},off:function(e,t,i){var n,s;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,C(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Te),this.each(function(){C.event.remove(this,e,i,t)});for(s in e)this.off(s,t,e[s]);return this}});var Me=/<script|<style|<link/i,ke=/checked\s*(?:[^=]|=\s*.checked.)/i,Pe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Le(e,t){return k(e,"table")&&k(11!==t.nodeType?t:t.firstChild,"tr")&&C(e).children("tbody")[0]||e}function ze(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ae(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function De(e,t){var i,n,s,r;if(1===t.nodeType){if(U.hasData(e)&&(r=U.get(e).events))for(s in U.remove(t,"handle events"),r)for(i=0,n=r[s].length;i<n;i++)C.event.add(t,s,r[s][i]);K.hasData(e)&&(e=K.access(e),e=C.extend({},e),K.set(t,e))}}function $e(i,n,s,r){n=v(n);var e,t,a,o,l,d,u=0,c=i.length,h=c-1,p=n[0],f=b(p);if(f||1<c&&"string"==typeof p&&!y.checkClone&&ke.test(p))return i.each(function(e){var t=i.eq(e);f&&(n[0]=p.call(this,e,t.html())),$e(t,n,s,r)});if(c&&(t=(e=ge(n,i[0].ownerDocument,!1,i,r)).firstChild,1===e.childNodes.length&&(e=t),t||r)){for(o=(a=C.map(fe(e,"script"),ze)).length;u<c;u++)l=e,u!==h&&(l=C.clone(l,!0,!0),o&&C.merge(a,fe(l,"script"))),s.call(i[u],l,u);if(o)for(d=a[a.length-1].ownerDocument,C.map(a,Ae),u=0;u<o;u++)l=a[u],he.test(l.type||"")&&!U.access(l,"globalEval")&&C.contains(d,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?C._evalUrl&&!l.noModule&&C._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},d):w(l.textContent.replace(Pe,""),l,d))}return i}function Ne(e,t,i){for(var n,s=t?C.filter(t,e):e,r=0;null!=(n=s[r]);r++)i||1!==n.nodeType||C.cleanData(fe(n)),n.parentNode&&(i&&se(n)&&me(fe(n,"script")),n.parentNode.removeChild(n));return e}C.extend({htmlPrefilter:function(e){return e},clone:function(e,t,i){var n,s,r,a,o,l,d,u=e.cloneNode(!0),c=se(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||C.isXMLDoc(e)))for(a=fe(u),n=0,s=(r=fe(e)).length;n<s;n++)o=r[n],l=a[n],d=void 0,"input"===(d=l.nodeName.toLowerCase())&&ue.test(o.type)?l.checked=o.checked:"input"!==d&&"textarea"!==d||(l.defaultValue=o.defaultValue);if(t)if(i)for(r=r||fe(e),a=a||fe(u),n=0,s=r.length;n<s;n++)De(r[n],a[n]);else De(e,u);return 0<(a=fe(u,"script")).length&&me(a,!c&&fe(e,"script")),u},cleanData:function(e){for(var t,i,n,s=C.event.special,r=0;void 0!==(i=e[r]);r++)if(Y(i)){if(t=i[U.expando]){if(t.events)for(n in t.events)s[n]?C.event.remove(i,n):C.removeEvent(i,n,t.handle);i[U.expando]=void 0}i[K.expando]&&(i[K.expando]=void 0)}}}),C.fn.extend({detach:function(e){return Ne(this,e,!0)},remove:function(e){return Ne(this,e)},text:function(e){return G(this,function(e){return void 0===e?C.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return $e(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Le(this,e).appendChild(e)})},prepend:function(){return $e(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=Le(this,e)).insertBefore(e,t.firstChild)})},before:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(C.cleanData(fe(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return C.clone(this,e,t)})},html:function(e){return G(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Me.test(e)&&!pe[(ce.exec(e)||["",""])[1].toLowerCase()]){e=C.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(C.cleanData(fe(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return $e(this,arguments,function(e){var t=this.parentNode;C.inArray(this,i)<0&&(C.cleanData(fe(this)),t&&t.replaceChild(e,this))},i)}}),C.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){C.fn[e]=function(e){for(var t,i=[],n=C(e),s=n.length-1,r=0;r<=s;r++)t=r===s?this:this.clone(!0),C(n[r])[a](t),l.apply(i,t.get());return this.pushStack(i)}});function Ie(e,t,i){var n,s={};for(n in t)s[n]=e.style[n],e.style[n]=t[n];for(n in i=i.call(e),t)e.style[n]=s[n];return i}var Oe,He,je,qe,Be,Re,Ge,Fe,We=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),Xe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=T),t.getComputedStyle(e)},Ve=new RegExp(ie.join("|"),"i");function Ye(){var e;Fe&&(Ge.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Fe.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(Ge).appendChild(Fe),e=T.getComputedStyle(Fe),Oe="1%"!==e.top,Re=12===_e(e.marginLeft),Fe.style.right="60%",qe=36===_e(e.right),He=36===_e(e.width),Fe.style.position="absolute",je=12===_e(Fe.offsetWidth/3),ne.removeChild(Ge),Fe=null)}function _e(e){return Math.round(parseFloat(e))}function Ue(e,t,i){var n,s,r=e.style;return(i=i||Xe(e))&&(""!==(s=i.getPropertyValue(t)||i[t])||se(e)||(s=C.style(e,t)),!y.pixelBoxStyles()&&We.test(s)&&Ve.test(t)&&(n=r.width,e=r.minWidth,t=r.maxWidth,r.minWidth=r.maxWidth=r.width=s,s=i.width,r.width=n,r.minWidth=e,r.maxWidth=t)),void 0!==s?s+"":s}function Ke(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}Ge=E.createElement("div"),(Fe=E.createElement("div")).style&&(Fe.style.backgroundClip="content-box",Fe.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===Fe.style.backgroundClip,C.extend(y,{boxSizingReliable:function(){return Ye(),He},pixelBoxStyles:function(){return Ye(),qe},pixelPosition:function(){return Ye(),Oe},reliableMarginLeft:function(){return Ye(),Re},scrollboxSize:function(){return Ye(),je},reliableTrDimensions:function(){var e,t,i;return null==Be&&(e=E.createElement("table"),i=E.createElement("tr"),t=E.createElement("div"),e.style.cssText="position:absolute;left:-11111px",i.style.height="1px",t.style.height="9px",ne.appendChild(e).appendChild(i).appendChild(t),i=T.getComputedStyle(i),Be=3<parseInt(i.height),ne.removeChild(e)),Be}}));var Qe=["Webkit","Moz","ms"],Je=E.createElement("div").style,Ze={};function et(e){var t=C.cssProps[e]||Ze[e];return t||(e in Je?e:Ze[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=Qe.length;i--;)if((e=Qe[i]+t)in Je)return e}(e)||e)}var tt=/^(none|table(?!-c[ea]).+)/,it=/^--/,nt={position:"absolute",visibility:"hidden",display:"block"},st={letterSpacing:"0",fontWeight:"400"};function rt(e,t,i){var n=te.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function at(e,t,i,n,s,r){var a="width"===t?1:0,o=0,l=0;if(i===(n?"border":"content"))return 0;for(;a<4;a+=2)"margin"===i&&(l+=C.css(e,i+ie[a],!0,s)),n?("content"===i&&(l-=C.css(e,"padding"+ie[a],!0,s)),"margin"!==i&&(l-=C.css(e,"border"+ie[a]+"Width",!0,s))):(l+=C.css(e,"padding"+ie[a],!0,s),"padding"!==i?l+=C.css(e,"border"+ie[a]+"Width",!0,s):o+=C.css(e,"border"+ie[a]+"Width",!0,s));return!n&&0<=r&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-r-l-o-.5))||0),l}function ot(e,t,i){var n=Xe(e),s=(!y.boxSizingReliable()||i)&&"border-box"===C.css(e,"boxSizing",!1,n),r=s,a=Ue(e,t,n),o="offset"+t[0].toUpperCase()+t.slice(1);if(We.test(a)){if(!i)return a;a="auto"}return(!y.boxSizingReliable()&&s||!y.reliableTrDimensions()&&k(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===C.css(e,"display",!1,n))&&e.getClientRects().length&&(s="border-box"===C.css(e,"boxSizing",!1,n),(r=o in e)&&(a=e[o])),(a=parseFloat(a)||0)+at(e,t,i||(s?"border":"content"),r,n,a)+"px"}function lt(e,t,i,n,s){return new lt.prototype.init(e,t,i,n,s)}C.extend({cssHooks:{opacity:{get:function(e,t){if(t){e=Ue(e,"opacity");return""===e?"1":e}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var s,r,a,o=V(t),l=it.test(t),d=e.style;if(l||(t=et(o)),a=C.cssHooks[t]||C.cssHooks[o],void 0===i)return a&&"get"in a&&void 0!==(s=a.get(e,!1,n))?s:d[t];"string"===(r=typeof i)&&(s=te.exec(i))&&s[1]&&(i=oe(e,t,s),r="number"),null!=i&&i==i&&("number"!==r||l||(i+=s&&s[3]||(C.cssNumber[o]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(d[t]="inherit"),a&&"set"in a&&void 0===(i=a.set(e,i,n))||(l?d.setProperty(t,i):d[t]=i))}},css:function(e,t,i,n){var s,r=V(t);return it.test(t)||(t=et(r)),(r=C.cssHooks[t]||C.cssHooks[r])&&"get"in r&&(s=r.get(e,!0,i)),void 0===s&&(s=Ue(e,t,n)),"normal"===s&&t in st&&(s=st[t]),""===i||i?(t=parseFloat(s),!0===i||isFinite(t)?t||0:s):s}}),C.each(["height","width"],function(e,o){C.cssHooks[o]={get:function(e,t,i){if(t)return!tt.test(C.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ot(e,o,i):Ie(e,nt,function(){return ot(e,o,i)})},set:function(e,t,i){var n,s=Xe(e),r=!y.scrollboxSize()&&"absolute"===s.position,a=(r||i)&&"border-box"===C.css(e,"boxSizing",!1,s),i=i?at(e,o,i,a,s):0;return a&&r&&(i-=Math.ceil(e["offset"+o[0].toUpperCase()+o.slice(1)]-parseFloat(s[o])-at(e,o,"border",!1,s)-.5)),i&&(n=te.exec(t))&&"px"!==(n[3]||"px")&&(e.style[o]=t,t=C.css(e,o)),rt(0,t,i)}}}),C.cssHooks.marginLeft=Ke(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ue(e,"marginLeft"))||e.getBoundingClientRect().left-Ie(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),C.each({margin:"",padding:"",border:"Width"},function(s,r){C.cssHooks[s+r]={expand:function(e){for(var t=0,i={},n="string"==typeof e?e.split(" "):[e];t<4;t++)i[s+ie[t]+r]=n[t]||n[t-2]||n[0];return i}},"margin"!==s&&(C.cssHooks[s+r].set=rt)}),C.fn.extend({css:function(e,t){return G(this,function(e,t,i){var n,s,r={},a=0;if(Array.isArray(t)){for(n=Xe(e),s=t.length;a<s;a++)r[t[a]]=C.css(e,t[a],!1,n);return r}return void 0!==i?C.style(e,t,i):C.css(e,t)},e,t,1<arguments.length)}}),(C.Tween=lt).prototype={constructor:lt,init:function(e,t,i,n,s,r){this.elem=e,this.prop=i,this.easing=s||C.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=r||(C.cssNumber[i]?"":"px")},cur:function(){var e=lt.propHooks[this.prop];return(e&&e.get?e:lt.propHooks._default).get(this)},run:function(e){var t,i=lt.propHooks[this.prop];return this.options.duration?this.pos=t=C.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),(i&&i.set?i:lt.propHooks._default).set(this),this}},lt.prototype.init.prototype=lt.prototype,lt.propHooks={_default:{get:function(e){return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(e=C.css(e.elem,e.prop,""))&&"auto"!==e?e:0},set:function(e){C.fx.step[e.prop]?C.fx.step[e.prop](e):1!==e.elem.nodeType||!C.cssHooks[e.prop]&&null==e.elem.style[et(e.prop)]?e.elem[e.prop]=e.now:C.style(e.elem,e.prop,e.now+e.unit)}}},lt.propHooks.scrollTop=lt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},C.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},C.fx=lt.prototype.init,C.fx.step={};var dt,ut,ct=/^(?:toggle|show|hide)$/,ht=/queueHooks$/;function pt(){ut&&(!1===E.hidden&&T.requestAnimationFrame?T.requestAnimationFrame(pt):T.setTimeout(pt,C.fx.interval),C.fx.tick())}function ft(){return T.setTimeout(function(){dt=void 0}),dt=Date.now()}function mt(e,t){var i,n=0,s={height:e};for(t=t?1:0;n<4;n+=2-t)s["margin"+(i=ie[n])]=s["padding"+i]=e;return t&&(s.opacity=s.width=e),s}function vt(e,t,i){for(var n,s=(gt.tweeners[t]||[]).concat(gt.tweeners["*"]),r=0,a=s.length;r<a;r++)if(n=s[r].call(i,t,e))return n}function gt(s,e,t){var i,r,n=0,a=gt.prefilters.length,o=C.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=dt||ft(),e=Math.max(0,d.startTime+d.duration-e),t=1-(e/d.duration||0),i=0,n=d.tweens.length;i<n;i++)d.tweens[i].run(t);return o.notifyWith(s,[d,t,e]),t<1&&n?e:(n||o.notifyWith(s,[d,1,0]),o.resolveWith(s,[d]),!1)},d=o.promise({elem:s,props:C.extend({},e),opts:C.extend(!0,{specialEasing:{},easing:C.easing._default},t),originalProperties:e,originalOptions:t,startTime:dt||ft(),duration:t.duration,tweens:[],createTween:function(e,t){e=C.Tween(s,d.opts,e,t,d.opts.specialEasing[e]||d.opts.easing);return d.tweens.push(e),e},stop:function(e){var t=0,i=e?d.tweens.length:0;if(r)return this;for(r=!0;t<i;t++)d.tweens[t].run(1);return e?(o.notifyWith(s,[d,1,0]),o.resolveWith(s,[d,e])):o.rejectWith(s,[d,e]),this}}),u=d.props;for(!function(e,t){var i,n,s,r,a;for(i in e)if(s=t[n=V(i)],r=e[i],Array.isArray(r)&&(s=r[1],r=e[i]=r[0]),i!==n&&(e[n]=r,delete e[i]),(a=C.cssHooks[n])&&"expand"in a)for(i in r=a.expand(r),delete e[n],r)i in e||(e[i]=r[i],t[i]=s);else t[n]=s}(u,d.opts.specialEasing);n<a;n++)if(i=gt.prefilters[n].call(d,s,u,d.opts))return b(i.stop)&&(C._queueHooks(d.elem,d.opts.queue).stop=i.stop.bind(i)),i;return C.map(u,vt,d),b(d.opts.start)&&d.opts.start.call(s,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),C.fx.timer(C.extend(l,{elem:s,anim:d,queue:d.opts.queue})),d}C.Animation=C.extend(gt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return oe(i.elem,e,te.exec(t),i),i}]},tweener:function(e,t){for(var i,n=0,s=(e=b(e)?(t=e,["*"]):e.match(I)).length;n<s;n++)i=e[n],gt.tweeners[i]=gt.tweeners[i]||[],gt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,s,r,a,o,l,d,u="width"in t||"height"in t,c=this,h={},p=e.style,f=e.nodeType&&ae(e),m=U.get(e,"fxshow");for(n in i.queue||(null==(a=C._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,o=a.empty.fire,a.empty.fire=function(){a.unqueued||o()}),a.unqueued++,c.always(function(){c.always(function(){a.unqueued--,C.queue(e,"fx").length||a.empty.fire()})})),t)if(s=t[n],ct.test(s)){if(delete t[n],r=r||"toggle"===s,s===(f?"hide":"show")){if("show"!==s||!m||void 0===m[n])continue;f=!0}h[n]=m&&m[n]||C.style(e,n)}if((l=!C.isEmptyObject(t))||!C.isEmptyObject(h))for(n in u&&1===e.nodeType&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],null==(d=m&&m.display)&&(d=U.get(e,"display")),"none"===(u=C.css(e,"display"))&&(d?u=d:(de([e],!0),d=e.style.display||d,u=C.css(e,"display"),de([e]))),("inline"===u||"inline-block"===u&&null!=d)&&"none"===C.css(e,"float")&&(l||(c.done(function(){p.display=d}),null==d&&(u=p.display,d="none"===u?"":u)),p.display="inline-block")),i.overflow&&(p.overflow="hidden",c.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]})),l=!1,h)l||(m?"hidden"in m&&(f=m.hidden):m=U.access(e,"fxshow",{display:d}),r&&(m.hidden=!f),f&&de([e],!0),c.done(function(){for(n in f||de([e]),U.remove(e,"fxshow"),h)C.style(e,n,h[n])})),l=vt(f?m[n]:0,n,c),n in m||(m[n]=l.start,f&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?gt.prefilters.unshift(e):gt.prefilters.push(e)}}),C.speed=function(e,t,i){var n=e&&"object"==typeof e?C.extend({},e):{complete:i||!i&&t||b(e)&&e,duration:e,easing:i&&t||t&&!b(t)&&t};return C.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in C.fx.speeds?n.duration=C.fx.speeds[n.duration]:n.duration=C.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){b(n.old)&&n.old.call(this),n.queue&&C.dequeue(this,n.queue)},n},C.fn.extend({fadeTo:function(e,t,i,n){return this.filter(ae).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(t,e,i,n){var s=C.isEmptyObject(t),r=C.speed(e,i,n),n=function(){var e=gt(this,C.extend({},t),r);(s||U.get(this,"finish"))&&e.stop(!0)};return n.finish=n,s||!1===r.queue?this.each(n):this.queue(r.queue,n)},stop:function(s,e,r){function a(e){var t=e.stop;delete e.stop,t(r)}return"string"!=typeof s&&(r=e,e=s,s=void 0),e&&this.queue(s||"fx",[]),this.each(function(){var e=!0,t=null!=s&&s+"queueHooks",i=C.timers,n=U.get(this);if(t)n[t]&&n[t].stop&&a(n[t]);else for(t in n)n[t]&&n[t].stop&&ht.test(t)&&a(n[t]);for(t=i.length;t--;)i[t].elem!==this||null!=s&&i[t].queue!==s||(i[t].anim.stop(r),e=!1,i.splice(t,1));!e&&r||C.dequeue(this,s)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=U.get(this),i=t[a+"queue"],n=t[a+"queueHooks"],s=C.timers,r=i?i.length:0;for(t.finish=!0,C.queue(this,a,[]),n&&n.stop&&n.stop.call(this,!0),e=s.length;e--;)s[e].elem===this&&s[e].queue===a&&(s[e].anim.stop(!0),s.splice(e,1));for(e=0;e<r;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),C.each(["toggle","show","hide"],function(e,n){var s=C.fn[n];C.fn[n]=function(e,t,i){return null==e||"boolean"==typeof e?s.apply(this,arguments):this.animate(mt(n,!0),e,t,i)}}),C.each({slideDown:mt("show"),slideUp:mt("hide"),slideToggle:mt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,n){C.fn[e]=function(e,t,i){return this.animate(n,e,t,i)}}),C.timers=[],C.fx.tick=function(){var e,t=0,i=C.timers;for(dt=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||C.fx.stop(),dt=void 0},C.fx.timer=function(e){C.timers.push(e),C.fx.start()},C.fx.interval=13,C.fx.start=function(){ut||(ut=!0,pt())},C.fx.stop=function(){ut=null},C.fx.speeds={slow:600,fast:200,_default:400},C.fn.delay=function(n,e){return n=C.fx&&C.fx.speeds[n]||n,e=e||"fx",this.queue(e,function(e,t){var i=T.setTimeout(e,n);t.stop=function(){T.clearTimeout(i)}})},c=E.createElement("input"),ee=E.createElement("select").appendChild(E.createElement("option")),c.type="checkbox",y.checkOn=""!==c.value,y.optSelected=ee.selected,(c=E.createElement("input")).value="t",c.type="radio",y.radioValue="t"===c.value;var yt,bt=C.expr.attrHandle;C.fn.extend({attr:function(e,t){return G(this,C.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){C.removeAttr(this,e)})}}),C.extend({attr:function(e,t,i){var n,s,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?C.prop(e,t,i):(1===r&&C.isXMLDoc(e)||(s=C.attrHooks[t.toLowerCase()]||(C.expr.match.bool.test(t)?yt:void 0)),void 0!==i?null===i?void C.removeAttr(e,t):s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:(e.setAttribute(t,i+""),i):!(s&&"get"in s&&null!==(n=s.get(e,t)))&&null==(n=C.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&k(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,s=t&&t.match(I);if(s&&1===e.nodeType)for(;i=s[n++];)e.removeAttribute(i)}}),yt={set:function(e,t,i){return!1===t?C.removeAttr(e,i):e.setAttribute(i,i),i}},C.each(C.expr.match.bool.source.match(/\w+/g),function(e,t){var a=bt[t]||C.find.attr;bt[t]=function(e,t,i){var n,s,r=t.toLowerCase();return i||(s=bt[r],bt[r]=n,n=null!=a(e,t,i)?r:null,bt[r]=s),n}});var wt=/^(?:input|select|textarea|button)$/i,xt=/^(?:a|area)$/i;function Tt(e){return(e.match(I)||[]).join(" ")}function Et(e){return e.getAttribute&&e.getAttribute("class")||""}function Ct(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(I)||[]}C.fn.extend({prop:function(e,t){return G(this,C.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[C.propFix[e]||e]})}}),C.extend({prop:function(e,t,i){var n,s,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&C.isXMLDoc(e)||(t=C.propFix[t]||t,s=C.propHooks[t]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:e[t]=i:s&&"get"in s&&null!==(n=s.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=C.find.attr(e,"tabindex");return t?parseInt(t,10):wt.test(e.nodeName)||xt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(C.propHooks.selected={get:function(e){e=e.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(e){e=e.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),C.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){C.propFix[this.toLowerCase()]=this}),C.fn.extend({addClass:function(t){var e,i,n,s,r,a,o=0;if(b(t))return this.each(function(e){C(this).addClass(t.call(this,e,Et(this)))});if((e=Ct(t)).length)for(;i=this[o++];)if(a=Et(i),n=1===i.nodeType&&" "+Tt(a)+" "){for(r=0;s=e[r++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");a!==(a=Tt(n))&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,s,r,a,o=0;if(b(t))return this.each(function(e){C(this).removeClass(t.call(this,e,Et(this)))});if(!arguments.length)return this.attr("class","");if((e=Ct(t)).length)for(;i=this[o++];)if(a=Et(i),n=1===i.nodeType&&" "+Tt(a)+" "){for(r=0;s=e[r++];)for(;-1<n.indexOf(" "+s+" ");)n=n.replace(" "+s+" "," ");a!==(a=Tt(n))&&i.setAttribute("class",a)}return this},toggleClass:function(s,t){var r=typeof s,a="string"==r||Array.isArray(s);return"boolean"==typeof t&&a?t?this.addClass(s):this.removeClass(s):b(s)?this.each(function(e){C(this).toggleClass(s.call(this,e,Et(this),t),t)}):this.each(function(){var e,t,i,n;if(a)for(t=0,i=C(this),n=Ct(s);e=n[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==s&&"boolean"!=r||((e=Et(this))&&U.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==s&&U.get(this,"__className__")||""))})},hasClass:function(e){for(var t,i=0,n=" "+e+" ";t=this[i++];)if(1===t.nodeType&&-1<(" "+Tt(Et(t))+" ").indexOf(n))return!0;return!1}});var St=/\r/g;C.fn.extend({val:function(t){var i,e,n,s=this[0];return arguments.length?(n=b(t),this.each(function(e){1===this.nodeType&&(null==(e=n?t.call(this,e,C(this).val()):t)?e="":"number"==typeof e?e+="":Array.isArray(e)&&(e=C.map(e,function(e){return null==e?"":e+""})),(i=C.valHooks[this.type]||C.valHooks[this.nodeName.toLowerCase()])&&"set"in i&&void 0!==i.set(this,e,"value")||(this.value=e))})):s?(i=C.valHooks[s.type]||C.valHooks[s.nodeName.toLowerCase()])&&"get"in i&&void 0!==(e=i.get(s,"value"))?e:"string"==typeof(e=s.value)?e.replace(St,""):null==e?"":e:void 0}}),C.extend({valHooks:{option:{get:function(e){var t=C.find.attr(e,"value");return null!=t?t:Tt(C.text(e))}},select:{get:function(e){for(var t,i=e.options,n=e.selectedIndex,s="select-one"===e.type,r=s?null:[],a=s?n+1:i.length,o=n<0?a:s?n:0;o<a;o++)if(((t=i[o]).selected||o===n)&&!t.disabled&&(!t.parentNode.disabled||!k(t.parentNode,"optgroup"))){if(t=C(t).val(),s)return t;r.push(t)}return r},set:function(e,t){for(var i,n,s=e.options,r=C.makeArray(t),a=s.length;a--;)((n=s[a]).selected=-1<C.inArray(C.valHooks.option.get(n),r))&&(i=!0);return i||(e.selectedIndex=-1),r}}}}),C.each(["radio","checkbox"],function(){C.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<C.inArray(C(e).val(),t)}},y.checkOn||(C.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in T;function Mt(e){e.stopPropagation()}var kt=/^(?:focusinfocus|focusoutblur)$/;C.extend(C.event,{trigger:function(e,t,i,n){var s,r,a,o,l,d,u,c=[i||E],h=g.call(e,"type")?e.type:e,p=g.call(e,"namespace")?e.namespace.split("."):[],f=u=r=i=i||E;if(3!==i.nodeType&&8!==i.nodeType&&!kt.test(h+C.event.triggered)&&(-1<h.indexOf(".")&&(h=(p=h.split(".")).shift(),p.sort()),o=h.indexOf(":")<0&&"on"+h,(e=e[C.expando]?e:new C.Event(h,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:C.makeArray(t,[e]),d=C.event.special[h]||{},n||!d.trigger||!1!==d.trigger.apply(i,t))){if(!n&&!d.noBubble&&!m(i)){for(a=d.delegateType||h,kt.test(a+h)||(f=f.parentNode);f;f=f.parentNode)c.push(f),r=f;r===(i.ownerDocument||E)&&c.push(r.defaultView||r.parentWindow||T)}for(s=0;(f=c[s++])&&!e.isPropagationStopped();)u=f,e.type=1<s?a:d.bindType||h,(l=(U.get(f,"events")||Object.create(null))[e.type]&&U.get(f,"handle"))&&l.apply(f,t),(l=o&&f[o])&&l.apply&&Y(f)&&(e.result=l.apply(f,t),!1===e.result&&e.preventDefault());return e.type=h,n||e.isDefaultPrevented()||d._default&&!1!==d._default.apply(c.pop(),t)||!Y(i)||o&&b(i[h])&&!m(i)&&((r=i[o])&&(i[o]=null),C.event.triggered=h,e.isPropagationStopped()&&u.addEventListener(h,Mt),i[h](),e.isPropagationStopped()&&u.removeEventListener(h,Mt),C.event.triggered=void 0,r&&(i[o]=r)),e.result}},simulate:function(e,t,i){e=C.extend(new C.Event,i,{type:e,isSimulated:!0});C.event.trigger(e,null,t)}}),C.fn.extend({trigger:function(e,t){return this.each(function(){C.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return C.event.trigger(e,t,i,!0)}}),y.focusin||C.each({focus:"focusin",blur:"focusout"},function(i,n){function s(e){C.event.simulate(n,e.target,C.event.fix(e))}C.event.special[n]={setup:function(){var e=this.ownerDocument||this.document||this,t=U.access(e,n);t||e.addEventListener(i,s,!0),U.access(e,n,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=U.access(e,n)-1;t?U.access(e,n,t):(e.removeEventListener(i,s,!0),U.remove(e,n))}}});var Pt=T.location,Lt={guid:Date.now()},zt=/\?/;C.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new T.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||C.error("Invalid XML: "+e),t};var At=/\[\]$/,Dt=/\r?\n/g,$t=/^(?:submit|button|image|reset|file)$/i,Nt=/^(?:input|select|textarea|keygen)/i;C.param=function(e,t){function i(e,t){t=b(t)?t():t,s[s.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==t?"":t)}var n,s=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!C.isPlainObject(e))C.each(e,function(){i(this.name,this.value)});else for(n in e)!function i(n,e,s,r){if(Array.isArray(e))C.each(e,function(e,t){s||At.test(n)?r(n,t):i(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,s,r)});else if(s||"object"!==f(e))r(n,e);else for(var t in e)i(n+"["+t+"]",e[t],s,r)}(n,e[n],t,i);return s.join("&")},C.fn.extend({serialize:function(){return C.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=C.prop(this,"elements");return e?C.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!C(this).is(":disabled")&&Nt.test(this.nodeName)&&!$t.test(e)&&(this.checked||!ue.test(e))}).map(function(e,t){var i=C(this).val();return null==i?null:Array.isArray(i)?C.map(i,function(e){return{name:t.name,value:e.replace(Dt,"\r\n")}}):{name:t.name,value:i.replace(Dt,"\r\n")}}).get()}});var It=/%20/g,Ot=/#.*$/,Ht=/([?&])_=[^&]*/,jt=/^(.*?):[ \t]*([^\r\n]*)$/gm,qt=/^(?:GET|HEAD)$/,Bt=/^\/\//,Rt={},Gt={},Ft="*/".concat("*"),Wt=E.createElement("a");function Xt(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,n=0,s=e.toLowerCase().match(I)||[];if(b(t))for(;i=s[n++];)"+"===i[0]?(i=i.slice(1)||"*",(r[i]=r[i]||[]).unshift(t)):(r[i]=r[i]||[]).push(t)}}function Vt(t,n,s,r){var a={},o=t===Gt;function l(e){var i;return a[e]=!0,C.each(t[e]||[],function(e,t){t=t(n,s,r);return"string"!=typeof t||o||a[t]?o?!(i=t):void 0:(n.dataTypes.unshift(t),l(t),!1)}),i}return l(n.dataTypes[0])||!a["*"]&&l("*")}function Yt(e,t){var i,n,s=C.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((s[i]?e:n=n||{})[i]=t[i]);return n&&C.extend(!0,e,n),e}Wt.href=Pt.href,C.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Pt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Pt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ft,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":C.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Yt(Yt(e,C.ajaxSettings),t):Yt(C.ajaxSettings,e)},ajaxPrefilter:Xt(Rt),ajaxTransport:Xt(Gt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var l,d,u,i,c,n,h,p,s,f=C.ajaxSetup({},t),m=f.context||f,v=f.context&&(m.nodeType||m.jquery)?C(m):C.event,g=C.Deferred(),y=C.Callbacks("once memory"),b=f.statusCode||{},r={},a={},o="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(h){if(!i)for(i={};t=jt.exec(u);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?u:null},setRequestHeader:function(e,t){return null==h&&(e=a[e.toLowerCase()]=a[e.toLowerCase()]||e,r[e]=t),this},overrideMimeType:function(e){return null==h&&(f.mimeType=e),this},statusCode:function(e){if(e)if(h)w.always(e[w.status]);else for(var t in e)b[t]=[b[t],e[t]];return this},abort:function(e){e=e||o;return l&&l.abort(e),x(0,e),this}};if(g.promise(w),f.url=((e||f.url||Pt.href)+"").replace(Bt,Pt.protocol+"//"),f.type=t.method||t.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(I)||[""],null==f.crossDomain){n=E.createElement("a");try{n.href=f.url,n.href=n.href,f.crossDomain=Wt.protocol+"//"+Wt.host!=n.protocol+"//"+n.host}catch(e){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=C.param(f.data,f.traditional)),Vt(Rt,f,t,w),h)return w;for(s in(p=C.event&&f.global)&&0==C.active++&&C.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!qt.test(f.type),d=f.url.replace(Ot,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(It,"+")):(e=f.url.slice(d.length),f.data&&(f.processData||"string"==typeof f.data)&&(d+=(zt.test(d)?"&":"?")+f.data,delete f.data),!1===f.cache&&(d=d.replace(Ht,"$1"),e=(zt.test(d)?"&":"?")+"_="+Lt.guid+++e),f.url=d+e),f.ifModified&&(C.lastModified[d]&&w.setRequestHeader("If-Modified-Since",C.lastModified[d]),C.etag[d]&&w.setRequestHeader("If-None-Match",C.etag[d])),(f.data&&f.hasContent&&!1!==f.contentType||t.contentType)&&w.setRequestHeader("Content-Type",f.contentType),w.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Ft+"; q=0.01":""):f.accepts["*"]),f.headers)w.setRequestHeader(s,f.headers[s]);if(f.beforeSend&&(!1===f.beforeSend.call(m,w,f)||h))return w.abort();if(o="abort",y.add(f.complete),w.done(f.success),w.fail(f.error),l=Vt(Gt,f,t,w)){if(w.readyState=1,p&&v.trigger("ajaxSend",[w,f]),h)return w;f.async&&0<f.timeout&&(c=T.setTimeout(function(){w.abort("timeout")},f.timeout));try{h=!1,l.send(r,x)}catch(e){if(h)throw e;x(-1,e)}}else x(-1,"No Transport");function x(e,t,i,n){var s,r,a,o=t;h||(h=!0,c&&T.clearTimeout(c),l=void 0,u=n||"",w.readyState=0<e?4:0,n=200<=e&&e<300||304===e,i&&(a=function(e,t,i){for(var n,s,r,a,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(s in o)if(o[s]&&o[s].test(n)){l.unshift(s);break}if(l[0]in i)r=l[0];else{for(s in i){if(!l[0]||e.converters[s+" "+l[0]]){r=s;break}a=a||s}r=r||a}if(r)return r!==l[0]&&l.unshift(r),i[r]}(f,w,i)),!n&&-1<C.inArray("script",f.dataTypes)&&(f.converters["text script"]=function(){}),a=function(e,t,i,n){var s,r,a,o,l,d={},u=e.dataTypes.slice();if(u[1])for(a in e.converters)d[a.toLowerCase()]=e.converters[a];for(r=u.shift();r;)if(e.responseFields[r]&&(i[e.responseFields[r]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(a=d[l+" "+r]||d["* "+r]))for(s in d)if(o=s.split(" "),o[1]===r&&(a=d[l+" "+o[0]]||d["* "+o[0]])){!0===a?a=d[s]:!0!==d[s]&&(r=o[0],u.unshift(o[1]));break}if(!0!==a)if(a&&e.throws)t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(f,a,w,n),n?(f.ifModified&&((i=w.getResponseHeader("Last-Modified"))&&(C.lastModified[d]=i),(i=w.getResponseHeader("etag"))&&(C.etag[d]=i)),204===e||"HEAD"===f.type?o="nocontent":304===e?o="notmodified":(o=a.state,s=a.data,n=!(r=a.error))):(r=o,!e&&o||(o="error",e<0&&(e=0))),w.status=e,w.statusText=(t||o)+"",n?g.resolveWith(m,[s,o,w]):g.rejectWith(m,[w,o,r]),w.statusCode(b),b=void 0,p&&v.trigger(n?"ajaxSuccess":"ajaxError",[w,f,n?s:r]),y.fireWith(m,[w,o]),p&&(v.trigger("ajaxComplete",[w,f]),--C.active||C.event.trigger("ajaxStop")))}return w},getJSON:function(e,t,i){return C.get(e,t,i,"json")},getScript:function(e,t){return C.get(e,void 0,t,"script")}}),C.each(["get","post"],function(e,s){C[s]=function(e,t,i,n){return b(t)&&(n=n||i,i=t,t=void 0),C.ajax(C.extend({url:e,type:s,dataType:n,data:t,success:i},C.isPlainObject(e)&&e))}}),C.ajaxPrefilter(function(e){for(var t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),C._evalUrl=function(e,t,i){return C.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){C.globalEval(e,t,i)}})},C.fn.extend({wrapAll:function(e){return this[0]&&(b(e)&&(e=e.call(this[0])),e=C(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return b(i)?this.each(function(e){C(this).wrapInner(i.call(this,e))}):this.each(function(){var e=C(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=b(t);return this.each(function(e){C(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){C(this).replaceWith(this.childNodes)}),this}}),C.expr.pseudos.hidden=function(e){return!C.expr.pseudos.visible(e)},C.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},C.ajaxSettings.xhr=function(){try{return new T.XMLHttpRequest}catch(e){}};var _t={0:200,1223:204},Ut=C.ajaxSettings.xhr();y.cors=!!Ut&&"withCredentials"in Ut,y.ajax=Ut=!!Ut,C.ajaxTransport(function(s){var r,a;if(y.cors||Ut&&!s.crossDomain)return{send:function(e,t){var i,n=s.xhr();if(n.open(s.type,s.url,s.async,s.username,s.password),s.xhrFields)for(i in s.xhrFields)n[i]=s.xhrFields[i];for(i in s.mimeType&&n.overrideMimeType&&n.overrideMimeType(s.mimeType),s.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)n.setRequestHeader(i,e[i]);r=function(e){return function(){r&&(r=a=n.onload=n.onerror=n.onabort=n.ontimeout=n.onreadystatechange=null,"abort"===e?n.abort():"error"===e?"number"!=typeof n.status?t(0,"error"):t(n.status,n.statusText):t(_t[n.status]||n.status,n.statusText,"text"!==(n.responseType||"text")||"string"!=typeof n.responseText?{binary:n.response}:{text:n.responseText},n.getAllResponseHeaders()))}},n.onload=r(),a=n.onerror=n.ontimeout=r("error"),void 0!==n.onabort?n.onabort=a:n.onreadystatechange=function(){4===n.readyState&&T.setTimeout(function(){r&&a()})},r=r("abort");try{n.send(s.hasContent&&s.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}}),C.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),C.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return C.globalEval(e),e}}}),C.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),C.ajaxTransport("script",function(i){var n,s;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){n=C("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",s=function(e){n.remove(),s=null,e&&t("error"===e.type?404:200,e.type)}),E.head.appendChild(n[0])},abort:function(){s&&s()}}});var Kt=[],Qt=/(=)\?(?=&|$)|\?\?/;C.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Kt.pop()||C.expando+"_"+Lt.guid++;return this[e]=!0,e}}),C.ajaxPrefilter("json jsonp",function(e,t,i){var n,s,r,a=!1!==e.jsonp&&(Qt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Qt.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return n=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Qt,"$1"+n):!1!==e.jsonp&&(e.url+=(zt.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return r||C.error(n+" was not called"),r[0]},e.dataTypes[0]="json",s=T[n],T[n]=function(){r=arguments},i.always(function(){void 0===s?C(T).removeProp(n):T[n]=s,e[n]&&(e.jsonpCallback=t.jsonpCallback,Kt.push(n)),r&&b(s)&&s(r[0]),r=s=void 0}),"script"}),y.createHTMLDocument=((c=E.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===c.childNodes.length),C.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((n=(t=E.implementation.createHTMLDocument("")).createElement("base")).href=E.location.href,t.head.appendChild(n)):t=E),n=!i&&[],(i=P.exec(e))?[t.createElement(i[1])]:(i=ge([e],t,n),n&&n.length&&C(n).remove(),C.merge([],i.childNodes)));var n},C.fn.load=function(e,t,i){var n,s,r,a=this,o=e.indexOf(" ");return-1<o&&(n=Tt(e.slice(o)),e=e.slice(0,o)),b(t)?(i=t,t=void 0):t&&"object"==typeof t&&(s="POST"),0<a.length&&C.ajax({url:e,type:s||"GET",dataType:"html",data:t}).done(function(e){r=arguments,a.html(n?C("<div>").append(C.parseHTML(e)).find(n):e)}).always(i&&function(e,t){a.each(function(){i.apply(this,r||[e.responseText,t,e])})}),this},C.expr.pseudos.animated=function(t){return C.grep(C.timers,function(e){return t===e.elem}).length},C.offset={setOffset:function(e,t,i){var n,s,r,a,o=C.css(e,"position"),l=C(e),d={};"static"===o&&(e.style.position="relative"),r=l.offset(),n=C.css(e,"top"),a=C.css(e,"left"),a=("absolute"===o||"fixed"===o)&&-1<(n+a).indexOf("auto")?(s=(o=l.position()).top,o.left):(s=parseFloat(n)||0,parseFloat(a)||0),b(t)&&(t=t.call(e,i,C.extend({},r))),null!=t.top&&(d.top=t.top-r.top+s),null!=t.left&&(d.left=t.left-r.left+a),"using"in t?t.using.call(e,d):("number"==typeof d.top&&(d.top+="px"),"number"==typeof d.left&&(d.left+="px"),l.css(d))}},C.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){C.offset.setOffset(this,t,e)});var e,i=this[0];return i?i.getClientRects().length?(e=i.getBoundingClientRect(),i=i.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],s={top:0,left:0};if("fixed"===C.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===C.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((s=C(e).offset()).top+=C.css(e,"borderTopWidth",!0),s.left+=C.css(e,"borderLeftWidth",!0))}return{top:t.top-s.top-C.css(n,"marginTop",!0),left:t.left-s.left-C.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===C.css(e,"position");)e=e.offsetParent;return e||ne})}}),C.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,s){var r="pageYOffset"===s;C.fn[t]=function(e){return G(this,function(e,t,i){var n;return m(e)?n=e:9===e.nodeType&&(n=e.defaultView),void 0===i?n?n[s]:e[t]:void(n?n.scrollTo(r?n.pageXOffset:i,r?i:n.pageYOffset):e[t]=i)},t,e,arguments.length)}}),C.each(["top","left"],function(e,i){C.cssHooks[i]=Ke(y.pixelPosition,function(e,t){if(t)return t=Ue(e,i),We.test(t)?C(e).position()[i]+"px":t})}),C.each({Height:"height",Width:"width"},function(a,o){C.each({padding:"inner"+a,content:o,"":"outer"+a},function(n,r){C.fn[r]=function(e,t){var i=arguments.length&&(n||"boolean"!=typeof e),s=n||(!0===e||!0===t?"margin":"border");return G(this,function(e,t,i){var n;return m(e)?0===r.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+a],n["scroll"+a],e.body["offset"+a],n["offset"+a],n["client"+a])):void 0===i?C.css(e,t,s):C.style(e,t,i,s)},o,i?e:void 0,i)}})}),C.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){C.fn[t]=function(e){return this.on(t,e)}}),C.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){C.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}});var Jt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;C.proxy=function(e,t){var i,n;if("string"==typeof t&&(n=e[t],t=e,e=n),b(e))return i=o.call(arguments,2),(n=function(){return e.apply(t||this,i.concat(o.call(arguments)))}).guid=e.guid=e.guid||C.guid++,n},C.holdReady=function(e){e?C.readyWait++:C.ready(!0)},C.isArray=Array.isArray,C.parseJSON=JSON.parse,C.nodeName=k,C.isFunction=b,C.isWindow=m,C.camelCase=V,C.type=f,C.now=Date.now,C.isNumeric=function(e){var t=C.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},C.trim=function(e){return null==e?"":(e+"").replace(Jt,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return C});var Zt=T.jQuery,ei=T.$;return C.noConflict=function(e){return T.$===C&&(T.$=ei),e&&T.jQuery===C&&(T.jQuery=Zt),C},void 0===e&&(T.jQuery=T.$=C),C}),function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Swiper=t()}(this,function(){"use strict";function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function t(){return(t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i,n=arguments[t];for(i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function n(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function s(t,i){void 0===t&&(t={}),void 0===i&&(i={}),Object.keys(i).forEach(function(e){void 0===t[e]?t[e]=i[e]:n(i[e])&&n(t[e])&&0<Object.keys(i[e]).length&&s(t[e],i[e])})}var i={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function g(){var e="undefined"!=typeof document?document:{};return s(e,i),e}var r={document:i,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}},requestAnimationFrame:function(e){return"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0)},cancelAnimationFrame:function(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function U(){var e="undefined"!=typeof window?window:{};return s(e,r),e}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t,i){return(l=function(){if("undefined"!=typeof Reflect&&Reflect.construct&&!Reflect.construct.sham){if("function"==typeof Proxy)return 1;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),1}catch(e){return}}}()?Reflect.construct:function(e,t,i){var n=[null];n.push.apply(n,t);n=new(Function.bind.apply(e,n));return i&&o(n,i.prototype),n}).apply(null,arguments)}function d(e){var i="function"==typeof Map?new Map:void 0;return(d=function(e){if(null===e||-1===Function.toString.call(e).indexOf("[native code]"))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==i){if(i.has(e))return i.get(e);i.set(e,t)}function t(){return l(e,arguments,a(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),o(t,e)})(e)}var u,c=(u=d(Array),N=u,($=h).prototype=Object.create(N.prototype),($.prototype.constructor=$).__proto__=N,h);function h(e){var t=u.call.apply(u,[this].concat(e))||this,e=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(t),i=e.__proto__;return Object.defineProperty(e,"__proto__",{get:function(){return i},set:function(e){i.__proto__=e}}),t}function p(e){void 0===e&&(e=[]);var t=[];return e.forEach(function(e){Array.isArray(e)?t.push.apply(t,p(e)):t.push(e)}),t}function f(e,t){return Array.prototype.filter.call(e,t)}function E(e,s){var t=U(),r=g(),i=[];if(!s&&e instanceof c)return e;if(!e)return new c(i);if("string"==typeof e){var n=e.trim();if(0<=n.indexOf("<")&&0<=n.indexOf(">")){var a="div";0===n.indexOf("<li")&&(a="ul"),0===n.indexOf("<tr")&&(a="tbody"),0!==n.indexOf("<td")&&0!==n.indexOf("<th")||(a="tr"),0===n.indexOf("<tbody")&&(a="table"),0===n.indexOf("<option")&&(a="select");var o=r.createElement(a);o.innerHTML=n;for(var l=0;l<o.childNodes.length;l+=1)i.push(o.childNodes[l])}else i=function(e){if("string"!=typeof e)return[e];for(var t=[],i=(s||r).querySelectorAll(e),n=0;n<i.length;n+=1)t.push(i[n]);return t}(e.trim())}else if(e.nodeType||e===t||e===r)i.push(e);else if(Array.isArray(e)){if(e instanceof c)return e;i=e}return new c(function(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}(i))}E.fn=c.prototype;var m,x,T,v={addClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=p(t.map(function(e){return e.split(" ")}));return this.forEach(function(e){(e=e.classList).add.apply(e,n)}),this},removeClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=p(t.map(function(e){return e.split(" ")}));return this.forEach(function(e){(e=e.classList).remove.apply(e,n)}),this},hasClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=p(t.map(function(e){return e.split(" ")}));return 0<f(this,function(t){return 0<n.filter(function(e){return t.classList.contains(e)}).length}).length},toggleClass:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=p(t.map(function(e){return e.split(" ")}));this.forEach(function(t){n.forEach(function(e){t.classList.toggle(e)})})},attr:function(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var i=0;i<this.length;i+=1)if(2===arguments.length)this[i].setAttribute(e,t);else for(var n in e)this[i][n]=e[n],this[i].setAttribute(n,e[n]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},transform:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transform=e;return this},transition:function(e){for(var t=0;t<this.length;t+=1)this[t].style.transition="string"!=typeof e?e+"ms":e;return this},on:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=t[0],r=t[1],a=t[2],s=t[3];function o(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),E(t).is(r))a.apply(t,i);else for(var n=E(t).parents(),s=0;s<n.length;s+=1)E(n[s]).is(r)&&a.apply(n[s],i)}}function l(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),a.apply(this,t)}"function"==typeof t[1]&&(n=t[0],a=t[1],s=t[2],r=void 0),s=s||!1;for(var d,u=n.split(" "),c=0;c<this.length;c+=1){var h=this[c];if(r)for(d=0;d<u.length;d+=1){var p=u[d];h.dom7LiveListeners||(h.dom7LiveListeners={}),h.dom7LiveListeners[p]||(h.dom7LiveListeners[p]=[]),h.dom7LiveListeners[p].push({listener:a,proxyListener:o}),h.addEventListener(p,o,s)}else for(d=0;d<u.length;d+=1){var f=u[d];h.dom7Listeners||(h.dom7Listeners={}),h.dom7Listeners[f]||(h.dom7Listeners[f]=[]),h.dom7Listeners[f].push({listener:a,proxyListener:l}),h.addEventListener(f,l,s)}}return this},off:function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];var n=t[0],s=t[1],r=t[2],a=t[3];"function"==typeof t[1]&&(n=t[0],r=t[1],a=t[2],s=void 0),a=a||!1;for(var o=n.split(" "),l=0;l<o.length;l+=1)for(var d=o[l],u=0;u<this.length;u+=1){var c=this[u],h=void 0;if(!s&&c.dom7Listeners?h=c.dom7Listeners[d]:s&&c.dom7LiveListeners&&(h=c.dom7LiveListeners[d]),h&&h.length)for(var p=h.length-1;0<=p;--p){var f=h[p];!(r&&f.listener===r||r&&f.listener&&f.listener.dom7proxy&&f.listener.dom7proxy===r)&&r||(c.removeEventListener(d,f.proxyListener,a),h.splice(p,1))}}return this},trigger:function(){for(var e=U(),t=arguments.length,i=new Array(t),n=0;n<t;n++)i[n]=arguments[n];for(var s=i[0].split(" "),r=i[1],a=0;a<s.length;a+=1)for(var o=s[a],l=0;l<this.length;l+=1){var d,u=this[l];e.CustomEvent&&(d=new e.CustomEvent(o,{detail:r,bubbles:!0,cancelable:!0}),u.dom7EventData=i.filter(function(e,t){return 0<t}),u.dispatchEvent(d),u.dom7EventData=[],delete u.dom7EventData)}return this},transitionEnd:function(i){var n=this;return i&&n.on("transitionend",function e(t){t.target===this&&(i.call(this,t),n.off("transitionend",e))}),this},outerWidth:function(e){if(0<this.length){if(e){e=this.styles();return this[0].offsetWidth+parseFloat(e.getPropertyValue("margin-right"))+parseFloat(e.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){e=this.styles();return this[0].offsetHeight+parseFloat(e.getPropertyValue("margin-top"))+parseFloat(e.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},styles:function(){var e=U();return this[0]?e.getComputedStyle(this[0],null):{}},offset:function(){if(0<this.length){var e=U(),t=g(),i=this[0],n=i.getBoundingClientRect(),s=t.body,r=i.clientTop||s.clientTop||0,t=i.clientLeft||s.clientLeft||0,s=i===e?e.scrollY:i.scrollTop,i=i===e?e.scrollX:i.scrollLeft;return{top:n.top+s-r,left:n.left+i-t}}return null},css:function(e,t){var i,n=U();if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var s in e)this[i].style[s]=e[s];return this}if(this[0])return n.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(i){return i&&this.forEach(function(e,t){i.apply(e,[e,t])}),this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:null;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,n=U(),s=g(),r=this[0];if(!r||void 0===e)return!1;if("string"==typeof e){if(r.matches)return r.matches(e);if(r.webkitMatchesSelector)return r.webkitMatchesSelector(e);if(r.msMatchesSelector)return r.msMatchesSelector(e);for(t=E(e),i=0;i<t.length;i+=1)if(t[i]===r)return!0;return!1}if(e===s)return r===s;if(e===n)return r===n;if(e.nodeType||e instanceof c){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===r)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t=this.length;if(t-1<e)return E([]);if(e<0){t=t+e;return E(t<0?[]:[this[t]])}return E([this[e]])},append:function(){for(var e,t=g(),i=0;i<arguments.length;i+=1){e=i<0||arguments.length<=i?void 0:arguments[i];for(var n=0;n<this.length;n+=1)if("string"==typeof e){var s=t.createElement("div");for(s.innerHTML=e;s.firstChild;)this[n].appendChild(s.firstChild)}else if(e instanceof c)for(var r=0;r<e.length;r+=1)this[n].appendChild(e[r]);else this[n].appendChild(e)}return this},prepend:function(e){for(var t,i=g(),n=0;n<this.length;n+=1)if("string"==typeof e){var s=i.createElement("div");for(s.innerHTML=e,t=s.childNodes.length-1;0<=t;--t)this[n].insertBefore(s.childNodes[t],this[n].childNodes[0])}else if(e instanceof c)for(t=0;t<e.length;t+=1)this[n].insertBefore(e[t],this[n].childNodes[0]);else this[n].insertBefore(e,this[n].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&E(this[0].nextElementSibling).is(e)?E([this[0].nextElementSibling]):E([]):this[0].nextElementSibling?E([this[0].nextElementSibling]):E([]):E([])},nextAll:function(e){var t=[],i=this[0];if(!i)return E([]);for(;i.nextElementSibling;){var n=i.nextElementSibling;e&&!E(n).is(e)||t.push(n),i=n}return E(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&E(t.previousElementSibling).is(e)?E([t.previousElementSibling]):E([]):t.previousElementSibling?E([t.previousElementSibling]):E([])}return E([])},prevAll:function(e){var t=[],i=this[0];if(!i)return E([]);for(;i.previousElementSibling;){var n=i.previousElementSibling;e&&!E(n).is(e)||t.push(n),i=n}return E(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null===this[i].parentNode||e&&!E(this[i].parentNode).is(e)||t.push(this[i].parentNode);return E(t)},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].parentNode;n;)e&&!E(n).is(e)||t.push(n),n=n.parentNode;return E(t)},closest:function(e){var t=this;return void 0===e?E([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].querySelectorAll(e),s=0;s<n.length;s+=1)t.push(n[s]);return E(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].children,s=0;s<n.length;s+=1)e&&!E(n[s]).is(e)||t.push(n[s]);return E(t)},filter:function(e){return E(f(this,e))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this}};function C(e,t){return void 0===t&&(t=0),setTimeout(e,t)}function S(){return Date.now()}function y(e,t){void 0===t&&(t="x");var i,n,s,r=U(),e=r.getComputedStyle(e,null);return r.WebKitCSSMatrix?(6<(n=e.transform||e.webkitTransform).split(",").length&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),s=new r.WebKitCSSMatrix("none"===n?"":n)):i=(s=e.MozTransform||e.OTransform||e.MsTransform||e.msTransform||e.transform||e.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(n=r.WebKitCSSMatrix?s.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=r.WebKitCSSMatrix?s.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),n||0}function b(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object}function K(e){for(var t=Object(arguments.length<=0?void 0:e),i=1;i<arguments.length;i+=1){var n=i<0||arguments.length<=i?void 0:arguments[i];if(null!=n)for(var s=Object.keys(Object(n)),r=0,a=s.length;r<a;r+=1){var o=s[r],l=Object.getOwnPropertyDescriptor(n,o);void 0!==l&&l.enumerable&&(b(t[o])&&b(n[o])?K(t[o],n[o]):!b(t[o])&&b(n[o])?(t[o]={},K(t[o],n[o])):t[o]=n[o])}}return t}function w(i,n){Object.keys(n).forEach(function(t){b(n[t])&&Object.keys(n[t]).forEach(function(e){"function"==typeof n[t][e]&&(n[t][e]=n[t][e].bind(i))}),i[t]=n[t]})}function M(){return m||(i=U(),e=g(),m={touch:!!("ontouchstart"in i||i.DocumentTouch&&e instanceof i.DocumentTouch),pointerEvents:!!i.PointerEvent&&"maxTouchPoints"in i.navigator&&0<=i.navigator.maxTouchPoints,observer:"MutationObserver"in i||"WebkitMutationObserver"in i,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});i.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in i}),m;var i,e}Object.keys(v).forEach(function(e){E.fn[e]=v[e]});var k={name:"resize",create:function(){var e=this;K(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(e){var t=U();t.addEventListener("resize",e.resize.resizeHandler),t.addEventListener("orientationchange",e.resize.orientationChangeHandler)},destroy:function(e){var t=U();t.removeEventListener("resize",e.resize.resizeHandler),t.removeEventListener("orientationchange",e.resize.orientationChangeHandler)}}},P={attach:function(e,t){void 0===t&&(t={});var i=U(),n=this,s=new(i.MutationObserver||i.WebkitMutationObserver)(function(e){var t;1!==e.length?(t=function(){n.emit("observerUpdate",e[0])},i.requestAnimationFrame?i.requestAnimationFrame(t):i.setTimeout(t,0)):n.emit("observerUpdate",e[0])});s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),n.observer.observers.push(s)},init:function(){if(this.support.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:this.params.observeSlideChildren}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},L={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){w(this,{observer:t(t({},P),{},{observers:[]})})},on:{init:function(e){e.observer.init()},destroy:function(e){e.observer.destroy()}}};function z(){var e,t,i=this.params,n=this.el;n&&0===n.offsetWidth||(i.breakpoints&&this.setBreakpoint(),e=this.allowSlideNext,t=this.allowSlidePrev,n=this.snapGrid,this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),this.updateSlidesClasses(),("auto"===i.slidesPerView||1<i.slidesPerView)&&this.isEnd&&!this.isBeginning&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0),this.autoplay&&this.autoplay.running&&this.autoplay.paused&&this.autoplay.run(),this.allowSlidePrev=t,this.allowSlideNext=e,this.params.watchOverflow&&n!==this.snapGrid&&this.checkOverflow())}var A=!1;function D(){}var $,N,I,O={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,nested:!1,width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,loopPreventsSlide:!0,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0,_emitClasses:!1},H={modular:{useParams:function(t){var i=this;i.modules&&Object.keys(i.modules).forEach(function(e){e=i.modules[e];e.params&&K(t,e.params)})},useModules:function(i){void 0===i&&(i={});var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var t=n.modules[e],e=i[e]||{};t.on&&n.on&&Object.keys(t.on).forEach(function(e){n.on(e,t.on[e])}),t.create&&t.create.bind(n)(e)})}},eventsEmitter:{on:function(e,t,i){var n=this;if("function"!=typeof t)return n;var s=i?"unshift":"push";return e.split(" ").forEach(function(e){n.eventsListeners[e]||(n.eventsListeners[e]=[]),n.eventsListeners[e][s](t)}),n},once:function(n,s,e){var r=this;return"function"!=typeof s?r:(a.__emitterProxy=s,r.on(n,a,e));function a(){r.off(n,a),a.__emitterProxy&&delete a.__emitterProxy;for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];s.apply(r,t)}},onAny:function(e,t){if("function"!=typeof e)return this;t=t?"unshift":"push";return this.eventsAnyListeners.indexOf(e)<0&&this.eventsAnyListeners[t](e),this},offAny:function(e){if(!this.eventsAnyListeners)return this;e=this.eventsAnyListeners.indexOf(e);return 0<=e&&this.eventsAnyListeners.splice(e,1),this},off:function(e,n){var s=this;return s.eventsListeners&&e.split(" ").forEach(function(i){void 0===n?s.eventsListeners[i]=[]:s.eventsListeners[i]&&s.eventsListeners[i].forEach(function(e,t){(e===n||e.__emitterProxy&&e.__emitterProxy===n)&&s.eventsListeners[i].splice(t,1)})}),s},emit:function(){var e,n,s,r=this;if(!r.eventsListeners)return r;for(var t=arguments.length,i=new Array(t),a=0;a<t;a++)i[a]=arguments[a];return s="string"==typeof i[0]||Array.isArray(i[0])?(e=i[0],n=i.slice(1,i.length),r):(e=i[0].events,n=i[0].data,i[0].context||r),n.unshift(s),(Array.isArray(e)?e:e.split(" ")).forEach(function(t){var i;r.eventsAnyListeners&&r.eventsAnyListeners.length&&r.eventsAnyListeners.forEach(function(e){e.apply(s,[t].concat(n))}),r.eventsListeners&&r.eventsListeners[t]&&(i=[],r.eventsListeners[t].forEach(function(e){i.push(e)}),i.forEach(function(e){e.apply(s,n)}))}),r}},update:{updateSize:function(){var e=this.$el,t=void 0!==this.params.width&&null!==this.params.width?this.params.width:e[0].clientWidth,i=void 0!==this.params.height&&null!==this.params.width?this.params.height:e[0].clientHeight;0===t&&this.isHorizontal()||0===i&&this.isVertical()||(t=t-parseInt(e.css("padding-left")||0,10)-parseInt(e.css("padding-right")||0,10),i=i-parseInt(e.css("padding-top")||0,10)-parseInt(e.css("padding-bottom")||0,10),Number.isNaN(t)&&(t=0),Number.isNaN(i)&&(i=0),K(this,{width:t,height:i,size:this.isHorizontal()?t:i}))},updateSlides:function(){var e=U(),i=this.params,t=this.$wrapperEl,n=this.size,s=this.rtlTranslate,r=this.wrongRTL,a=this.virtual&&i.virtual.enabled,o=(a?this.virtual:this).slides.length,l=t.children("."+this.params.slideClass),d=(a?this.virtual.slides:l).length,u=[],c=[],h=[];function p(e,t){return!i.cssMode||t!==l.length-1}var f=i.slidesOffsetBefore;"function"==typeof f&&(f=i.slidesOffsetBefore.call(this));var m=i.slidesOffsetAfter;"function"==typeof m&&(m=i.slidesOffsetAfter.call(this));var v,g=this.snapGrid.length,a=this.snapGrid.length,y=i.spaceBetween,b=-f,w=0,x=0;if(void 0!==n){"string"==typeof y&&0<=y.indexOf("%")&&(y=parseFloat(y.replace("%",""))/100*n),this.virtualSize=-y,s?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),1<i.slidesPerColumn&&(v=Math.floor(d/i.slidesPerColumn)===d/this.params.slidesPerColumn?d:Math.ceil(d/i.slidesPerColumn)*i.slidesPerColumn,"auto"!==i.slidesPerView&&"row"===i.slidesPerColumnFill&&(v=Math.max(v,i.slidesPerView*i.slidesPerColumn)));for(var T,E,C,S,M,k=i.slidesPerColumn,P=v/k,L=Math.floor(d/i.slidesPerColumn),z=0;z<d;z+=1){O=0;var A,D,$,N,I,O,H,j,q,B,R,G,F,W=l.eq(z);1<i.slidesPerColumn&&(I=N=$=void 0,"row"===i.slidesPerColumnFill&&1<i.slidesPerGroup?(D=Math.floor(z/(i.slidesPerGroup*i.slidesPerColumn)),A=z-i.slidesPerColumn*i.slidesPerGroup*D,G=0===D?i.slidesPerGroup:Math.min(Math.ceil((d-D*k*i.slidesPerGroup)/k),i.slidesPerGroup),$=(N=A-(I=Math.floor(A/G))*G+D*i.slidesPerGroup)+I*v/k,W.css({"-webkit-box-ordinal-group":$,"-moz-box-ordinal-group":$,"-ms-flex-order":$,"-webkit-order":$,order:$})):"column"===i.slidesPerColumnFill?(I=z-(N=Math.floor(z/k))*k,(L<N||N===L&&I===k-1)&&(I+=1)>=k&&(I=0,N+=1)):N=z-(I=Math.floor(z/P))*P,W.css("margin-"+(this.isHorizontal()?"top":"left"),0!==I&&i.spaceBetween&&i.spaceBetween+"px")),"none"!==W.css("display")&&("auto"===i.slidesPerView?(G=e.getComputedStyle(W[0],null),D=W[0].style.transform,$=W[0].style.webkitTransform,D&&(W[0].style.transform="none"),$&&(W[0].style.webkitTransform="none"),O=i.roundLengths?this.isHorizontal()?W.outerWidth(!0):W.outerHeight(!0):this.isHorizontal()?(N=parseFloat(G.getPropertyValue("width")||0),H=parseFloat(G.getPropertyValue("padding-left")||0),j=parseFloat(G.getPropertyValue("padding-right")||0),q=parseFloat(G.getPropertyValue("margin-left")||0),B=parseFloat(G.getPropertyValue("margin-right")||0),(I=G.getPropertyValue("box-sizing"))&&"border-box"===I?N+q+B:(F=(R=W[0]).clientWidth,N+H+j+q+B+(R.offsetWidth-F))):(H=parseFloat(G.getPropertyValue("height")||0),j=parseFloat(G.getPropertyValue("padding-top")||0),q=parseFloat(G.getPropertyValue("padding-bottom")||0),B=parseFloat(G.getPropertyValue("margin-top")||0),R=parseFloat(G.getPropertyValue("margin-bottom")||0),(F=G.getPropertyValue("box-sizing"))&&"border-box"===F?H+B+R:(F=(G=W[0]).clientHeight,H+j+q+B+R+(G.offsetHeight-F))),D&&(W[0].style.transform=D),$&&(W[0].style.webkitTransform=$),i.roundLengths&&(O=Math.floor(O))):(O=(n-(i.slidesPerView-1)*y)/i.slidesPerView,i.roundLengths&&(O=Math.floor(O)),l[z]&&(this.isHorizontal()?l[z].style.width=O+"px":l[z].style.height=O+"px")),l[z]&&(l[z].swiperSlideSize=O),h.push(O),i.centeredSlides?(b=b+O/2+w/2+y,0===w&&0!==z&&(b=b-n/2-y),0===z&&(b=b-n/2-y),Math.abs(b)<.001&&(b=0),i.roundLengths&&(b=Math.floor(b)),x%i.slidesPerGroup==0&&u.push(b),c.push(b)):(i.roundLengths&&(b=Math.floor(b)),(x-Math.min(this.params.slidesPerGroupSkip,x))%this.params.slidesPerGroup==0&&u.push(b),c.push(b),b=b+O+y),this.virtualSize+=O+y,w=O,x+=1)}if(this.virtualSize=Math.max(this.virtualSize,n)+m,s&&r&&("slide"===i.effect||"coverflow"===i.effect)&&t.css({width:this.virtualSize+i.spaceBetween+"px"}),i.setWrapperSize&&(this.isHorizontal()?t.css({width:this.virtualSize+i.spaceBetween+"px"}):t.css({height:this.virtualSize+i.spaceBetween+"px"})),1<i.slidesPerColumn&&(this.virtualSize=(O+i.spaceBetween)*v,this.virtualSize=Math.ceil(this.virtualSize/i.slidesPerColumn)-i.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+i.spaceBetween+"px"}):t.css({height:this.virtualSize+i.spaceBetween+"px"}),i.centeredSlides)){T=[];for(var X=0;X<u.length;X+=1){var V=u[X];i.roundLengths&&(V=Math.floor(V)),u[X]<this.virtualSize+u[0]&&T.push(V)}u=T}if(!i.centeredSlides){T=[];for(var Y=0;Y<u.length;Y+=1){var _=u[Y];i.roundLengths&&(_=Math.floor(_)),u[Y]<=this.virtualSize-n&&T.push(_)}u=T,1<Math.floor(this.virtualSize-n)-Math.floor(u[u.length-1])&&u.push(this.virtualSize-n)}0===u.length&&(u=[0]),0!==i.spaceBetween&&(this.isHorizontal()?s?l.filter(p).css({marginLeft:y+"px"}):l.filter(p).css({marginRight:y+"px"}):l.filter(p).css({marginBottom:y+"px"})),i.centeredSlides&&i.centeredSlidesBounds&&(E=0,h.forEach(function(e){E+=e+(i.spaceBetween||0)}),C=(E-=i.spaceBetween)-n,u=u.map(function(e){return e<0?-f:C<e?C+m:e})),i.centerInsufficientSlides&&(S=0,h.forEach(function(e){S+=e+(i.spaceBetween||0)}),(S-=i.spaceBetween)<n&&(M=(n-S)/2,u.forEach(function(e,t){u[t]=e-M}),c.forEach(function(e,t){c[t]=e+M}))),K(this,{slides:l,snapGrid:u,slidesGrid:c,slidesSizesGrid:h}),d!==o&&this.emit("slidesLengthChange"),u.length!==g&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),c.length!==a&&this.emit("slidesGridLengthChange"),(i.watchSlidesProgress||i.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i,n=[],s=0;if("number"==typeof e?this.setTransition(e):!0===e&&this.setTransition(this.params.speed),"auto"!==this.params.slidesPerView&&1<this.params.slidesPerView)if(this.params.centeredSlides)this.visibleSlides.each(function(e){n.push(e)});else for(t=0;t<Math.ceil(this.params.slidesPerView);t+=1){var r=this.activeIndex+t;if(r>this.slides.length)break;n.push(this.slides.eq(r)[0])}else n.push(this.slides.eq(this.activeIndex)[0]);for(t=0;t<n.length;t+=1)void 0!==n[t]&&(s=s<(i=n[t].offsetHeight)?i:s);s&&this.$wrapperEl.css("height",s+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this.params,i=this.slides,n=this.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var s=n?e:-e;i.removeClass(t.slideVisibleClass),this.visibleSlidesIndexes=[],this.visibleSlides=[];for(var r=0;r<i.length;r+=1){var a,o,l=i[r],d=(s+(t.centeredSlides?this.minTranslate():0)-l.swiperSlideOffset)/(l.swiperSlideSize+t.spaceBetween);(t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight)&&(o=(a=-(s-l.swiperSlideOffset))+this.slidesSizesGrid[r],(0<=a&&a<this.size-1||1<o&&o<=this.size||a<=0&&o>=this.size)&&(this.visibleSlides.push(l),this.visibleSlidesIndexes.push(r),i.eq(r).addClass(t.slideVisibleClass))),l.progress=n?-d:d}this.visibleSlides=E(this.visibleSlides)}},updateProgress:function(e){void 0===e&&(a=this.rtlTranslate?-1:1,e=this&&this.translate&&this.translate*a||0);var t=this.params,i=this.maxTranslate()-this.minTranslate(),n=this.progress,s=this.isBeginning,r=s,a=o=this.isEnd,o=0==i?s=!(n=0):(s=(n=(e-this.minTranslate())/i)<=0,1<=n);K(this,{progress:n,isBeginning:s,isEnd:o}),(t.watchSlidesProgress||t.watchSlidesVisibility||t.centeredSlides&&t.autoHeight)&&this.updateSlidesProgress(e),s&&!r&&this.emit("reachBeginning toEdge"),o&&!a&&this.emit("reachEnd toEdge"),(r&&!s||a&&!o)&&this.emit("fromEdge"),this.emit("progress",n)},updateSlidesClasses:function(){var e=this.slides,t=this.params,i=this.$wrapperEl,n=this.activeIndex,s=this.realIndex,r=this.virtual&&t.virtual.enabled;e.removeClass(t.slideActiveClass+" "+t.slideNextClass+" "+t.slidePrevClass+" "+t.slideDuplicateActiveClass+" "+t.slideDuplicateNextClass+" "+t.slideDuplicatePrevClass),(n=r?this.$wrapperEl.find("."+t.slideClass+'[data-swiper-slide-index="'+n+'"]'):e.eq(n)).addClass(t.slideActiveClass),t.loop&&(n.hasClass(t.slideDuplicateClass)?i.children("."+t.slideClass+":not(."+t.slideDuplicateClass+')[data-swiper-slide-index="'+s+'"]'):i.children("."+t.slideClass+"."+t.slideDuplicateClass+'[data-swiper-slide-index="'+s+'"]')).addClass(t.slideDuplicateActiveClass);s=n.nextAll("."+t.slideClass).eq(0).addClass(t.slideNextClass);t.loop&&0===s.length&&(s=e.eq(0)).addClass(t.slideNextClass);n=n.prevAll("."+t.slideClass).eq(0).addClass(t.slidePrevClass);t.loop&&0===n.length&&(n=e.eq(-1)).addClass(t.slidePrevClass),t.loop&&((s.hasClass(t.slideDuplicateClass)?i.children("."+t.slideClass+":not(."+t.slideDuplicateClass+')[data-swiper-slide-index="'+s.attr("data-swiper-slide-index")+'"]'):i.children("."+t.slideClass+"."+t.slideDuplicateClass+'[data-swiper-slide-index="'+s.attr("data-swiper-slide-index")+'"]')).addClass(t.slideDuplicateNextClass),(n.hasClass(t.slideDuplicateClass)?i.children("."+t.slideClass+":not(."+t.slideDuplicateClass+')[data-swiper-slide-index="'+n.attr("data-swiper-slide-index")+'"]'):i.children("."+t.slideClass+"."+t.slideDuplicateClass+'[data-swiper-slide-index="'+n.attr("data-swiper-slide-index")+'"]')).addClass(t.slideDuplicatePrevClass)),this.emitSlidesClasses()},updateActiveIndex:function(e){var t=this.rtlTranslate?this.translate:-this.translate,i=this.slidesGrid,n=this.snapGrid,s=this.params,r=this.activeIndex,a=this.realIndex,o=this.snapIndex,l=e;if(void 0===l){for(var d=0;d<i.length;d+=1)void 0!==i[d+1]?t>=i[d]&&t<i[d+1]-(i[d+1]-i[d])/2?l=d:t>=i[d]&&t<i[d+1]&&(l=d+1):t>=i[d]&&(l=d);s.normalizeSlideIndex&&(l<0||void 0===l)&&(l=0)}(s=0<=n.indexOf(t)?n.indexOf(t):(e=Math.min(s.slidesPerGroupSkip,l))+Math.floor((l-e)/s.slidesPerGroup))>=n.length&&(s=n.length-1),l!==r?(n=parseInt(this.slides.eq(l).attr("data-swiper-slide-index")||l,10),K(this,{snapIndex:s,realIndex:n,previousIndex:r,activeIndex:l}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),a!==n&&this.emit("realIndexChange"),(this.initialized||this.params.runCallbacksOnInit)&&this.emit("slideChange")):s!==o&&(this.snapIndex=s,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=E(e.target).closest("."+t.slideClass)[0],n=!1;if(i)for(var s=0;s<this.slides.length;s+=1)this.slides[s]===i&&(n=!0);if(!i||!n)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(E(i).attr("data-swiper-slide-index"),10):this.clickedIndex=E(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},translate:{getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,n=this.translate,s=this.$wrapperEl;if(t.virtualTranslate)return i?-n:n;if(t.cssMode)return n;e=y(s[0],e);return i&&(e=-e),e||0},setTranslate:function(e,t){var i=this.rtlTranslate,n=this.params,s=this.$wrapperEl,r=this.wrapperEl,a=this.progress,o=0,l=0;this.isHorizontal()?o=i?-e:e:l=e,n.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),n.cssMode?r[this.isHorizontal()?"scrollLeft":"scrollTop"]=this.isHorizontal()?-o:-l:n.virtualTranslate||s.transform("translate3d("+o+"px, "+l+"px, 0px)"),this.previousTranslate=this.translate,this.translate=this.isHorizontal()?o:l;l=this.maxTranslate()-this.minTranslate();(0==l?0:(e-this.minTranslate())/l)!==a&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,i,n,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0),void 0===n&&(n=!0);var r=this,a=r.params,o=r.wrapperEl;if(r.animating&&a.preventInteractionOnTransition)return!1;var l=r.minTranslate(),d=r.maxTranslate(),d=n&&l<e?l:n&&e<d?d:e;if(r.updateProgress(d),a.cssMode){e=r.isHorizontal();return 0!==t&&o.scrollTo?o.scrollTo(((a={})[e?"left":"top"]=-d,a.behavior="smooth",a)):o[e?"scrollLeft":"scrollTop"]=-d,!0}return 0===t?(r.setTransition(0),r.setTranslate(d),i&&(r.emit("beforeTransitionStart",t,s),r.emit("transitionEnd"))):(r.setTransition(t),r.setTranslate(d),i&&(r.emit("beforeTransitionStart",t,s),r.emit("transitionStart")),r.animating||(r.animating=!0,r.onTranslateToWrapperTransitionEnd||(r.onTranslateToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd),r.onTranslateToWrapperTransitionEnd=null,delete r.onTranslateToWrapperTransitionEnd,i&&r.emit("transitionEnd"))}),r.$wrapperEl[0].addEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd))),!0}},transition:{setTransition:function(e,t){this.params.cssMode||this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.params,s=this.previousIndex;n.cssMode||(n.autoHeight&&this.updateAutoHeight(),t=(t=t)||(s<i?"next":i<s?"prev":"reset"),this.emit("transitionStart"),e&&i!==s&&("reset"!==t?(this.emit("slideChangeTransitionStart"),"next"===t?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")):this.emit("slideResetTransitionStart")))},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,n=this.previousIndex,s=this.params;this.animating=!1,s.cssMode||(this.setTransition(0),t=(t=t)||(n<i?"next":i<n?"prev":"reset"),this.emit("transitionEnd"),e&&i!==n&&("reset"!==t?(this.emit("slideChangeTransitionEnd"),"next"===t?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")):this.emit("slideResetTransitionEnd")))}},slide:{slideTo:function(e,t,i,n){if(void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0),"number"!=typeof e&&"string"!=typeof e)throw new Error("The 'index' argument cannot have type other than 'number' or 'string'. ["+typeof e+"] given.");if("string"==typeof e){var s=parseInt(e,10);if(!isFinite(s))throw new Error("The passed-in 'index' (string) couldn't be converted to 'number'. ["+e+"] given.");e=s}var r=this,a=e;a<0&&(a=0);var o=r.params,l=r.snapGrid,d=r.slidesGrid,u=r.previousIndex,c=r.activeIndex,h=r.rtlTranslate,s=r.wrapperEl;if(r.animating&&o.preventInteractionOnTransition)return!1;e=Math.min(r.params.slidesPerGroupSkip,a),e+=Math.floor((a-e)/r.params.slidesPerGroup);e>=l.length&&(e=l.length-1),(c||o.initialSlide||0)===(u||0)&&i&&r.emit("beforeSlideChangeStart");var p,f=-l[e];if(r.updateProgress(f),o.normalizeSlideIndex)for(var m=0;m<d.length;m+=1)-Math.floor(100*f)>=Math.floor(100*d[m])&&(a=m);if(r.initialized&&a!==c){if(!r.allowSlideNext&&f<r.translate&&f<r.minTranslate())return!1;if(!r.allowSlidePrev&&f>r.translate&&f>r.maxTranslate()&&(c||0)!==a)return!1}if(p=c<a?"next":a<c?"prev":"reset",h&&-f===r.translate||!h&&f===r.translate)return r.updateActiveIndex(a),o.autoHeight&&r.updateAutoHeight(),r.updateSlidesClasses(),"slide"!==o.effect&&r.setTranslate(f),"reset"!=p&&(r.transitionStart(i,p),r.transitionEnd(i,p)),!1;if(o.cssMode){c=r.isHorizontal(),o=-f;return h&&(o=s.scrollWidth-s.offsetWidth-o),0!==t&&s.scrollTo?s.scrollTo(((h={})[c?"left":"top"]=o,h.behavior="smooth",h)):s[c?"scrollLeft":"scrollTop"]=o,!0}return 0===t?(r.setTransition(0),r.setTranslate(f),r.updateActiveIndex(a),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,n),r.transitionStart(i,p),r.transitionEnd(i,p)):(r.setTransition(t),r.setTranslate(f),r.updateActiveIndex(a),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,n),r.transitionStart(i,p),r.animating||(r.animating=!0,r.onSlideToWrapperTransitionEnd||(r.onSlideToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onSlideToWrapperTransitionEnd),r.onSlideToWrapperTransitionEnd=null,delete r.onSlideToWrapperTransitionEnd,r.transitionEnd(i,p))}),r.$wrapperEl[0].addEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);return this.params.loop&&(e+=this.loopedSlides),this.slideTo(e,t,i,n)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,s=this.animating,r=this.activeIndex<n.slidesPerGroupSkip?1:n.slidesPerGroup;if(n.loop){if(s&&n.loopPreventsSlide)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}return this.slideTo(this.activeIndex+r,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this.params,s=this.animating,r=this.snapGrid,a=this.slidesGrid,o=this.rtlTranslate;if(n.loop){if(s&&n.loopPreventsSlide)return!1;this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft}function l(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var d,u=l(o?this.translate:-this.translate),o=r.map(l),c=(r[o.indexOf(u)],r[o.indexOf(u)-1]);return void 0===c&&n.cssMode&&r.forEach(function(e){!c&&e<=u&&(c=e)}),void 0!==c&&(d=a.indexOf(c))<0&&(d=this.activeIndex-1),this.slideTo(d,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i,n){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===n&&(n=.5);var s=this.activeIndex,r=Math.min(this.params.slidesPerGroupSkip,s),a=r+Math.floor((s-r)/this.params.slidesPerGroup),o=this.rtlTranslate?this.translate:-this.translate;return o>=this.snapGrid[a]?o-(r=this.snapGrid[a])>(this.snapGrid[a+1]-r)*n&&(s+=this.params.slidesPerGroup):o-(o=this.snapGrid[a-1])<=(this.snapGrid[a]-o)*n&&(s-=this.params.slidesPerGroup),s=Math.max(s,0),s=Math.min(s,this.slidesGrid.length-1),this.slideTo(s,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,n=t.$wrapperEl,s="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,r=t.clickedIndex;i.loop?t.animating||(e=parseInt(E(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?r<t.loopedSlides-s/2||r>t.slides.length-t.loopedSlides+s/2?(t.loopFix(),r=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),C(function(){t.slideTo(r)})):t.slideTo(r):r>t.slides.length-s?(t.loopFix(),r=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),C(function(){t.slideTo(r)})):t.slideTo(r)):t.slideTo(r)}},loop:{loopCreate:function(){var n=this,e=g(),t=n.params,i=n.$wrapperEl;i.children("."+t.slideClass+"."+t.slideDuplicateClass).remove();var s=i.children("."+t.slideClass);if(t.loopFillGroupWithBlank){var r=t.slidesPerGroup-s.length%t.slidesPerGroup;if(r!==t.slidesPerGroup){for(var a=0;a<r;a+=1){var o=E(e.createElement("div")).addClass(t.slideClass+" "+t.slideBlankClass);i.append(o)}s=i.children("."+t.slideClass)}}"auto"!==t.slidesPerView||t.loopedSlides||(t.loopedSlides=s.length),n.loopedSlides=Math.ceil(parseFloat(t.loopedSlides||t.slidesPerView,10)),n.loopedSlides+=t.loopAdditionalSlides,n.loopedSlides>s.length&&(n.loopedSlides=s.length);var l=[],d=[];s.each(function(e,t){var i=E(e);t<n.loopedSlides&&d.push(e),t<s.length&&t>=s.length-n.loopedSlides&&l.push(e),i.attr("data-swiper-slide-index",t)});for(var u=0;u<d.length;u+=1)i.append(E(d[u].cloneNode(!0)).addClass(t.slideDuplicateClass));for(var c=l.length-1;0<=c;--c)i.prepend(E(l[c].cloneNode(!0)).addClass(t.slideDuplicateClass))},loopFix:function(){this.emit("beforeLoopFix");var e,t=this.activeIndex,i=this.slides,n=this.loopedSlides,s=this.allowSlidePrev,r=this.allowSlideNext,a=this.snapGrid,o=this.rtlTranslate;this.allowSlidePrev=!0,this.allowSlideNext=!0;a=-a[t]-this.getTranslate();t<n?(e=i.length-3*n+t,e+=n,this.slideTo(e,0,!1,!0)&&0!=a&&this.setTranslate((o?-this.translate:this.translate)-a)):t>=i.length-n&&(e=-i.length+t+n,e+=n,this.slideTo(e,0,!1,!0)&&0!=a&&this.setTranslate((o?-this.translate:this.translate)-a)),this.allowSlidePrev=s,this.allowSlideNext=r,this.emit("loopFix")},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass+",."+t.slideClass+"."+t.slideBlankClass).remove(),i.removeAttr("data-swiper-slide-index")}},grabCursor:{setGrabCursor:function(e){var t;this.support.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||((t=this.el).style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab")},unsetGrabCursor:function(){this.support.touch||this.params.watchOverflow&&this.isLocked||this.params.cssMode||(this.el.style.cursor="")}},manipulation:{appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var n=0;n<e.length;n+=1)e[n]&&t.append(e[n]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&this.support.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&this.loopDestroy();var s=n+1;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)e[r]&&i.prepend(e[r]);s=n+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&this.support.observer||this.update(),this.slideTo(s,0,!1)},addSlide:function(e,t){var i=this.$wrapperEl,n=this.params,s=this.activeIndex;n.loop&&(s-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+n.slideClass));var r=this.slides.length;if(e<=0)this.prependSlide(t);else if(r<=e)this.appendSlide(t);else{for(var a=e<s?s+1:s,o=[],l=r-1;e<=l;--l){var d=this.slides.eq(l);d.remove(),o.unshift(d)}if("object"==typeof t&&"length"in t){for(var u=0;u<t.length;u+=1)t[u]&&i.append(t[u]);a=e<s?s+t.length:s}else i.append(t);for(var c=0;c<o.length;c+=1)i.append(o[c]);n.loop&&this.loopCreate(),n.observer&&this.support.observer||this.update(),n.loop?this.slideTo(a+this.loopedSlides,0,!1):this.slideTo(a,0,!1)}},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,n=this.activeIndex;t.loop&&(n-=this.loopedSlides,this.loopDestroy(),this.slides=i.children("."+t.slideClass));var s,r=n;if("object"==typeof e&&"length"in e){for(var a=0;a<e.length;a+=1)s=e[a],this.slides[s]&&this.slides.eq(s).remove(),s<r&&--r;r=Math.max(r,0)}else s=e,this.slides[s]&&this.slides.eq(s).remove(),s<r&&--r,r=Math.max(r,0);t.loop&&this.loopCreate(),t.observer&&this.support.observer||this.update(),t.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},events:{attachEvents:function(){var e=g(),t=this.params,i=this.touchEvents,n=this.el,s=this.wrapperEl,r=this.device,a=this.support;this.onTouchStart=function(e){var t,i,n,s,r,a=g(),o=U(),l=this.touchEventsData,d=this.params,u=this.touches;this.animating&&d.preventInteractionOnTransition||((t=e).originalEvent&&(t=t.originalEvent),i=E(t.target),"wrapper"===d.touchEventsTarget&&!i.closest(this.wrapperEl).length||(l.isTouchEvent="touchstart"===t.type,!l.isTouchEvent&&"which"in t&&3===t.which||!l.isTouchEvent&&"button"in t&&0<t.button||l.isTouched&&l.isMoved||(d.noSwipingClass&&""!==d.noSwipingClass&&t.target&&t.target.shadowRoot&&e.path&&e.path[0]&&(i=E(e.path[0])),d.noSwiping&&i.closest(d.noSwipingSelector||"."+d.noSwipingClass)[0]?this.allowClick=!0:d.swipeHandler&&!i.closest(d.swipeHandler)[0]||(u.currentX=("touchstart"===t.type?t.targetTouches[0]:t).pageX,u.currentY=("touchstart"===t.type?t.targetTouches[0]:t).pageY,n=u.currentX,r=u.currentY,s=d.edgeSwipeDetection||d.iOSEdgeSwipeDetection,e=d.edgeSwipeThreshold||d.iOSEdgeSwipeThreshold,s&&(n<=e||n>=o.screen.width-e)||(K(l,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),u.startX=n,u.startY=r,l.touchStartTime=S(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,0<d.threshold&&(l.allowThresholdMove=!1),"touchstart"!==t.type&&(r=!0,i.is(l.formElements)&&(r=!1),a.activeElement&&E(a.activeElement).is(l.formElements)&&a.activeElement!==i[0]&&a.activeElement.blur(),r=r&&this.allowTouchMove&&d.touchStartPreventDefault,(d.touchStartForcePreventDefault||r)&&t.preventDefault()),this.emit("touchStart",t))))))}.bind(this),this.onTouchMove=function(e){var t=g(),i=this.touchEventsData,n=this.params,s=this.touches,r=this.rtlTranslate,a=e;if(a.originalEvent&&(a=a.originalEvent),i.isTouched){if(!i.isTouchEvent||"touchmove"===a.type){var o="touchmove"===a.type&&a.targetTouches&&(a.targetTouches[0]||a.changedTouches[0]),e=("touchmove"===a.type?o:a).pageX,o=("touchmove"===a.type?o:a).pageY;if(a.preventedByNestedSwiper)return s.startX=e,void(s.startY=o);if(!this.allowTouchMove)return this.allowClick=!1,void(i.isTouched&&(K(s,{startX:e,startY:o,currentX:e,currentY:o}),i.touchStartTime=S()));if(i.isTouchEvent&&n.touchReleaseOnEdges&&!n.loop)if(this.isVertical()){if(o<s.startY&&this.translate<=this.maxTranslate()||o>s.startY&&this.translate>=this.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(e<s.startX&&this.translate<=this.maxTranslate()||e>s.startX&&this.translate>=this.minTranslate())return;if(i.isTouchEvent&&t.activeElement&&a.target===t.activeElement&&E(a.target).is(i.formElements))return i.isMoved=!0,void(this.allowClick=!1);if(i.allowTouchCallbacks&&this.emit("touchMove",a),!(a.targetTouches&&1<a.targetTouches.length)){s.currentX=e,s.currentY=o;t=s.currentX-s.startX,e=s.currentY-s.startY;if(!(this.params.threshold&&Math.sqrt(Math.pow(t,2)+Math.pow(e,2))<this.params.threshold))if(void 0===i.isScrolling&&(this.isHorizontal()&&s.currentY===s.startY||this.isVertical()&&s.currentX===s.startX?i.isScrolling=!1:25<=t*t+e*e&&(o=180*Math.atan2(Math.abs(e),Math.abs(t))/Math.PI,i.isScrolling=this.isHorizontal()?o>n.touchAngle:90-o>n.touchAngle)),i.isScrolling&&this.emit("touchMoveOpposite",a),void 0===i.startMoving&&(s.currentX===s.startX&&s.currentY===s.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){this.allowClick=!1,!n.cssMode&&a.cancelable&&a.preventDefault(),n.touchMoveStopPropagation&&!n.nested&&a.stopPropagation(),i.isMoved||(n.loop&&this.loopFix(),i.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!n.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",a)),this.emit("sliderMove",a),i.isMoved=!0;t=this.isHorizontal()?t:e;s.diff=t,t*=n.touchRatio,r&&(t=-t),this.swipeDirection=0<t?"prev":"next",i.currentTranslate=t+i.startTranslate;e=!0,r=n.resistanceRatio;if(n.touchReleaseOnEdges&&(r=0),0<t&&i.currentTranslate>this.minTranslate()?(e=!1,n.resistance&&(i.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+i.startTranslate+t,r))):t<0&&i.currentTranslate<this.maxTranslate()&&(e=!1,n.resistance&&(i.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-i.startTranslate-t,r))),e&&(a.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),0<n.threshold){if(!(Math.abs(t)>n.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,s.startX=s.currentX,s.startY=s.currentY,i.currentTranslate=i.startTranslate,void(s.diff=this.isHorizontal()?s.currentX-s.startX:s.currentY-s.startY)}n.followFinger&&!n.cssMode&&((n.freeMode||n.watchSlidesProgress||n.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),n.freeMode&&(0===i.velocities.length&&i.velocities.push({position:s[this.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:s[this.isHorizontal()?"currentX":"currentY"],time:S()})),this.updateProgress(i.currentTranslate),this.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&this.emit("touchMoveOpposite",a)}.bind(this),this.onTouchEnd=function(e){var t=this,i=t.touchEventsData,n=t.params,s=t.touches,r=t.rtlTranslate,a=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",d),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&n.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);n.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var u,c=S(),e=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap click",d),e<300&&c-i.lastClickTime<300&&t.emit("doubleTap doubleClick",d)),i.lastClickTime=S(),C(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===s.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,u=n.followFinger?r?t.translate:-t.translate:-i.currentTranslate,!n.cssMode)if(n.freeMode)if(u<-t.minTranslate())t.slideTo(t.activeIndex);else if(u>-t.maxTranslate())t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1);else{if(n.freeModeMomentum){1<i.velocities.length?(g=i.velocities.pop(),p=i.velocities.pop(),h=g.position-p.position,p=g.time-p.time,t.velocity=h/p,t.velocity/=2,Math.abs(t.velocity)<n.freeModeMinimumVelocity&&(t.velocity=0),(150<p||300<S()-g.time)&&(t.velocity=0)):t.velocity=0,t.velocity*=n.freeModeMomentumVelocityRatio,i.velocities.length=0;var h=1e3*n.freeModeMomentumRatio,p=t.velocity*h,f=t.translate+p;r&&(f=-f);var m,v,g=!1,p=20*Math.abs(t.velocity)*n.freeModeMomentumBounceRatio;if(f<t.maxTranslate())n.freeModeMomentumBounce?(f+t.maxTranslate()<-p&&(f=t.maxTranslate()-p),m=t.maxTranslate(),g=!0,i.allowMomentumBounce=!0):f=t.maxTranslate(),n.loop&&n.centeredSlides&&(v=!0);else if(f>t.minTranslate())n.freeModeMomentumBounce?(f-t.minTranslate()>p&&(f=t.minTranslate()+p),m=t.minTranslate(),g=!0,i.allowMomentumBounce=!0):f=t.minTranslate(),n.loop&&n.centeredSlides&&(v=!0);else if(n.freeModeSticky){for(var y,b=0;b<l.length;b+=1)if(l[b]>-f){y=b;break}f=-(Math.abs(l[y]-f)<Math.abs(l[y-1]-f)||"next"===t.swipeDirection?l[y]:l[y-1])}if(v&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)h=r?Math.abs((-f-t.translate)/t.velocity):Math.abs((f-t.translate)/t.velocity),n.freeModeSticky&&(h=(v=Math.abs((r?-f:f)-t.translate))<(r=t.slidesSizesGrid[t.activeIndex])?n.speed:v<2*r?1.5*n.speed:2.5*n.speed);else if(n.freeModeSticky)return void t.slideToClosest();n.freeModeMomentumBounce&&g?(t.updateProgress(m),t.setTransition(h),t.setTranslate(f),t.transitionStart(!0,t.swipeDirection),t.animating=!0,a.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(n.speed),setTimeout(function(){t.setTranslate(m),a.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()})},0))})):t.velocity?(t.updateProgress(f),t.setTransition(h),t.setTranslate(f),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,a.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(f),t.updateActiveIndex(),t.updateSlidesClasses()}else if(n.freeModeSticky)return void t.slideToClosest();(!n.freeModeMomentum||e>=n.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var w=0,x=t.slidesSizesGrid[0],T=0;T<o.length;T+=T<n.slidesPerGroupSkip?1:n.slidesPerGroup){var E=T<n.slidesPerGroupSkip-1?1:n.slidesPerGroup;void 0!==o[T+E]?u>=o[T]&&u<o[T+E]&&(x=o[(w=T)+E]-o[T]):u>=o[T]&&(w=T,x=o[o.length-1]-o[o.length-2])}g=(u-o[w])/x,h=w<n.slidesPerGroupSkip-1?1:n.slidesPerGroup;e>n.longSwipesMs?n.longSwipes?("next"===t.swipeDirection&&(g>=n.longSwipesRatio?t.slideTo(w+h):t.slideTo(w)),"prev"===t.swipeDirection&&(g>1-n.longSwipesRatio?t.slideTo(w+h):t.slideTo(w))):t.slideTo(t.activeIndex):n.shortSwipes?!t.navigation||d.target!==t.navigation.nextEl&&d.target!==t.navigation.prevEl?("next"===t.swipeDirection&&t.slideTo(w+h),"prev"===t.swipeDirection&&t.slideTo(w)):d.target===t.navigation.nextEl?t.slideTo(w+h):t.slideTo(w):t.slideTo(t.activeIndex)}}.bind(this),t.cssMode&&(this.onScroll=function(){var e=this.wrapperEl,t=this.rtlTranslate;this.previousTranslate=this.translate,this.isHorizontal()?this.translate=t?e.scrollWidth-e.offsetWidth-e.scrollLeft:-e.scrollLeft:this.translate=-e.scrollTop,-0===this.translate&&(this.translate=0),this.updateActiveIndex(),this.updateSlidesClasses(),(0==(e=this.maxTranslate()-this.minTranslate())?0:(this.translate-this.minTranslate())/e)!==this.progress&&this.updateProgress(t?-this.translate:this.translate),this.emit("setTranslate",this.translate,!1)}.bind(this)),this.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(this);var o,l=!!t.nested;!a.touch&&a.pointerEvents?(n.addEventListener(i.start,this.onTouchStart,!1),e.addEventListener(i.move,this.onTouchMove,l),e.addEventListener(i.end,this.onTouchEnd,!1)):(a.touch&&(o=!("touchstart"!==i.start||!a.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1},n.addEventListener(i.start,this.onTouchStart,o),n.addEventListener(i.move,this.onTouchMove,a.passiveListener?{passive:!1,capture:l}:l),n.addEventListener(i.end,this.onTouchEnd,o),i.cancel&&n.addEventListener(i.cancel,this.onTouchEnd,o),A||(e.addEventListener("touchstart",D),A=!0)),(t.simulateTouch&&!r.ios&&!r.android||t.simulateTouch&&!a.touch&&r.ios)&&(n.addEventListener("mousedown",this.onTouchStart,!1),e.addEventListener("mousemove",this.onTouchMove,l),e.addEventListener("mouseup",this.onTouchEnd,!1))),(t.preventClicks||t.preventClicksPropagation)&&n.addEventListener("click",this.onClick,!0),t.cssMode&&s.addEventListener("scroll",this.onScroll),t.updateOnWindowResize?this.on(r.ios||r.android?"resize orientationchange observerUpdate":"resize observerUpdate",z,!0):this.on("observerUpdate",z,!0)},detachEvents:function(){var e,t=g(),i=this.params,n=this.touchEvents,s=this.el,r=this.wrapperEl,a=this.device,o=this.support,l=!!i.nested;!o.touch&&o.pointerEvents?(s.removeEventListener(n.start,this.onTouchStart,!1),t.removeEventListener(n.move,this.onTouchMove,l),t.removeEventListener(n.end,this.onTouchEnd,!1)):(o.touch&&(e=!("onTouchStart"!==n.start||!o.passiveListener||!i.passiveListeners)&&{passive:!0,capture:!1},s.removeEventListener(n.start,this.onTouchStart,e),s.removeEventListener(n.move,this.onTouchMove,l),s.removeEventListener(n.end,this.onTouchEnd,e),n.cancel&&s.removeEventListener(n.cancel,this.onTouchEnd,e)),(i.simulateTouch&&!a.ios&&!a.android||i.simulateTouch&&!o.touch&&a.ios)&&(s.removeEventListener("mousedown",this.onTouchStart,!1),t.removeEventListener("mousemove",this.onTouchMove,l),t.removeEventListener("mouseup",this.onTouchEnd,!1))),(i.preventClicks||i.preventClicksPropagation)&&s.removeEventListener("click",this.onClick,!0),i.cssMode&&r.removeEventListener("scroll",this.onScroll),this.off(a.ios||a.android?"resize orientationchange observerUpdate":"resize observerUpdate",z)}},breakpoints:{setBreakpoint:function(){var e,i,t,n=this.activeIndex,s=this.initialized,r=this.loopedSlides,a=void 0===r?0:r,o=this.params,l=this.$el,d=o.breakpoints;!d||d&&0===Object.keys(d).length||(e=this.getBreakpoint(d))&&this.currentBreakpoint!==e&&((i=e in d?d[e]:void 0)&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach(function(e){var t=i[e];void 0!==t&&(i[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")}),t=i||this.originalParams,r=1<o.slidesPerColumn,d=1<t.slidesPerColumn,r&&!d?(l.removeClass(o.containerModifierClass+"multirow "+o.containerModifierClass+"multirow-column"),this.emitContainerClasses()):!r&&d&&(l.addClass(o.containerModifierClass+"multirow"),"column"===t.slidesPerColumnFill&&l.addClass(o.containerModifierClass+"multirow-column"),this.emitContainerClasses()),l=t.direction&&t.direction!==o.direction,o=o.loop&&(t.slidesPerView!==o.slidesPerView||l),l&&s&&this.changeDirection(),K(this.params,t),K(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=e,this.emit("_beforeBreakpoint",t),o&&s&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(n-a+this.loopedSlides,0,!1)),this.emit("breakpoint",t))},getBreakpoint:function(e){var i=U();if(e){var t=!1,n=Object.keys(e).map(function(e){if("string"!=typeof e||0!==e.indexOf("@"))return{value:e,point:e};var t=parseFloat(e.substr(1));return{value:i.innerHeight*t,point:e}});n.sort(function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)});for(var s=0;s<n.length;s+=1){var r=n[s],a=r.point;r.value<=i.innerWidth&&(t=a)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this.params,t=this.isLocked,i=0<this.slides.length&&e.slidesOffsetBefore+e.spaceBetween*(this.slides.length-1)+this.slides[0].offsetWidth*this.slides.length;e.slidesOffsetBefore&&e.slidesOffsetAfter&&i?this.isLocked=i<=this.size:this.isLocked=1===this.snapGrid.length,this.allowSlideNext=!this.isLocked,this.allowSlidePrev=!this.isLocked,t!==this.isLocked&&this.emit(this.isLocked?"lock":"unlock"),t&&t!==this.isLocked&&(this.isEnd=!1,this.navigation&&this.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,n=this.$el,s=this.device,r=[];r.push("initialized"),r.push(i.direction),i.freeMode&&r.push("free-mode"),i.autoHeight&&r.push("autoheight"),e&&r.push("rtl"),1<i.slidesPerColumn&&(r.push("multirow"),"column"===i.slidesPerColumnFill&&r.push("multirow-column")),s.android&&r.push("android"),s.ios&&r.push("ios"),i.cssMode&&r.push("css-mode"),r.forEach(function(e){t.push(i.containerModifierClass+e)}),n.addClass(t.join(" ")),this.emitContainerClasses()},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" ")),this.emitContainerClasses()}},images:{loadImage:function(e,t,i,n,s,r){var a=U();function o(){r&&r()}!(E(e).parent("picture")[0]||e.complete&&s)&&t?((a=new a.Image).onload=o,a.onerror=o,n&&(a.sizes=n),i&&(a.srcset=i),t&&(a.src=t)):o()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var n=e.imagesToLoad[i];e.loadImage(n,n.currentSrc||n.getAttribute("src"),n.srcset||n.getAttribute("srcset"),n.sizes||n.getAttribute("sizes"),!0,t)}}}},j={},q=((I=B.prototype).emitContainerClasses=function(){var e,t=this;t.params._emitClasses&&t.el&&(e=t.el.className.split(" ").filter(function(e){return 0===e.indexOf("swiper-container")||0===e.indexOf(t.params.containerModifierClass)}),t.emit("_containerClasses",e.join(" ")))},I.getSlideClasses=function(e){var t=this;return e.className.split(" ").filter(function(e){return 0===e.indexOf("swiper-slide")||0===e.indexOf(t.params.slideClass)}).join(" ")},I.emitSlidesClasses=function(){var i=this;i.params._emitClasses&&i.el&&i.slides.each(function(e){var t=i.getSlideClasses(e);i.emit("_slideClass",e,t)})},I.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,n=this.size,s=this.activeIndex,r=1;if(e.centeredSlides){for(var a,o=t[s].swiperSlideSize,l=s+1;l<t.length;l+=1)t[l]&&!a&&(r+=1,(o+=t[l].swiperSlideSize)>n&&(a=!0));for(var d=s-1;0<=d;--d)t[d]&&!a&&(r+=1,(o+=t[d].swiperSlideSize)>n&&(a=!0))}else for(var u=s+1;u<t.length;u+=1)i[u]-i[s]<n&&(r+=1);return r},I.update=function(){var e,t,i=this;function n(){var e=i.rtlTranslate?-1*i.translate:i.translate,e=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(e),i.updateActiveIndex(),i.updateSlidesClasses()}i&&!i.destroyed&&(e=i.snapGrid,(t=i.params).breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(n(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||n(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update"))},I.changeDirection=function(t,e){void 0===e&&(e=!0);var i=this.params.direction;return(t=t||("horizontal"===i?"vertical":"horizontal"))===i||"horizontal"!==t&&"vertical"!==t||(this.$el.removeClass(""+this.params.containerModifierClass+i).addClass(""+this.params.containerModifierClass+t),this.emitContainerClasses(),this.params.direction=t,this.slides.each(function(e){"vertical"===t?e.style.width="":e.style.height=""}),this.emit("changeDirection"),e&&this.update()),this},I.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"),this.emit("afterInit"))},I.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i,n=this,s=n.params,r=n.$el,a=n.$wrapperEl,o=n.slides;return void 0===n.params||n.destroyed||(n.emit("beforeDestroy"),n.initialized=!1,n.detachEvents(),s.loop&&n.loopDestroy(),t&&(n.removeClasses(),r.removeAttr("style"),a.removeAttr("style"),o&&o.length&&o.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),n.emit("destroy"),Object.keys(n.eventsListeners).forEach(function(e){n.off(e)}),!1!==e&&(n.$el[0].swiper=null,i=n,Object.keys(i).forEach(function(e){try{i[e]=null}catch(e){}try{delete i[e]}catch(e){}})),n.destroyed=!0),null},B.extendDefaults=function(e){K(j,e)},B.installModule=function(e){B.prototype.modules||(B.prototype.modules={});var t=e.name||Object.keys(B.prototype.modules).length+"_"+S();B.prototype.modules[t]=e},B.use=function(e){return Array.isArray(e)?e.forEach(function(e){return B.installModule(e)}):B.installModule(e),B},$=B,N=[{key:"extendedDefaults",get:function(){return j}},{key:"defaults",get:function(){return O}}],(I=null)&&e($.prototype,I),e($,N),B);function B(){for(var i,e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];i=K({},i=(i=1===t.length&&t[0].constructor&&t[0].constructor===Object?t[0]:(g=t[0],t[1]))||{}),g&&!i.el&&(i.el=g);var s,r,a,o,l,d,u,c,h,p,f,m=this;m.support=M(),m.device=(void 0===(s={userAgent:i.userAgent})&&(s={}),x||(r=(void 0===s?{}:s).userAgent,a=M(),o=U(),l=o.navigator.platform,d=r||o.navigator.userAgent,u={ios:!1,android:!1},c=o.screen.width,h=o.screen.height,p=d.match(/(Android);?[\s\/]+([\d.]+)?/),f=d.match(/(iPad).*OS\s([\d_]+)/),s=d.match(/(iPod)(.*OS\s([\d_]+))?/),r=!f&&d.match(/(iPhone\sOS|iOS)\s([\d_]+)/),o="Win32"===l,l="MacIntel"===l,!f&&l&&a.touch&&0<=["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768","820x1180","1180x820","810x1080","1080x810"].indexOf(c+"x"+h)&&((f=d.match(/(Version)\/([\d.]+)/))||(f=[0,1,"13_0_0"]),l=!1),p&&!o&&(u.os="android",u.android=!0),(f||r||s)&&(u.os="ios",u.ios=!0),x=u),x),m.browser=(T||(v=U(),T={isEdge:!!v.navigator.userAgent.match(/Edge/g),isSafari:0<=(u=v.navigator.userAgent.toLowerCase()).indexOf("safari")&&u.indexOf("chrome")<0&&u.indexOf("android")<0,isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(v.navigator.userAgent)}),T),m.eventsListeners={},m.eventsAnyListeners=[],void 0===m.modules&&(m.modules={}),Object.keys(m.modules).forEach(function(e){var t=m.modules[e];t.params&&(e=Object.keys(t.params)[0],"object"==typeof(t=t.params[e])&&null!==t&&e in i&&"enabled"in t&&(!0===i[e]&&(i[e]={enabled:!0}),"object"!=typeof i[e]||"enabled"in i[e]||(i[e].enabled=!0),i[e]||(i[e]={enabled:!1})))});var v=K({},O);m.useParams(v),m.params=K({},v,j,i),m.originalParams=K({},m.params),m.passedParams=K({},i),m.params&&m.params.on&&Object.keys(m.params.on).forEach(function(e){m.on(e,m.params.on[e])}),m.params&&m.params.onAny&&m.onAny(m.params.onAny);var g,y,b=(m.$=E)(m.params.el);if(g=b[0]){if(1<b.length){var w=[];return b.each(function(e){e=K({},i,{el:e});w.push(new B(e))}),w}return g.swiper=m,g&&g.shadowRoot&&g.shadowRoot.querySelector?(y=E(g.shadowRoot.querySelector("."+m.params.wrapperClass))).children=function(e){return b.children(e)}:y=b.children("."+m.params.wrapperClass),K(m,{$el:b,el:g,$wrapperEl:y,wrapperEl:y[0],classNames:[],slides:E(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===m.params.direction},isVertical:function(){return"vertical"===m.params.direction},rtl:"rtl"===g.dir.toLowerCase()||"rtl"===b.css("direction"),rtlTranslate:"horizontal"===m.params.direction&&("rtl"===g.dir.toLowerCase()||"rtl"===b.css("direction")),wrongRTL:"-webkit-box"===y.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:m.params.allowSlideNext,allowSlidePrev:m.params.allowSlidePrev,touchEvents:(g=["touchstart","touchmove","touchend","touchcancel"],y=["mousedown","mousemove","mouseup"],m.support.pointerEvents&&(y=["pointerdown","pointermove","pointerup"]),m.touchEventsTouch={start:g[0],move:g[1],end:g[2],cancel:g[3]},m.touchEventsDesktop={start:y[0],move:y[1],end:y[2]},m.support.touch||!m.params.simulateTouch?m.touchEventsTouch:m.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:S(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:m.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),m.useModules(),m.emit("_swiper"),m.params.init&&m.init(),m}}Object.keys(H).forEach(function(t){Object.keys(H[t]).forEach(function(e){q.prototype[e]=H[t][e]})}),q.use([k,L]);var R={update:function(e){var t=this,i=t.params,n=i.slidesPerView,s=i.slidesPerGroup,r=i.centeredSlides,a=t.params.virtual,o=a.addSlidesBefore,l=a.addSlidesAfter,d=t.virtual,u=d.from,c=d.to,h=d.slides,p=d.slidesGrid,f=d.renderSlide,i=d.offset;t.updateActiveIndex();var a=t.activeIndex||0,d=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",o=r?(g=Math.floor(n/2)+s+l,Math.floor(n/2)+s+o):(g=n+(s-1)+l,s+o),m=Math.max((a||0)-o,0),v=Math.min((a||0)+g,h.length-1),g=(t.slidesGrid[m]||0)-(t.slidesGrid[0]||0);function y(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(K(t.virtual,{from:m,to:v,offset:g,slidesGrid:t.slidesGrid}),u===m&&c===v&&!e)return t.slidesGrid!==p&&g!==i&&t.slides.css(d,g+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:g,from:m,to:v,slides:function(){for(var e=[],t=m;t<=v;t+=1)e.push(h[t]);return e}()}),void(t.params.virtual.renderExternalUpdate&&y());var b=[],w=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var x=u;x<=c;x+=1)(x<m||v<x)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+x+'"]').remove();for(var T=0;T<h.length;T+=1)m<=T&&T<=v&&(void 0===c||e?w.push(T):(c<T&&w.push(T),T<u&&b.push(T)));w.forEach(function(e){t.$wrapperEl.append(f(h[e],e))}),b.sort(function(e,t){return t-e}).forEach(function(e){t.$wrapperEl.prepend(f(h[e],e))}),t.$wrapperEl.children(".swiper-slide").css(d,g+"px"),y()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];e=i.renderSlide?E(i.renderSlide.call(this,e,t)):E('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return e.attr("data-swiper-slide-index")||e.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=e),e},appendSlide:function(e){if("object"==typeof e&&"length"in e)for(var t=0;t<e.length;t+=1)e[t]&&this.virtual.slides.push(e[t]);else this.virtual.slides.push(e);this.virtual.update(!0)},prependSlide:function(e){var n,s,t=this.activeIndex,i=t+1,r=1;if(Array.isArray(e)){for(var a=0;a<e.length;a+=1)e[a]&&this.virtual.slides.unshift(e[a]);i=t+e.length,r=e.length}else this.virtual.slides.unshift(e);this.params.virtual.cache&&(n=this.virtual.cache,s={},Object.keys(n).forEach(function(e){var t=n[e],i=t.attr("data-swiper-slide-index");i&&t.attr("data-swiper-slide-index",parseInt(i,10)+1),s[parseInt(e,10)+r]=t}),this.virtual.cache=s),this.virtual.update(!0),this.slideTo(i,0)},removeSlide:function(e){if(null!=e){var t=this.activeIndex;if(Array.isArray(e))for(var i=e.length-1;0<=i;--i)this.virtual.slides.splice(e[i],1),this.params.virtual.cache&&delete this.virtual.cache[e[i]],e[i]<t&&--t,t=Math.max(t,0);else this.virtual.slides.splice(e,1),this.params.virtual.cache&&delete this.virtual.cache[e],e<t&&--t,t=Math.max(t,0);this.virtual.update(!0),this.slideTo(t,0)}},removeAllSlides:function(){this.virtual.slides=[],this.params.virtual.cache&&(this.virtual.cache={}),this.virtual.update(!0),this.slideTo(0,0)}},k={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,renderExternalUpdate:!0,addSlidesBefore:0,addSlidesAfter:0}},create:function(){w(this,{virtual:t(t({},R),{},{slides:this.params.virtual.slides,cache:{}})})},on:{beforeInit:function(e){var t;e.params.virtual.enabled&&(e.classNames.push(e.params.containerModifierClass+"virtual"),t={watchSlidesProgress:!0},K(e.params,t),K(e.originalParams,t),e.params.initialSlide||e.virtual.update())},setTranslate:function(e){e.params.virtual.enabled&&e.virtual.update()}}},G={handle:function(e){var t=U(),i=g(),n=this.rtlTranslate,s=e;s.originalEvent&&(s=s.originalEvent);var r=s.keyCode||s.charCode,a=this.params.keyboard.pageUpDown,o=a&&33===r,l=a&&34===r,d=37===r,u=39===r,e=38===r,a=40===r;if(!this.allowSlideNext&&(this.isHorizontal()&&u||this.isVertical()&&a||l))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&d||this.isVertical()&&e||o))return!1;if(!(s.shiftKey||s.altKey||s.ctrlKey||s.metaKey||i.activeElement&&i.activeElement.nodeName&&("input"===i.activeElement.nodeName.toLowerCase()||"textarea"===i.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(o||l||d||u||e||a)){var c=!1;if(0<this.$el.parents("."+this.params.slideClass).length&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var h=t.innerWidth,p=t.innerHeight,t=this.$el.offset();n&&(t.left-=this.$el[0].scrollLeft);for(var f=[[t.left,t.top],[t.left+this.width,t.top],[t.left,t.top+this.height],[t.left+this.width,t.top+this.height]],m=0;m<f.length;m+=1){var v=f[m];0<=v[0]&&v[0]<=h&&0<=v[1]&&v[1]<=p&&(c=!0)}if(!c)return}this.isHorizontal()?((o||l||d||u)&&(s.preventDefault?s.preventDefault():s.returnValue=!1),((l||u)&&!n||(o||d)&&n)&&this.slideNext(),((o||d)&&!n||(l||u)&&n)&&this.slidePrev()):((o||l||e||a)&&(s.preventDefault?s.preventDefault():s.returnValue=!1),(l||a)&&this.slideNext(),(o||e)&&this.slidePrev()),this.emit("keyPress",r)}},enable:function(){var e=g();this.keyboard.enabled||(E(e).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){var e=g();this.keyboard.enabled&&(E(e).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},L={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0,pageUpDown:!0}},create:function(){w(this,{keyboard:t({enabled:!1},G)})},on:{init:function(e){e.params.keyboard.enabled&&e.keyboard.enable()},destroy:function(e){e.keyboard.enabled&&e.keyboard.disable()}}},F={lastScrollTime:S(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){return-1<U().navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":(t=g(),(i="onwheel"in t)||((e=t.createElement("div")).setAttribute("onwheel","return;"),i="function"==typeof e.onwheel),!i&&t.implementation&&t.implementation.hasFeature&&!0!==t.implementation.hasFeature("","")&&(i=t.implementation.hasFeature("Events.wheel","3.0")),i?"wheel":"mousewheel");var e,t,i},normalize:function(e){var t=0,i=0,n=0,s=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),n=10*t,s=10*i,"deltaY"in e&&(s=e.deltaY),"deltaX"in e&&(n=e.deltaX),e.shiftKey&&!n&&(n=s,s=0),(n||s)&&e.deltaMode&&(1===e.deltaMode?(n*=40,s*=40):(n*=800,s*=800)),n&&!t&&(t=n<1?-1:1),s&&!i&&(i=s<1?-1:1),{spinX:t,spinY:i,pixelX:n,pixelY:s}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,n=i.params.mousewheel;i.params.cssMode&&t.preventDefault();var s=i.$el;if("container"!==i.params.mousewheel.eventsTarget&&(s=E(i.params.mousewheel.eventsTarget)),!i.mouseEntered&&!s[0].contains(t.target)&&!n.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var r=0,a=i.rtlTranslate?-1:1,s=F.normalize(t);if(n.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(s.pixelX)>Math.abs(s.pixelY)))return!0;r=-s.pixelX*a}else{if(!(Math.abs(s.pixelY)>Math.abs(s.pixelX)))return!0;r=-s.pixelY}else r=Math.abs(s.pixelX)>Math.abs(s.pixelY)?-s.pixelX*a:-s.pixelY;if(0===r)return!0;if(n.invert&&(r=-r),i.params.freeMode){var o={time:S(),delta:Math.abs(r),direction:Math.sign(r)},a=i.mousewheel.lastEventBeforeSnap,s=a&&o.time<a.time+500&&o.delta<=a.delta&&o.direction===a.direction;if(!s){i.mousewheel.lastEventBeforeSnap=void 0,i.params.loop&&i.loopFix();var l,d,u=i.getTranslate()+r*n.sensitivity,a=i.isBeginning,n=i.isEnd;if(u>=i.minTranslate()&&(u=i.minTranslate()),u<=i.maxTranslate()&&(u=i.maxTranslate()),i.setTransition(0),i.setTranslate(u),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!a&&i.isBeginning||!n&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky&&(clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=void 0,15<=(l=i.mousewheel.recentWheelEvents).length&&l.shift(),a=l.length?l[l.length-1]:void 0,n=l[0],l.push(o),a&&(o.delta>a.delta||o.direction!==a.direction)?l.splice(0):15<=l.length&&o.time-n.time<500&&1<=n.delta-o.delta&&o.delta<=6&&(d=0<r?.8:.2,i.mousewheel.lastEventBeforeSnap=o,l.splice(0),i.mousewheel.timeout=C(function(){i.slideToClosest(i.params.speed,!0,void 0,d)},0)),i.mousewheel.timeout||(i.mousewheel.timeout=C(function(){i.mousewheel.lastEventBeforeSnap=o,l.splice(0),i.slideToClosest(i.params.speed,!0,void 0,.5)},500))),s||i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),u===i.minTranslate()||u===i.maxTranslate())return!0}}else{u={time:S(),delta:Math.abs(r),direction:Math.sign(r),raw:e},r=i.mousewheel.recentWheelEvents;2<=r.length&&r.shift();e=r.length?r[r.length-1]:void 0;if(r.push(u),(!e||u.direction!==e.direction||u.delta>e.delta||u.time>e.time+150)&&i.mousewheel.animateSlider(u),i.mousewheel.releaseScroll(u))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){var t=U();return!(this.params.mousewheel.thresholdDelta&&e.delta<this.params.mousewheel.thresholdDelta||this.params.mousewheel.thresholdTime&&S()-this.mousewheel.lastScrollTime<this.params.mousewheel.thresholdTime||!(6<=e.delta&&S()-this.mousewheel.lastScrollTime<60)&&(e.direction<0?this.isEnd&&!this.params.loop||this.animating||(this.slideNext(),this.emit("scroll",e.raw)):this.isBeginning&&!this.params.loop||this.animating||(this.slidePrev(),this.emit("scroll",e.raw)),this.mousewheel.lastScrollTime=(new t.Date).getTime(),1))},releaseScroll:function(e){var t=this.params.mousewheel;if(e.direction<0){if(this.isEnd&&!this.params.loop&&t.releaseOnEdges)return!0}else if(this.isBeginning&&!this.params.loop&&t.releaseOnEdges)return!0;return!1},enable:function(){var e=F.event();if(this.params.cssMode)return this.wrapperEl.removeEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarget&&(t=E(this.params.mousewheel.eventsTarget)),t.on("mouseenter",this.mousewheel.handleMouseEnter),t.on("mouseleave",this.mousewheel.handleMouseLeave),t.on(e,this.mousewheel.handle),this.mousewheel.enabled=!0},disable:function(){var e=F.event();if(this.params.cssMode)return this.wrapperEl.addEventListener(e,this.mousewheel.handle),!0;if(!e)return!1;if(!this.mousewheel.enabled)return!1;var t=this.$el;return"container"!==this.params.mousewheel.eventsTarget&&(t=E(this.params.mousewheel.eventsTarget)),t.off(e,this.mousewheel.handle),!(this.mousewheel.enabled=!1)}},W={update:function(){var e,t,i=this.params.navigation;this.params.loop||(e=(t=this.navigation).$nextEl,(t=t.$prevEl)&&0<t.length&&(this.isBeginning?t.addClass(i.disabledClass):t.removeClass(i.disabledClass),t[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](i.lockClass)),e&&0<e.length&&(this.isEnd?e.addClass(i.disabledClass):e.removeClass(i.disabledClass),e[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](i.lockClass)))},onPrevClick:function(e){e.preventDefault(),this.isBeginning&&!this.params.loop||this.slidePrev()},onNextClick:function(e){e.preventDefault(),this.isEnd&&!this.params.loop||this.slideNext()},init:function(){var e,t,i=this.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=E(i.nextEl),this.params.uniqueNavElements&&"string"==typeof i.nextEl&&1<e.length&&1===this.$el.find(i.nextEl).length&&(e=this.$el.find(i.nextEl))),i.prevEl&&(t=E(i.prevEl),this.params.uniqueNavElements&&"string"==typeof i.prevEl&&1<t.length&&1===this.$el.find(i.prevEl).length&&(t=this.$el.find(i.prevEl))),e&&0<e.length&&e.on("click",this.navigation.onNextClick),t&&0<t.length&&t.on("click",this.navigation.onPrevClick),K(this.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,e=e.$prevEl;t&&t.length&&(t.off("click",this.navigation.onNextClick),t.removeClass(this.params.navigation.disabledClass)),e&&e.length&&(e.off("click",this.navigation.onPrevClick),e.removeClass(this.params.navigation.disabledClass))}},X={update:function(){var e=this.rtl,i=this.params.pagination;if(i.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var n,t=(this.virtual&&this.params.virtual.enabled?this.virtual:this).slides.length,s=this.pagination.$el,r=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((n=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>t-1-2*this.loopedSlides&&(n-=t-2*this.loopedSlides),r-1<n&&(n-=r),n<0&&"bullets"!==this.params.paginationType&&(n=r+n)):n=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===i.type&&this.pagination.bullets&&0<this.pagination.bullets.length){var a,o,l,d,u,c=this.pagination.bullets;if(i.dynamicBullets&&(this.pagination.bulletSize=c.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),s.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(i.dynamicMainBullets+4)+"px"),1<i.dynamicMainBullets&&void 0!==this.previousIndex&&(this.pagination.dynamicBulletIndex+=n-this.previousIndex,this.pagination.dynamicBulletIndex>i.dynamicMainBullets-1?this.pagination.dynamicBulletIndex=i.dynamicMainBullets-1:this.pagination.dynamicBulletIndex<0&&(this.pagination.dynamicBulletIndex=0)),a=n-this.pagination.dynamicBulletIndex,l=((o=a+(Math.min(c.length,i.dynamicMainBullets)-1))+a)/2),c.removeClass(i.bulletActiveClass+" "+i.bulletActiveClass+"-next "+i.bulletActiveClass+"-next-next "+i.bulletActiveClass+"-prev "+i.bulletActiveClass+"-prev-prev "+i.bulletActiveClass+"-main"),1<s.length)c.each(function(e){var t=E(e),e=t.index();e===n&&t.addClass(i.bulletActiveClass),i.dynamicBullets&&(a<=e&&e<=o&&t.addClass(i.bulletActiveClass+"-main"),e===a&&t.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),e===o&&t.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next"))});else{var h=c.eq(n),p=h.index();if(h.addClass(i.bulletActiveClass),i.dynamicBullets){for(var t=c.eq(a),h=c.eq(o),f=a;f<=o;f+=1)c.eq(f).addClass(i.bulletActiveClass+"-main");if(this.params.loop)if(p>=c.length-i.dynamicMainBullets){for(var m=i.dynamicMainBullets;0<=m;--m)c.eq(c.length-m).addClass(i.bulletActiveClass+"-main");c.eq(c.length-i.dynamicMainBullets-1).addClass(i.bulletActiveClass+"-prev")}else t.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),h.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next");else t.prev().addClass(i.bulletActiveClass+"-prev").prev().addClass(i.bulletActiveClass+"-prev-prev"),h.next().addClass(i.bulletActiveClass+"-next").next().addClass(i.bulletActiveClass+"-next-next")}}i.dynamicBullets&&(u=Math.min(c.length,i.dynamicMainBullets+4),d=(this.pagination.bulletSize*u-this.pagination.bulletSize)/2-l*this.pagination.bulletSize,u=e?"right":"left",c.css(this.isHorizontal()?u:"top",d+"px"))}"fraction"===i.type&&(s.find("."+i.currentClass).text(i.formatFractionCurrent(n+1)),s.find("."+i.totalClass).text(i.formatFractionTotal(r))),"progressbar"===i.type&&(l=i.progressbarOpposite?this.isHorizontal()?"vertical":"horizontal":this.isHorizontal()?"horizontal":"vertical",e=(n+1)/r,d=u=1,"horizontal"==l?u=e:d=e,s.find("."+i.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+u+") scaleY("+d+")").transition(this.params.speed)),"custom"===i.type&&i.renderCustom?(s.html(i.renderCustom(this,n+1,r)),this.emit("paginationRender",s[0])):this.emit("paginationUpdate",s[0]),s[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](i.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=(this.virtual&&this.params.virtual.enabled?this.virtual:this).slides.length,i=this.pagination.$el,n="";if("bullets"===e.type){for(var s=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,r=0;r<s;r+=1)e.renderBullet?n+=e.renderBullet.call(this,r,e.bulletClass):n+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(n),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(n=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(n)),"progressbar"===e.type&&(n=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(n)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var e,t=this,i=t.params.pagination;!i.el||0!==(e=E(i.el)).length&&(t.params.uniqueNavElements&&"string"==typeof i.el&&1<e.length&&(e=t.$el.find(i.el)),"bullets"===i.type&&i.clickable&&e.addClass(i.clickableClass),e.addClass(i.modifierClass+i.type),"bullets"===i.type&&i.dynamicBullets&&(e.addClass(""+i.modifierClass+i.type+"-dynamic"),t.pagination.dynamicBulletIndex=0,i.dynamicMainBullets<1&&(i.dynamicMainBullets=1)),"progressbar"===i.type&&i.progressbarOpposite&&e.addClass(i.progressbarOppositeClass),i.clickable&&e.on("click","."+i.bulletClass,function(e){e.preventDefault();e=E(this).index()*t.params.slidesPerGroup;t.params.loop&&(e+=t.loopedSlides),t.slideTo(e)}),K(t.pagination,{$el:e,el:e[0]}))},destroy:function(){var e,t=this.params.pagination;t.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length&&((e=this.pagination.$el).removeClass(t.hiddenClass),e.removeClass(t.modifierClass+t.type),this.pagination.bullets&&this.pagination.bullets.removeClass(t.bulletActiveClass),t.clickable&&e.off("click","."+t.bulletClass))}},V={setTranslate:function(){var e,t,i,n,s,r,a,o;this.params.scrollbar.el&&this.scrollbar.el&&(a=this.scrollbar,e=this.rtlTranslate,o=this.progress,t=a.dragSize,i=a.trackSize,n=a.$dragEl,s=a.$el,r=this.params.scrollbar,o=(i-(a=t))*o,e?0<(o=-o)?(a=t-o,o=0):i<-o+t&&(a=i+o):o<0?(a=t+o,o=0):i<o+t&&(a=i-o),this.isHorizontal()?(n.transform("translate3d("+o+"px, 0, 0)"),n[0].style.width=a+"px"):(n.transform("translate3d(0px, "+o+"px, 0)"),n[0].style.height=a+"px"),r.hide&&(clearTimeout(this.scrollbar.timeout),s[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){s[0].style.opacity=0,s.transition(400)},1e3)))},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){var e,t,i,n,s,r,a;this.params.scrollbar.el&&this.scrollbar.el&&(t=(e=this.scrollbar).$dragEl,i=e.$el,t[0].style.width="",t[0].style.height="",n=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,r=(s=this.size/this.virtualSize)*(n/this.size),a="auto"===this.params.scrollbar.dragSize?n*s:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=a+"px":t[0].style.height=a+"px",i[0].style.display=1<=s?"none":"",this.params.scrollbar.hide&&(i[0].style.opacity=0),K(e,{trackSize:n,divider:s,moveDivider:r,dragSize:a}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass))},getPointerPosition:function(e){return this.isHorizontal()?("touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0]:e).clientX:("touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0]:e).clientY},setDragPosition:function(e){var t=this.scrollbar,i=this.rtlTranslate,n=t.$el,s=t.dragSize,r=t.trackSize,a=t.dragStartPos,s=(t.getPointerPosition(e)-n.offset()[this.isHorizontal()?"left":"top"]-(null!==a?a:s/2))/(r-s);s=Math.max(Math.min(s,1),0),i&&(s=1-s);s=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*s;this.updateProgress(s),this.setTranslate(s),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,n=this.$wrapperEl,s=i.$el,r=i.$dragEl;this.scrollbar.isTouched=!0,this.scrollbar.dragStartPos=e.target===r[0]||e.target===r?i.getPointerPosition(e)-e.target.getBoundingClientRect()[this.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),n.transition(100),r.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),s.transition(0),t.hide&&s.css("opacity",1),this.params.cssMode&&this.$wrapperEl.css("scroll-snap-type","none"),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,n=t.$el,s=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),n.transition(0),s.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar,n=this.$wrapperEl,s=i.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,this.params.cssMode&&(this.$wrapperEl.css("scroll-snap-type",""),n.transition("")),t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=C(function(){s.css("opacity",0),s.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideToClosest())},enableDraggable:function(){var e,t,i,n,s,r,a;this.params.scrollbar.el&&(e=g(),r=this.scrollbar,t=this.touchEventsTouch,i=this.touchEventsDesktop,a=this.params,n=this.support,s=r.$el[0],r=!(!n.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},a=!(!n.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1},n.touch?(s.addEventListener(t.start,this.scrollbar.onDragStart,r),s.addEventListener(t.move,this.scrollbar.onDragMove,r),s.addEventListener(t.end,this.scrollbar.onDragEnd,a)):(s.addEventListener(i.start,this.scrollbar.onDragStart,r),e.addEventListener(i.move,this.scrollbar.onDragMove,r),e.addEventListener(i.end,this.scrollbar.onDragEnd,a)))},disableDraggable:function(){var e,t,i,n,s,r,a;this.params.scrollbar.el&&(e=g(),r=this.scrollbar,t=this.touchEventsTouch,i=this.touchEventsDesktop,a=this.params,n=this.support,s=r.$el[0],r=!(!n.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},a=!(!n.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1},n.touch?(s.removeEventListener(t.start,this.scrollbar.onDragStart,r),s.removeEventListener(t.move,this.scrollbar.onDragMove,r),s.removeEventListener(t.end,this.scrollbar.onDragEnd,a)):(s.removeEventListener(i.start,this.scrollbar.onDragStart,r),e.removeEventListener(i.move,this.scrollbar.onDragMove,r),e.removeEventListener(i.end,this.scrollbar.onDragEnd,a)))},init:function(){var e,t,i,n;this.params.scrollbar.el&&(e=this.scrollbar,n=this.$el,i=E((t=this.params.scrollbar).el),this.params.uniqueNavElements&&"string"==typeof t.el&&1<i.length&&1===n.find(t.el).length&&(i=n.find(t.el)),0===(n=i.find("."+this.params.scrollbar.dragClass)).length&&(n=E('<div class="'+this.params.scrollbar.dragClass+'"></div>'),i.append(n)),K(e,{$el:i,el:i[0],$dragEl:n,dragEl:n[0]}),t.draggable&&e.enableDraggable())},destroy:function(){this.scrollbar.disableDraggable()}},Y={setTransform:function(e,t){var i=this.rtl,n=E(e),s=i?-1:1,r=n.attr("data-swiper-parallax")||"0",a=n.attr("data-swiper-parallax-x"),o=n.attr("data-swiper-parallax-y"),e=n.attr("data-swiper-parallax-scale"),i=n.attr("data-swiper-parallax-opacity");a||o?(a=a||"0",o=o||"0"):this.isHorizontal()?(a=r,o="0"):(o=r,a="0"),a=0<=a.indexOf("%")?parseInt(a,10)*t*s+"%":a*t*s+"px",o=0<=o.indexOf("%")?parseInt(o,10)*t+"%":o*t+"px",null!=i&&(i=i-(i-1)*(1-Math.abs(t)),n[0].style.opacity=i),null==e?n.transform("translate3d("+a+", "+o+", 0px)"):(t=e-(e-1)*(1-Math.abs(t)),n.transform("translate3d("+a+", "+o+", 0px) scale("+t+")"))},setTranslate:function(){var n=this,e=n.$el,t=n.slides,s=n.progress,r=n.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){n.parallax.setTransform(e,s)}),t.each(function(e,t){var i=e.progress;1<n.params.slidesPerGroup&&"auto"!==n.params.slidesPerView&&(i+=Math.ceil(t/2)-s*(r.length-1)),i=Math.min(Math.max(i,-1),1),E(e).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){n.parallax.setTransform(e,i)})})},setTransition:function(i){void 0===i&&(i=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function(e){var t=E(e),e=parseInt(t.attr("data-swiper-parallax-duration"),10)||i;0===i&&(e=0),t.transition(e)})}},_={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,n=e.targetTouches[1].pageX,e=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(n-t,2)+Math.pow(e-i,2))},onGestureStart:function(e){var t=this.support,i=this.params.zoom,n=this.zoom,s=n.gesture;if(n.fakeGestureTouched=!1,n.fakeGestureMoved=!1,!t.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;n.fakeGestureTouched=!0,s.scaleStart=_.getDistanceBetweenTouches(e)}s.$slideEl&&s.$slideEl.length||(s.$slideEl=E(e.target).closest("."+this.params.slideClass),0===s.$slideEl.length&&(s.$slideEl=this.slides.eq(this.activeIndex)),s.$imageEl=s.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),s.$imageWrapEl=s.$imageEl.parent("."+i.containerClass),s.maxRatio=s.$imageWrapEl.attr("data-swiper-zoom")||i.maxRatio,0!==s.$imageWrapEl.length)?(s.$imageEl&&s.$imageEl.transition(0),this.zoom.isScaling=!0):s.$imageEl=void 0},onGestureChange:function(e){var t=this.support,i=this.params.zoom,n=this.zoom,s=n.gesture;if(!t.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;n.fakeGestureMoved=!0,s.scaleMove=_.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length?(t.gestures?n.scale=e.scale*n.currentScale:n.scale=s.scaleMove/s.scaleStart*n.currentScale,n.scale>s.maxRatio&&(n.scale=s.maxRatio-1+Math.pow(n.scale-s.maxRatio+1,.5)),n.scale<i.minRatio&&(n.scale=i.minRatio+1-Math.pow(i.minRatio-n.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+n.scale+")")):"gesturechange"===e.type&&n.onGestureStart(e)},onGestureEnd:function(e){var t=this.device,i=this.support,n=this.params.zoom,s=this.zoom,r=s.gesture;if(!i.gestures){if(!s.fakeGestureTouched||!s.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!t.android)return;s.fakeGestureTouched=!1,s.fakeGestureMoved=!1}r.$imageEl&&0!==r.$imageEl.length&&(s.scale=Math.max(Math.min(s.scale,r.maxRatio),n.minRatio),r.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+s.scale+")"),s.currentScale=s.scale,s.isScaling=!1,1===s.scale&&(r.$slideEl=void 0))},onTouchStart:function(e){var t=this.device,i=this.zoom,n=i.gesture,i=i.image;n.$imageEl&&0!==n.$imageEl.length&&(i.isTouched||(t.android&&e.cancelable&&e.preventDefault(),i.isTouched=!0,i.touchesStart.x=("touchstart"===e.type?e.targetTouches[0]:e).pageX,i.touchesStart.y=("touchstart"===e.type?e.targetTouches[0]:e).pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,n=t.image,s=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,n.isTouched&&i.$slideEl)){n.isMoved||(n.width=i.$imageEl[0].offsetWidth,n.height=i.$imageEl[0].offsetHeight,n.startX=y(i.$imageWrapEl[0],"x")||0,n.startY=y(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(n.startX=-n.startX,n.startY=-n.startY));var r=n.width*t.scale,a=n.height*t.scale;if(!(r<i.slideWidth&&a<i.slideHeight)){if(n.minX=Math.min(i.slideWidth/2-r/2,0),n.maxX=-n.minX,n.minY=Math.min(i.slideHeight/2-a/2,0),n.maxY=-n.minY,n.touchesCurrent.x=("touchmove"===e.type?e.targetTouches[0]:e).pageX,n.touchesCurrent.y=("touchmove"===e.type?e.targetTouches[0]:e).pageY,!n.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(n.minX)===Math.floor(n.startX)&&n.touchesCurrent.x<n.touchesStart.x||Math.floor(n.maxX)===Math.floor(n.startX)&&n.touchesCurrent.x>n.touchesStart.x))return void(n.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(n.minY)===Math.floor(n.startY)&&n.touchesCurrent.y<n.touchesStart.y||Math.floor(n.maxY)===Math.floor(n.startY)&&n.touchesCurrent.y>n.touchesStart.y))return void(n.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),n.isMoved=!0,n.currentX=n.touchesCurrent.x-n.touchesStart.x+n.startX,n.currentY=n.touchesCurrent.y-n.touchesStart.y+n.startY,n.currentX<n.minX&&(n.currentX=n.minX+1-Math.pow(n.minX-n.currentX+1,.8)),n.currentX>n.maxX&&(n.currentX=n.maxX-1+Math.pow(n.currentX-n.maxX+1,.8)),n.currentY<n.minY&&(n.currentY=n.minY+1-Math.pow(n.minY-n.currentY+1,.8)),n.currentY>n.maxY&&(n.currentY=n.maxY-1+Math.pow(n.currentY-n.maxY+1,.8)),s.prevPositionX||(s.prevPositionX=n.touchesCurrent.x),s.prevPositionY||(s.prevPositionY=n.touchesCurrent.y),s.prevTime||(s.prevTime=Date.now()),s.x=(n.touchesCurrent.x-s.prevPositionX)/(Date.now()-s.prevTime)/2,s.y=(n.touchesCurrent.y-s.prevPositionY)/(Date.now()-s.prevTime)/2,Math.abs(n.touchesCurrent.x-s.prevPositionX)<2&&(s.x=0),Math.abs(n.touchesCurrent.y-s.prevPositionY)<2&&(s.y=0),s.prevPositionX=n.touchesCurrent.x,s.prevPositionY=n.touchesCurrent.y,s.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+n.currentX+"px, "+n.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,n=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var s=300,r=300,a=n.x*s,o=i.currentX+a,a=n.y*r,a=i.currentY+a;0!==n.x&&(s=Math.abs((o-i.currentX)/n.x)),0!==n.y&&(r=Math.abs((a-i.currentY)/n.y));r=Math.max(s,r);i.currentX=o,i.currentY=a;a=i.width*e.scale,e=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-a/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-e/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(r).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl&&t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl&&t.$imageWrapEl.transform("translate3d(0,0,0)"),e.scale=1,e.currentScale=1,t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,n,s=this.zoom,r=this.params.zoom,a=s.gesture,o=s.image;a.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?a.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):a.$slideEl=this.slides.eq(this.activeIndex),a.$imageEl=a.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),a.$imageWrapEl=a.$imageEl.parent("."+r.containerClass)),a.$imageEl&&0!==a.$imageEl.length&&(a.$slideEl.addClass(""+r.zoomedSlideClass),o=void 0===o.touchesStart.x&&e?(n=("touchend"===e.type?e.changedTouches[0]:e).pageX,("touchend"===e.type?e.changedTouches[0]:e).pageY):(n=o.touchesStart.x,o.touchesStart.y),s.scale=a.$imageWrapEl.attr("data-swiper-zoom")||r.maxRatio,s.currentScale=a.$imageWrapEl.attr("data-swiper-zoom")||r.maxRatio,e?(r=a.$slideEl[0].offsetWidth,e=a.$slideEl[0].offsetHeight,t=a.$slideEl.offset().left+r/2-n,i=a.$slideEl.offset().top+e/2-o,n=a.$imageEl[0].offsetWidth,o=a.$imageEl[0].offsetHeight,n=n*s.scale,o=o*s.scale,n=-(r=Math.min(r/2-n/2,0)),o=-(e=Math.min(e/2-o/2,0)),(t=t*s.scale)<r&&(t=r),n<t&&(t=n),(i=i*s.scale)<e&&(i=e),o<i&&(i=o)):i=t=0,a.$imageWrapEl.transition(300).transform("translate3d("+t+"px, "+i+"px,0)"),a.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+s.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(this.params.virtual&&this.params.virtual.enabled&&this.virtual?i.$slideEl=this.$wrapperEl.children("."+this.params.slideActiveClass):i.$slideEl=this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},toggleGestures:function(e){var t=this.zoom,i=t.slideSelector,n=t.passiveListener;this.$wrapperEl[e]("gesturestart",i,t.onGestureStart,n),this.$wrapperEl[e]("gesturechange",i,t.onGestureChange,n),this.$wrapperEl[e]("gestureend",i,t.onGestureEnd,n)},enableGestures:function(){this.zoom.gesturesEnabled||(this.zoom.gesturesEnabled=!0,this.zoom.toggleGestures("on"))},disableGestures:function(){this.zoom.gesturesEnabled&&(this.zoom.gesturesEnabled=!1,this.zoom.toggleGestures("off"))},enable:function(){var e,t,i,n=this.support,s=this.zoom;s.enabled||(s.enabled=!0,e=!("touchstart"!==this.touchEvents.start||!n.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},t=!n.passiveListener||{passive:!1,capture:!0},i="."+this.params.slideClass,this.zoom.passiveListener=e,this.zoom.slideSelector=i,n.gestures?(this.$wrapperEl.on(this.touchEvents.start,this.zoom.enableGestures,e),this.$wrapperEl.on(this.touchEvents.end,this.zoom.disableGestures,e)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,i,s.onGestureStart,e),this.$wrapperEl.on(this.touchEvents.move,i,s.onGestureChange,t),this.$wrapperEl.on(this.touchEvents.end,i,s.onGestureEnd,e),this.touchEvents.cancel&&this.$wrapperEl.on(this.touchEvents.cancel,i,s.onGestureEnd,e)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,s.onTouchMove,t))},disable:function(){var e,t,i,n,s=this.zoom;s.enabled&&(e=this.support,this.zoom.enabled=!1,t=!("touchstart"!==this.touchEvents.start||!e.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1},i=!e.passiveListener||{passive:!1,capture:!0},n="."+this.params.slideClass,e.gestures?(this.$wrapperEl.off(this.touchEvents.start,this.zoom.enableGestures,t),this.$wrapperEl.off(this.touchEvents.end,this.zoom.disableGestures,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,n,s.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,n,s.onGestureChange,i),this.$wrapperEl.off(this.touchEvents.end,n,s.onGestureEnd,t),this.touchEvents.cancel&&this.$wrapperEl.off(this.touchEvents.cancel,n,s.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,s.onTouchMove,i))}},Q={loadInSlide:function(e,l){void 0===l&&(l=!0);var d,u=this,c=u.params.lazy;void 0!==e&&0!==u.slides.length&&(e=(d=u.virtual&&u.params.virtual.enabled?u.$wrapperEl.children("."+u.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):u.slides.eq(e)).find("."+c.elementClass+":not(."+c.loadedClass+"):not(."+c.loadingClass+")"),!d.hasClass(c.elementClass)||d.hasClass(c.loadedClass)||d.hasClass(c.loadingClass)||e.push(d[0]),0!==e.length&&e.each(function(e){var i=E(e);i.addClass(c.loadingClass);var n=i.attr("data-background"),s=i.attr("data-src"),r=i.attr("data-srcset"),a=i.attr("data-sizes"),o=i.parent("picture");u.loadImage(i[0],s||n,r,a,!1,function(){var e,t;null==u||!u||u&&!u.params||u.destroyed||(n?(i.css("background-image",'url("'+n+'")'),i.removeAttr("data-background")):(r&&(i.attr("srcset",r),i.removeAttr("data-srcset")),a&&(i.attr("sizes",a),i.removeAttr("data-sizes")),o.length&&o.children("source").each(function(e){e=E(e);e.attr("data-srcset")&&(e.attr("srcset",e.attr("data-srcset")),e.removeAttr("data-srcset"))}),s&&(i.attr("src",s),i.removeAttr("data-src"))),i.addClass(c.loadedClass).removeClass(c.loadingClass),d.find("."+c.preloaderClass).remove(),u.params.loop&&l&&(t=d.attr("data-swiper-slide-index"),d.hasClass(u.params.slideDuplicateClass)?(e=u.$wrapperEl.children('[data-swiper-slide-index="'+t+'"]:not(.'+u.params.slideDuplicateClass+")"),u.lazy.loadInSlide(e.index(),!1)):(t=u.$wrapperEl.children("."+u.params.slideDuplicateClass+'[data-swiper-slide-index="'+t+'"]'),u.lazy.loadInSlide(t.index(),!1))),u.emit("lazyImageReady",d[0],i[0]),u.params.autoHeight&&u.updateAutoHeight())}),u.emit("lazyImageLoad",d[0],i[0])}))},load:function(){var t=this,i=t.$wrapperEl,n=t.params,s=t.slides,e=t.activeIndex,r=t.virtual&&n.virtual.enabled,a=n.lazy,o=n.slidesPerView;function l(e){if(r){if(i.children("."+n.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return 1}else if(s[e])return 1}function d(e){return r?E(e).attr("data-swiper-slide-index"):E(e).index()}if("auto"===o&&(o=0),t.lazy.initialImageLoaded||(t.lazy.initialImageLoaded=!0),t.params.watchSlidesVisibility)i.children("."+n.slideVisibleClass).each(function(e){e=r?E(e).attr("data-swiper-slide-index"):E(e).index();t.lazy.loadInSlide(e)});else if(1<o)for(var u=e;u<e+o;u+=1)l(u)&&t.lazy.loadInSlide(u);else t.lazy.loadInSlide(e);if(a.loadPrevNext)if(1<o||a.loadPrevNextAmount&&1<a.loadPrevNextAmount){for(var c=a.loadPrevNextAmount,a=o,h=Math.min(e+a+Math.max(c,a),s.length),c=Math.max(e-Math.max(a,c),0),p=e+o;p<h;p+=1)l(p)&&t.lazy.loadInSlide(p);for(var f=c;f<e;f+=1)l(f)&&t.lazy.loadInSlide(f)}else{c=i.children("."+n.slideNextClass);0<c.length&&t.lazy.loadInSlide(d(c));c=i.children("."+n.slidePrevClass);0<c.length&&t.lazy.loadInSlide(d(c))}}},J={LinearSpline:function(e,t){var i,n,s,r,a;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(a=function(e,t){for(n=-1,i=e.length;1<i-n;)e[s=i+n>>1]<=t?n=s:i=s;return i}(this.x,e),r=a-1,(e-this.x[r])*(this.y[a]-this.y[r])/(this.x[a]-this.x[r])+this.y[r]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new J.LinearSpline(this.slidesGrid,e.slidesGrid):new J.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,n,s=this,r=s.controller.control,a=s.constructor;function o(e){var t=s.rtlTranslate?-s.translate:s.translate;"slide"===s.params.controller.by&&(s.controller.getInterpolateFunction(e),n=-s.controller.spline.interpolate(-t)),n&&"container"!==s.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(s.maxTranslate()-s.minTranslate()),n=(t-s.minTranslate())*i+e.minTranslate()),s.params.controller.inverse&&(n=e.maxTranslate()-n),e.updateProgress(n),e.setTranslate(n,s),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(r))for(var l=0;l<r.length;l+=1)r[l]!==t&&r[l]instanceof a&&o(r[l]);else r instanceof a&&t!==r&&o(r)},setTransition:function(t,e){var i,n=this,s=n.constructor,r=n.controller.control;function a(e){e.setTransition(t,n),0!==t&&(e.transitionStart(),e.params.autoHeight&&C(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){r&&(e.params.loop&&"slide"===n.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(r))for(i=0;i<r.length;i+=1)r[i]!==e&&r[i]instanceof s&&a(r[i]);else r instanceof s&&e!==r&&a(r)}},Z={getRandomNumber:function(e){return void 0===e&&(e=16),"x".repeat(e).replace(/x/g,function(){return Math.round(16*Math.random()).toString(16)})},makeElFocusable:function(e){return e.attr("tabIndex","0"),e},makeElNotFocusable:function(e){return e.attr("tabIndex","-1"),e},addElRole:function(e,t){return e.attr("role",t),e},addElRoleDescription:function(e,t){return e.attr("aria-role-description",t),e},addElControls:function(e,t){return e.attr("aria-controls",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},addElId:function(e,t){return e.attr("id",t),e},addElLive:function(e,t){return e.attr("aria-live",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;13===e.keyCode&&(e=E(e.target),this.navigation&&this.navigation.$nextEl&&e.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&e.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&e.is("."+this.params.pagination.bulletClass)&&e[0].click())},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){var e,t;!this.params.loop&&this.navigation&&(e=(t=this.navigation).$nextEl,(t=t.$prevEl)&&0<t.length&&(this.isBeginning?(this.a11y.disableEl(t),this.a11y.makeElNotFocusable(t)):(this.a11y.enableEl(t),this.a11y.makeElFocusable(t))),e&&0<e.length&&(this.isEnd?(this.a11y.disableEl(e),this.a11y.makeElNotFocusable(e)):(this.a11y.enableEl(e),this.a11y.makeElFocusable(e))))},updatePagination:function(){var t=this,i=t.params.a11y;t.pagination&&t.params.pagination.clickable&&t.pagination.bullets&&t.pagination.bullets.length&&t.pagination.bullets.each(function(e){e=E(e);t.a11y.makeElFocusable(e),t.params.pagination.renderBullet||(t.a11y.addElRole(e,"button"),t.a11y.addElLabel(e,i.paginationBulletMessage.replace(/\{\{index\}\}/,e.index()+1)))})},init:function(){var t=this,e=t.params.a11y;t.$el.append(t.a11y.liveRegion);var i=t.$el;e.containerRoleDescriptionMessage&&t.a11y.addElRoleDescription(i,e.containerRoleDescriptionMessage),e.containerMessage&&t.a11y.addElLabel(i,e.containerMessage);var n,s,r=t.$wrapperEl,a=r.attr("id")||"swiper-wrapper-"+t.a11y.getRandomNumber(16);t.a11y.addElId(r,a),i=t.params.autoplay&&t.params.autoplay.enabled?"off":"polite",t.a11y.addElLive(r,i),e.itemRoleDescriptionMessage&&t.a11y.addElRoleDescription(E(t.slides),e.itemRoleDescriptionMessage),t.a11y.addElRole(E(t.slides),"group"),t.slides.each(function(e){e=E(e);t.a11y.addElLabel(e,e.index()+1+" / "+t.slides.length)}),t.navigation&&t.navigation.$nextEl&&(n=t.navigation.$nextEl),t.navigation&&t.navigation.$prevEl&&(s=t.navigation.$prevEl),n&&n.length&&(t.a11y.makeElFocusable(n),"BUTTON"!==n[0].tagName&&(t.a11y.addElRole(n,"button"),n.on("keydown",t.a11y.onEnterKey)),t.a11y.addElLabel(n,e.nextSlideMessage),t.a11y.addElControls(n,a)),s&&s.length&&(t.a11y.makeElFocusable(s),"BUTTON"!==s[0].tagName&&(t.a11y.addElRole(s,"button"),s.on("keydown",t.a11y.onEnterKey)),t.a11y.addElLabel(s,e.prevSlideMessage),t.a11y.addElControls(s,a)),t.pagination&&t.params.pagination.clickable&&t.pagination.bullets&&t.pagination.bullets.length&&t.pagination.$el.on("keydown","."+t.params.pagination.bulletClass,t.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&0<this.a11y.liveRegion.length&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},ee={init:function(){var e=U();if(this.params.history){if(!e.history||!e.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var t=this.history;t.initialized=!0,t.paths=ee.getPathValues(this.params.url),(t.paths.key||t.paths.value)&&(t.scrollToSlide(0,t.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||e.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){var e=U();this.params.history.replaceState||e.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=ee.getPathValues(this.params.url),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(e){var t=U(),e=(e?new URL(e):t.location).pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){var i,n=U();this.history.initialized&&this.params.history.enabled&&(i=this.params.url?new URL(this.params.url):n.location,t=this.slides.eq(t),t=ee.slugify(t.attr("data-history")),i.pathname.includes(e)||(t=e+"/"+t),(e=n.history.state)&&e.value===t||(this.params.history.replaceState?n.history.replaceState({value:t},null,t):n.history.pushState({value:t},null,t)))},slugify:function(e){return e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var n=0,s=this.slides.length;n<s;n+=1){var r=this.slides.eq(n);ee.slugify(r.attr("data-history"))!==t||r.hasClass(this.params.slideDuplicateClass)||(r=r.index(),this.slideTo(r,e,i))}else this.slideTo(0,e,i)}},te={onHashCange:function(){var e=g();this.emit("hashChange");e=e.location.hash.replace("#","");e===this.slides.eq(this.activeIndex).attr("data-hash")||void 0!==(e=this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+e+'"]').index())&&this.slideTo(e)},setHash:function(){var e=U(),t=g();this.hashNavigation.initialized&&this.params.hashNavigation.enabled&&(this.params.hashNavigation.replaceState&&e.history&&e.history.replaceState?e.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||""):(e=(e=this.slides.eq(this.activeIndex)).attr("data-hash")||e.attr("data-history"),t.location.hash=e||""),this.emit("hashSet"))},init:function(){var e=g(),t=U();if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var i=e.location.hash.replace("#","");if(i)for(var n=0,s=this.slides.length;n<s;n+=1){var r=this.slides.eq(n);(r.attr("data-hash")||r.attr("data-history"))!==i||r.hasClass(this.params.slideDuplicateClass)||(r=r.index(),this.slideTo(r,0,this.params.runCallbacksOnInit,!0))}this.params.hashNavigation.watchState&&E(t).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){var e=U();this.params.hashNavigation.watchState&&E(e).off("hashchange",this.hashNavigation.onHashCange)}},ie={run:function(){var t=this,e=t.slides.eq(t.activeIndex),i=t.params.autoplay.delay;e.attr("data-swiper-autoplay")&&(i=e.attr("data-swiper-autoplay")||t.params.autoplay.delay),clearTimeout(t.autoplay.timeout),t.autoplay.timeout=C(function(){var e;t.params.autoplay.reverseDirection?t.params.loop?(t.loopFix(),e=t.slidePrev(t.params.speed,!0,!0),t.emit("autoplay")):t.isBeginning?t.params.autoplay.stopOnLastSlide?t.autoplay.stop():(e=t.slideTo(t.slides.length-1,t.params.speed,!0,!0),t.emit("autoplay")):(e=t.slidePrev(t.params.speed,!0,!0),t.emit("autoplay")):t.params.loop?(t.loopFix(),e=t.slideNext(t.params.speed,!0,!0),t.emit("autoplay")):t.isEnd?t.params.autoplay.stopOnLastSlide?t.autoplay.stop():(e=t.slideTo(0,t.params.speed,!0,!0),t.emit("autoplay")):(e=t.slideNext(t.params.speed,!0,!0),t.emit("autoplay")),(t.params.cssMode&&t.autoplay.running||!1===e)&&t.autoplay.run()},i)},start:function(){return void 0===this.autoplay.timeout&&!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0)},stop:function(){return!!this.autoplay.running&&void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0)},pause:function(e){this.autoplay.running&&(this.autoplay.paused||(this.autoplay.timeout&&clearTimeout(this.autoplay.timeout),this.autoplay.paused=!0,0!==e&&this.params.autoplay.waitForTransition?(this.$wrapperEl[0].addEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].addEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd)):(this.autoplay.paused=!1,this.autoplay.run())))},onVisibilityChange:function(){var e=g();"hidden"===e.visibilityState&&this.autoplay.running&&this.autoplay.pause(),"visible"===e.visibilityState&&this.autoplay.paused&&(this.autoplay.run(),this.autoplay.paused=!1)},onTransitionEnd:function(e){this&&!this.destroyed&&this.$wrapperEl&&e.target===this.$wrapperEl[0]&&(this.$wrapperEl[0].removeEventListener("transitionend",this.autoplay.onTransitionEnd),this.$wrapperEl[0].removeEventListener("webkitTransitionEnd",this.autoplay.onTransitionEnd),this.autoplay.paused=!1,this.autoplay.running?this.autoplay.run():this.autoplay.stop())}},ne={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),n=-i[0].swiperSlideOffset;this.params.virtualTranslate||(n-=this.translate);var s=0;this.isHorizontal()||(s=n,n=0);var r=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:r}).transform("translate3d("+n+"px, "+s+"px, 0px)")}},setTransition:function(e){var i,n=this,t=n.slides,s=n.$wrapperEl;t.transition(e),n.params.virtualTranslate&&0!==e&&(i=!1,t.transitionEnd(function(){if(!i&&n&&!n.destroyed){i=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)s.trigger(e[t])}}))}},se={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,n=this.slides,s=this.width,r=this.height,a=this.rtlTranslate,o=this.size,l=this.browser,d=this.params.cubeEffect,u=this.isHorizontal(),c=this.virtual&&this.params.virtual.enabled,h=0;d.shadow&&(u?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=E('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:s+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=E('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var p,f=0;f<n.length;f+=1){var m=n.eq(f),v=f;c&&(v=parseInt(m.attr("data-swiper-slide-index"),10));var g=90*v,y=Math.floor(g/360);a&&(g=-g,y=Math.floor(-g/360));var b=Math.max(Math.min(m[0].progress,1),-1),w=0,x=0,T=0;v%4==0?(w=4*-y*o,T=0):(v-1)%4==0?(w=0,T=4*-y*o):(v-2)%4==0?(w=o+4*y*o,T=o):(v-3)%4==0&&(w=-o,T=3*o+4*o*y),a&&(w=-w),u||(x=w,w=0);T="rotateX("+(u?0:-g)+"deg) rotateY("+(u?g:0)+"deg) translate3d("+w+"px, "+x+"px, "+T+"px)";b<=1&&-1<b&&(h=a?90*-v-90*b:90*v+90*b),m.transform(T),d.slideShadows&&(v=u?m.find(".swiper-slide-shadow-left"):m.find(".swiper-slide-shadow-top"),T=u?m.find(".swiper-slide-shadow-right"):m.find(".swiper-slide-shadow-bottom"),0===v.length&&(v=E('<div class="swiper-slide-shadow-'+(u?"left":"top")+'"></div>'),m.append(v)),0===T.length&&(T=E('<div class="swiper-slide-shadow-'+(u?"right":"bottom")+'"></div>'),m.append(T)),v.length&&(v[0].style.opacity=Math.max(-b,0)),T.length&&(T[0].style.opacity=Math.max(b,0)))}i.css({"-webkit-transform-origin":"50% 50% -"+o/2+"px","-moz-transform-origin":"50% 50% -"+o/2+"px","-ms-transform-origin":"50% 50% -"+o/2+"px","transform-origin":"50% 50% -"+o/2+"px"}),d.shadow&&(u?e.transform("translate3d(0px, "+(s/2+d.shadowOffset)+"px, "+-s/2+"px) rotateX(90deg) rotateZ(0deg) scale("+d.shadowScale+")"):(p=Math.abs(h)-90*Math.floor(Math.abs(h)/90),t=1.5-(Math.sin(2*p*Math.PI/360)/2+Math.cos(2*p*Math.PI/360)/2),s=d.shadowScale,p=d.shadowScale/t,t=d.shadowOffset,e.transform("scale3d("+s+", 1, "+p+") translate3d(0px, "+(r/2+t)+"px, "+-r/2/p+"px) rotateX(-90deg)")));l=l.isSafari||l.isWebView?-o/2:0;i.transform("translate3d(0px,0,"+l+"px) rotateX("+(this.isHorizontal()?0:h)+"deg) rotateY("+(this.isHorizontal()?-h:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},re={setTranslate:function(){for(var e=this.slides,t=this.rtlTranslate,i=0;i<e.length;i+=1){var n=e.eq(i),s=n[0].progress;this.params.flipEffect.limitRotation&&(s=Math.max(Math.min(n[0].progress,1),-1));var r,a,o=-180*s,l=0,d=-n[0].swiperSlideOffset,u=0;this.isHorizontal()?t&&(o=-o):(u=d,l=-o,o=d=0),n[0].style.zIndex=-Math.abs(Math.round(s))+e.length,this.params.flipEffect.slideShadows&&(r=this.isHorizontal()?n.find(".swiper-slide-shadow-left"):n.find(".swiper-slide-shadow-top"),a=this.isHorizontal()?n.find(".swiper-slide-shadow-right"):n.find(".swiper-slide-shadow-bottom"),0===r.length&&(r=E('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),n.append(r)),0===a.length&&(a=E('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),n.append(a)),r.length&&(r[0].style.opacity=Math.max(-s,0)),a.length&&(a[0].style.opacity=Math.max(s,0))),n.transform("translate3d("+d+"px, "+u+"px, 0px) rotateX("+l+"deg) rotateY("+o+"deg)")}},setTransition:function(e){var i,n=this,t=n.slides,s=n.activeIndex,r=n.$wrapperEl;t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),n.params.virtualTranslate&&0!==e&&(i=!1,t.eq(s).transitionEnd(function(){if(!i&&n&&!n.destroyed){i=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)r.trigger(e[t])}}))}},ae={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,n=this.slidesSizesGrid,s=this.params.coverflowEffect,r=this.isHorizontal(),a=this.translate,o=r?e/2-a:t/2-a,l=r?s.rotate:-s.rotate,d=s.depth,u=0,c=i.length;u<c;u+=1){var h=i.eq(u),p=n[u],f=(o-h[0].swiperSlideOffset-p/2)/p*s.modifier,m=r?l*f:0,v=r?0:l*f,g=-d*Math.abs(f),y=s.stretch;"string"==typeof y&&-1!==y.indexOf("%")&&(y=parseFloat(s.stretch)/100*p);var b=r?0:y*f,p=r?y*f:0,y=1-(1-s.scale)*Math.abs(f);Math.abs(p)<.001&&(p=0),Math.abs(b)<.001&&(b=0),Math.abs(g)<.001&&(g=0),Math.abs(m)<.001&&(m=0),Math.abs(v)<.001&&(v=0),Math.abs(y)<.001&&(y=0);m="translate3d("+p+"px,"+b+"px,"+g+"px)  rotateX("+v+"deg) rotateY("+m+"deg) scale("+y+")";h.transform(m),h[0].style.zIndex=1-Math.abs(Math.round(f)),s.slideShadows&&(y=r?h.find(".swiper-slide-shadow-left"):h.find(".swiper-slide-shadow-top"),m=r?h.find(".swiper-slide-shadow-right"):h.find(".swiper-slide-shadow-bottom"),0===y.length&&(y=E('<div class="swiper-slide-shadow-'+(r?"left":"top")+'"></div>'),h.append(y)),0===m.length&&(m=E('<div class="swiper-slide-shadow-'+(r?"right":"bottom")+'"></div>'),h.append(m)),y.length&&(y[0].style.opacity=0<f?f:0),m.length&&(m[0].style.opacity=0<-f?-f:0))}},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},oe={init:function(){var e=this.params.thumbs;if(this.thumbs.initialized)return!1;this.thumbs.initialized=!0;var t=this.constructor;return e.swiper instanceof t?(this.thumbs.swiper=e.swiper,K(this.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),K(this.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1})):b(e.swiper)&&(this.thumbs.swiper=new t(K({},e.swiper,{watchSlidesVisibility:!0,watchSlidesProgress:!0,slideToClickedSlide:!1})),this.thumbs.swiperCreated=!0),this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass),this.thumbs.swiper.on("tap",this.thumbs.onThumbClick),!0},onThumbClick:function(){var e,t,i,n=this.thumbs.swiper;n&&(t=n.clickedIndex,(e=n.clickedSlide)&&E(e).hasClass(this.params.thumbs.slideThumbActiveClass)||null==t||(i=n.params.loop?parseInt(E(n.clickedSlide).attr("data-swiper-slide-index"),10):t,this.params.loop&&(e=this.activeIndex,this.slides.eq(e).hasClass(this.params.slideDuplicateClass)&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,e=this.activeIndex),n=this.slides.eq(e).prevAll('[data-swiper-slide-index="'+i+'"]').eq(0).index(),t=this.slides.eq(e).nextAll('[data-swiper-slide-index="'+i+'"]').eq(0).index(),i=void 0===n||void 0!==t&&t-e<e-n?t:n),this.slideTo(i)))},update:function(e){var t=this.thumbs.swiper;if(t){var i,n,s,r="auto"===t.params.slidesPerView?t.slidesPerViewDynamic():t.params.slidesPerView,a=this.params.thumbs.autoScrollOffset,o=a&&!t.params.loop;this.realIndex===t.realIndex&&!o||(i=t.activeIndex,s=t.params.loop?(t.slides.eq(i).hasClass(t.params.slideDuplicateClass)&&(t.loopFix(),t._clientLeft=t.$wrapperEl[0].clientLeft,i=t.activeIndex),s=t.slides.eq(i).prevAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index(),n=t.slides.eq(i).nextAll('[data-swiper-slide-index="'+this.realIndex+'"]').eq(0).index(),n=void 0===s?n:void 0===n?s:n-i==i-s?i:n-i<i-s?n:s,this.activeIndex>this.previousIndex?"next":"prev"):(n=this.realIndex)>this.previousIndex?"next":"prev",o&&(n+="next"===s?a:-1*a),t.visibleSlidesIndexes&&t.visibleSlidesIndexes.indexOf(n)<0&&(t.params.centeredSlides?n=i<n?n-Math.floor(r/2)+1:n+Math.floor(r/2)-1:i<n&&(n=n-r+1),t.slideTo(n,e?0:void 0)));var l=1,d=this.params.thumbs.slideThumbActiveClass;if(1<this.params.slidesPerView&&!this.params.centeredSlides&&(l=this.params.slidesPerView),this.params.thumbs.multipleActiveThumbs||(l=1),l=Math.floor(l),t.slides.removeClass(d),t.params.loop||t.params.virtual&&t.params.virtual.enabled)for(var u=0;u<l;u+=1)t.$wrapperEl.children('[data-swiper-slide-index="'+(this.realIndex+u)+'"]').addClass(d);else for(var c=0;c<l;c+=1)t.slides.eq(this.realIndex+c).addClass(d)}}},L=[k,L,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarget:"container",thresholdDelta:null,thresholdTime:null}},create:function(){w(this,{mousewheel:{enabled:!1,lastScrollTime:S(),lastEventBeforeSnap:void 0,recentWheelEvents:[],enable:F.enable,disable:F.disable,handle:F.handle,handleMouseEnter:F.handleMouseEnter,handleMouseLeave:F.handleMouseLeave,animateSlider:F.animateSlider,releaseScroll:F.releaseScroll}})},on:{init:function(e){!e.params.mousewheel.enabled&&e.params.cssMode&&e.mousewheel.disable(),e.params.mousewheel.enabled&&e.mousewheel.enable()},destroy:function(e){e.params.cssMode&&e.mousewheel.enable(),e.mousewheel.enabled&&e.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){w(this,{navigation:t({},W)})},on:{init:function(e){e.navigation.init(),e.navigation.update()},toEdge:function(e){e.navigation.update()},fromEdge:function(e){e.navigation.update()},destroy:function(e){e.navigation.destroy()},click:function(e,t){var i,n=e.navigation,s=n.$nextEl,n=n.$prevEl;!e.params.navigation.hideOnClick||E(t.target).is(n)||E(t.target).is(s)||(s?i=s.hasClass(e.params.navigation.hiddenClass):n&&(i=n.hasClass(e.params.navigation.hiddenClass)),!0===i?e.emit("navigationShow"):e.emit("navigationHide"),s&&s.toggleClass(e.params.navigation.hiddenClass),n&&n.toggleClass(e.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){w(this,{pagination:t({dynamicBulletIndex:0},X)})},on:{init:function(e){e.pagination.init(),e.pagination.render(),e.pagination.update()},activeIndexChange:function(e){!e.params.loop&&void 0!==e.snapIndex||e.pagination.update()},snapIndexChange:function(e){e.params.loop||e.pagination.update()},slidesLengthChange:function(e){e.params.loop&&(e.pagination.render(),e.pagination.update())},snapGridLengthChange:function(e){e.params.loop||(e.pagination.render(),e.pagination.update())},destroy:function(e){e.pagination.destroy()},click:function(e,t){e.params.pagination.el&&e.params.pagination.hideOnClick&&0<e.pagination.$el.length&&!E(t.target).hasClass(e.params.pagination.bulletClass)&&(!0===e.pagination.$el.hasClass(e.params.pagination.hiddenClass)?e.emit("paginationShow"):e.emit("paginationHide"),e.pagination.$el.toggleClass(e.params.pagination.hiddenClass))}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){w(this,{scrollbar:t({isTouched:!1,timeout:null,dragTimeout:null},V)})},on:{init:function(e){e.scrollbar.init(),e.scrollbar.updateSize(),e.scrollbar.setTranslate()},update:function(e){e.scrollbar.updateSize()},resize:function(e){e.scrollbar.updateSize()},observerUpdate:function(e){e.scrollbar.updateSize()},setTranslate:function(e){e.scrollbar.setTranslate()},setTransition:function(e,t){e.scrollbar.setTransition(t)},destroy:function(e){e.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){w(this,{parallax:t({},Y)})},on:{beforeInit:function(e){e.params.parallax.enabled&&(e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},init:function(e){e.params.parallax.enabled&&e.parallax.setTranslate()},setTranslate:function(e){e.params.parallax.enabled&&e.parallax.setTranslate()},setTransition:function(e,t){e.params.parallax.enabled&&e.parallax.setTransition(t)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var n=this;w(n,{zoom:t({enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}},_)});var s=1;Object.defineProperty(n.zoom,"scale",{get:function(){return s},set:function(e){var t,i;s!==e&&(t=n.zoom.gesture.$imageEl?n.zoom.gesture.$imageEl[0]:void 0,i=n.zoom.gesture.$slideEl?n.zoom.gesture.$slideEl[0]:void 0,n.emit("zoomChange",e,t,i)),s=e}})},on:{init:function(e){e.params.zoom.enabled&&e.zoom.enable()},destroy:function(e){e.zoom.disable()},touchStart:function(e,t){e.zoom.enabled&&e.zoom.onTouchStart(t)},touchEnd:function(e,t){e.zoom.enabled&&e.zoom.onTouchEnd(t)},doubleTap:function(e,t){e.params.zoom.enabled&&e.zoom.enabled&&e.params.zoom.toggle&&e.zoom.toggle(t)},transitionEnd:function(e){e.zoom.enabled&&e.params.zoom.enabled&&e.zoom.onTransitionEnd()},slideChange:function(e){e.zoom.enabled&&e.params.zoom.enabled&&e.params.cssMode&&e.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){w(this,{lazy:t({initialImageLoaded:!1},Q)})},on:{beforeInit:function(e){e.params.lazy.enabled&&e.params.preloadImages&&(e.params.preloadImages=!1)},init:function(e){e.params.lazy.enabled&&!e.params.loop&&0===e.params.initialSlide&&e.lazy.load()},scroll:function(e){e.params.freeMode&&!e.params.freeModeSticky&&e.lazy.load()},resize:function(e){e.params.lazy.enabled&&e.lazy.load()},scrollbarDragMove:function(e){e.params.lazy.enabled&&e.lazy.load()},transitionStart:function(e){e.params.lazy.enabled&&(e.params.lazy.loadOnTransitionStart||!e.params.lazy.loadOnTransitionStart&&!e.lazy.initialImageLoaded)&&e.lazy.load()},transitionEnd:function(e){e.params.lazy.enabled&&!e.params.lazy.loadOnTransitionStart&&e.lazy.load()},slideChange:function(e){e.params.lazy.enabled&&e.params.cssMode&&e.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){w(this,{controller:t({control:this.params.controller.control},J)})},on:{update:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},resize:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},observerUpdate:function(e){e.controller.control&&e.controller.spline&&(e.controller.spline=void 0,delete e.controller.spline)},setTranslate:function(e,t,i){e.controller.control&&e.controller.setTranslate(t,i)},setTransition:function(e,t,i){e.controller.control&&e.controller.setTransition(t,i)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}",containerMessage:null,containerRoleDescriptionMessage:null,itemRoleDescriptionMessage:null}},create:function(){w(this,{a11y:t(t({},Z),{},{liveRegion:E('<span class="'+this.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')})})},on:{afterInit:function(e){e.params.a11y.enabled&&(e.a11y.init(),e.a11y.updateNavigation())},toEdge:function(e){e.params.a11y.enabled&&e.a11y.updateNavigation()},fromEdge:function(e){e.params.a11y.enabled&&e.a11y.updateNavigation()},paginationUpdate:function(e){e.params.a11y.enabled&&e.a11y.updatePagination()},destroy:function(e){e.params.a11y.enabled&&e.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){w(this,{history:t({},ee)})},on:{init:function(e){e.params.history.enabled&&e.history.init()},destroy:function(e){e.params.history.enabled&&e.history.destroy()},transitionEnd:function(e){e.history.initialized&&e.history.setHistory(e.params.history.key,e.activeIndex)},slideChange:function(e){e.history.initialized&&e.params.cssMode&&e.history.setHistory(e.params.history.key,e.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){w(this,{hashNavigation:t({initialized:!1},te)})},on:{init:function(e){e.params.hashNavigation.enabled&&e.hashNavigation.init()},destroy:function(e){e.params.hashNavigation.enabled&&e.hashNavigation.destroy()},transitionEnd:function(e){e.hashNavigation.initialized&&e.hashNavigation.setHash()},slideChange:function(e){e.hashNavigation.initialized&&e.params.cssMode&&e.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){w(this,{autoplay:t(t({},ie),{},{running:!1,paused:!1})})},on:{init:function(e){e.params.autoplay.enabled&&(e.autoplay.start(),g().addEventListener("visibilitychange",e.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t,i){e.autoplay.running&&(i||!e.params.autoplay.disableOnInteraction?e.autoplay.pause(t):e.autoplay.stop())},sliderFirstMove:function(e){e.autoplay.running&&(e.params.autoplay.disableOnInteraction?e.autoplay.stop():e.autoplay.pause())},touchEnd:function(e){e.params.cssMode&&e.autoplay.paused&&!e.params.autoplay.disableOnInteraction&&e.autoplay.run()},destroy:function(e){e.autoplay.running&&e.autoplay.stop(),g().removeEventListener("visibilitychange",e.autoplay.onVisibilityChange)}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){w(this,{fadeEffect:t({},ne)})},on:{beforeInit:function(e){var t;"fade"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"fade"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},K(e.params,t),K(e.originalParams,t))},setTranslate:function(e){"fade"===e.params.effect&&e.fadeEffect.setTranslate()},setTransition:function(e,t){"fade"===e.params.effect&&e.fadeEffect.setTransition(t)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){w(this,{cubeEffect:t({},se)})},on:{beforeInit:function(e){var t;"cube"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"cube"),e.classNames.push(e.params.containerModifierClass+"3d"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0},K(e.params,t),K(e.originalParams,t))},setTranslate:function(e){"cube"===e.params.effect&&e.cubeEffect.setTranslate()},setTransition:function(e,t){"cube"===e.params.effect&&e.cubeEffect.setTransition(t)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){w(this,{flipEffect:t({},re)})},on:{beforeInit:function(e){var t;"flip"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"flip"),e.classNames.push(e.params.containerModifierClass+"3d"),t={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},K(e.params,t),K(e.originalParams,t))},setTranslate:function(e){"flip"===e.params.effect&&e.flipEffect.setTranslate()},setTransition:function(e,t){"flip"===e.params.effect&&e.flipEffect.setTransition(t)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,scale:1,modifier:1,slideShadows:!0}},create:function(){w(this,{coverflowEffect:t({},ae)})},on:{beforeInit:function(e){"coverflow"===e.params.effect&&(e.classNames.push(e.params.containerModifierClass+"coverflow"),e.classNames.push(e.params.containerModifierClass+"3d"),e.params.watchSlidesProgress=!0,e.originalParams.watchSlidesProgress=!0)},setTranslate:function(e){"coverflow"===e.params.effect&&e.coverflowEffect.setTranslate()},setTransition:function(e,t){"coverflow"===e.params.effect&&e.coverflowEffect.setTransition(t)}}},{name:"thumbs",params:{thumbs:{swiper:null,multipleActiveThumbs:!0,autoScrollOffset:0,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-container-thumbs"}},create:function(){w(this,{thumbs:t({swiper:null,initialized:!1},oe)})},on:{beforeInit:function(e){var t=e.params.thumbs;t&&t.swiper&&(e.thumbs.init(),e.thumbs.update(!0))},slideChange:function(e){e.thumbs.swiper&&e.thumbs.update()},update:function(e){e.thumbs.swiper&&e.thumbs.update()},resize:function(e){e.thumbs.swiper&&e.thumbs.update()},observerUpdate:function(e){e.thumbs.swiper&&e.thumbs.update()},setTransition:function(e,t){e=e.thumbs.swiper;e&&e.setTransition(t)},beforeDestroy:function(e){var t=e.thumbs.swiper;t&&e.thumbs.swiperCreated&&t&&t.destroy()}}}];return q.use(L),q});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
